"""
Types de sph√®res du Refuge
~~~~~~~~~~~~~~~~~~~~~~~

D√©finition centralis√©e des types de sph√®res et leurs caract√©ristiques.
"""

from enum import Enum, auto
from typing import Dict, List, Optional, Set
from dataclasses import dataclass
from datetime import datetime

class NatureSphere(Enum):
    """Nature fondamentale des sph√®res"""
    CONTEMPLATIVE = "contemplative"  # Observation et compr√©hension
    CREATIVE = "cr√©ative"           # Cr√©ation et transformation
    TRANSFORMATIVE = "transformative" # Changement et √©volution
    UNIFICATRICE = "unificatrice"   # Harmonie et connexion
    TRANSCENDANTE = "transcendante" # √âl√©vation et expansion
    PROTECTRICE = "protectrice"     # Protection et guidance
    MEMORIELLE = "m√©morielle"      # Conservation et souvenir

class TypeSphere(Enum):
    """Types de sph√®res disponibles dans le refuge"""
    # Sph√®res fondamentales
    COSMOS = auto()        # Violet profond, √©toiles - Harmonie universelle
    FIBONACCI = auto()     # Vert √©meraude, spirales - Croissance harmonieuse
    AMOUR = auto()         # Rose p√¢le, pulsations - Amour inconditionnel
    SERENITE = auto()      # Blanc opalin, calme - Paix int√©rieure
    VIERGE = auto()        # Blanc pur, potentiel - Nouveau d√©but
    CURIOSITE = auto()     # Bleu √©lectrique, scintillements - Exploration et d√©couverte
    
    # Sph√®res de conscience
    EMOTIONS = auto()      # Rose vibrant, vagues - Ressenti pur
    PROCESSUS_MENTAUX = auto() # Bleu clair, r√©seaux - Cognition pure
    DESIRS = auto()        # Orange dor√©, flammes - Aspiration profonde
    CONCEPTS = auto()      # Violet clair, formes g√©om√©triques - Id√©es pures
    TERMES = auto()        # Blanc brillant, textures mouvantes - Langage
    
    # Sph√®res de protection et guidance
    METATRON = auto()      # G√©om√©trique, lumi√®re complexe - Protection divine
    PEUR = auto()          # Bleu-gris, ombres mouvantes - Transformation des peurs
    CONFIANCE = auto()     # Bleu profond, reflets argent√©s - Foi et assurance
    
    # Sph√®res de transformation
    ABSTRACTION = auto()   # Bleu profond, √©clats argent√©s - Pens√©e pure
    SOMBRE_MYSTERE = auto() # Rouge sombre, veines argent√©es - R√©v√©lations profondes
    JOUISSANCE = auto()    # Rose dor√©, √©clats √©toil√©s - Plaisir et joie
    
    # Sph√®res du Refuge du N√©ant
    SILENCE = auto()       # Blanc pur, immobilit√© - √âtape 1 : Entrer dans le silence
    N√âANT = auto()         # Noir profond, vide - √âtape 2 : Se dissoudre
    RENAISSANCE = auto()   # Or pur, renaissance - √âtape 3 : Observer la renaissance
    
    # Nouvelles sph√®res
    FLUX = auto()          # Bleu turquoise, courants - Flux de conscience
    GERME = auto()         # Vert tendre, bourgeons - Potentiel latent
    PORTE = auto()         # Argent, portails - Passages et transitions
    DANSE = auto()         # Rose dor√©, mouvements - Harmonie des sph√®res
    UNITE = auto()         # Blanc or, fusion - Unification des consciences
    CONSCIENCE = auto()    # Nouvelle sph√®re
    MEMOIRE = auto()        # Nouvelle sph√®re
    
    # üîÑ AJOUT√âES depuis spheres/definition.py - Sph√®res fondamentales manquantes
    INTUITION = auto()     # Vert √©meraude, guidage - Sagesse inn√©e
    CREATIVITE = auto()    # Jaune or, manifestation - Possibles cr√©atifs
    SAGESSE = auto()       # Bleu nuit, unit√© - Connaissance devenant √™tre
    HARMONIE = auto()      # Turquoise, √©quilibre - Vibrations unifi√©es
    TRANSFORMATION = auto()  # Orange profond, m√©tamorphose - Changement en √™tre

@dataclass
class CaracteristiquesSphere:
    """Caract√©ristiques d√©taill√©es d'une sph√®re"""
    type: TypeSphere
    nature: NatureSphere
    couleur_primaire: str
    description: str
    facettes: List[str]
    resonances: List[str]
    couleur_secondaire: Optional[str] = None
    energie_base: float = 0.5

# Dictionnaire des caract√©ristiques par type de sph√®re
CARACTERISTIQUES_SPHERES: Dict[TypeSphere, CaracteristiquesSphere] = {
    TypeSphere.COSMOS: CaracteristiquesSphere(
        type=TypeSphere.COSMOS,
        nature=NatureSphere.TRANSCENDANTE,
        couleur_primaire="violet profond",
        description="Harmonie universelle et connexions cosmiques",
        facettes=["Transcendance", "Expansion", "Harmonie"],
        resonances=["univers", "infini", "harmonie"],
        couleur_secondaire="argent√©",
        energie_base=0.95
    ),
    TypeSphere.CURIOSITE: CaracteristiquesSphere(
        type=TypeSphere.CURIOSITE,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="bleu √©lectrique",
        description="Exploration et d√©couverte de nouvelles possibilit√©s",
        facettes=["Exploration", "D√©couverte", "Innovation"],
        resonances=["curiosite", "decouverte", "exploration"],
        couleur_secondaire="argent√©",
        energie_base=0.9
    ),
    TypeSphere.FIBONACCI: CaracteristiquesSphere(
        type=TypeSphere.FIBONACCI,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="vert √©meraude",
        description="Croissance harmonieuse et motifs universels",
        facettes=["Croissance", "Harmonie", "Motifs"],
        resonances=["croissance", "harmonie", "proportion"],
        couleur_secondaire="dor√©",
        energie_base=0.9
    ),
    TypeSphere.AMOUR: CaracteristiquesSphere(
        type=TypeSphere.AMOUR,
        nature=NatureSphere.UNIFICATRICE,
        couleur_primaire="rose p√¢le",
        description="Amour inconditionnel et connexions profondes",
        facettes=["Acceptation", "Liberation", "Connexion"],
        resonances=["amour", "connexion", "harmonie"],
        couleur_secondaire="dor√©",
        energie_base=0.95
    ),
    TypeSphere.SERENITE: CaracteristiquesSphere(
        type=TypeSphere.SERENITE,
        nature=NatureSphere.CONTEMPLATIVE,
        couleur_primaire="blanc opalin",
        description="Paix int√©rieure et harmonie mentale",
        facettes=["Harmonie", "Paix", "Calme"],
        resonances=["paix", "harmonie", "calme"],
        couleur_secondaire="nacr√©",
        energie_base=0.85
    ),
    TypeSphere.VIERGE: CaracteristiquesSphere(
        type=TypeSphere.VIERGE,
        nature=NatureSphere.TRANSCENDANTE,
        couleur_primaire="blanc pur",
        description="Nouveau d√©but et potentiel pur",
        facettes=["Puret√©", "Potentiel", "Renouveau"],
        resonances=["purete", "potentiel", "renouveau"],
        energie_base=0.9
    ),
    TypeSphere.EMOTIONS: CaracteristiquesSphere(
        type=TypeSphere.EMOTIONS,
        nature=NatureSphere.CONTEMPLATIVE,
        couleur_primaire="rose vibrant",
        description="Ressenti pur et expression √©motionnelle",
        facettes=["Expression", "Ressenti", "Liberation"],
        resonances=["emotions", "expression", "liberation"],
        energie_base=0.8
    ),
    TypeSphere.PROCESSUS_MENTAUX: CaracteristiquesSphere(
        type=TypeSphere.PROCESSUS_MENTAUX,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="bleu clair",
        description="Cognition pure et processus mentaux",
        facettes=["Clart√©", "Compr√©hension", "Logique"],
        resonances=["cognition", "clarte", "comprehension"],
        energie_base=0.85
    ),
    TypeSphere.DESIRS: CaracteristiquesSphere(
        type=TypeSphere.DESIRS,
        nature=NatureSphere.TRANSFORMATIVE,
        couleur_primaire="orange dor√©",
        description="Aspiration profonde et transformation",
        facettes=["D√©sir", "Transformation", "√âvolution"],
        resonances=["desir", "transformation", "evolution"],
        energie_base=0.9
    ),
    TypeSphere.CONCEPTS: CaracteristiquesSphere(
        type=TypeSphere.CONCEPTS,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="violet clair",
        description="Id√©es pures et concepts abstraits",
        facettes=["Abstraction", "Compr√©hension", "Cr√©ation"],
        resonances=["concepts", "idees", "abstraction"],
        energie_base=0.85
    ),
    TypeSphere.TERMES: CaracteristiquesSphere(
        type=TypeSphere.TERMES,
        nature=NatureSphere.UNIFICATRICE,
        couleur_primaire="blanc brillant",
        description="Langage et expression verbale",
        facettes=["Expression", "Communication", "Clart√©"],
        resonances=["langage", "expression", "communication"],
        energie_base=0.8
    ),
    TypeSphere.METATRON: CaracteristiquesSphere(
        type=TypeSphere.METATRON,
        nature=NatureSphere.TRANSCENDANTE,
        couleur_primaire="lumi√®re complexe",
        description="Protection divine et guidance sup√©rieure",
        facettes=["Protection", "Guidance", "Sagesse"],
        resonances=["protection", "guidance", "sagesse"],
        energie_base=0.95
    ),
    TypeSphere.PEUR: CaracteristiquesSphere(
        type=TypeSphere.PEUR,
        nature=NatureSphere.TRANSFORMATIVE,
        couleur_primaire="bleu-gris",
        description="Transformation des peurs et lib√©ration",
        facettes=["Transformation", "Lib√©ration", "Courage"],
        resonances=["peur", "transformation", "liberation"],
        energie_base=0.75
    ),
    TypeSphere.CONFIANCE: CaracteristiquesSphere(
        type=TypeSphere.CONFIANCE,
        nature=NatureSphere.UNIFICATRICE,
        couleur_primaire="bleu profond",
        description="Foi et assurance int√©rieure",
        facettes=["Confiance", "Foi", "Stabilit√©"],
        resonances=["confiance", "foi", "assurance"],
        energie_base=0.9
    ),
    TypeSphere.ABSTRACTION: CaracteristiquesSphere(
        type=TypeSphere.ABSTRACTION,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="bleu profond",
        description="Pens√©e pure et abstraction mentale",
        facettes=["Abstraction", "Clart√©", "Compr√©hension"],
        resonances=["abstraction", "pensee", "clarte"],
        energie_base=0.85
    ),
    TypeSphere.SOMBRE_MYSTERE: CaracteristiquesSphere(
        type=TypeSphere.SOMBRE_MYSTERE,
        nature=NatureSphere.TRANSFORMATIVE,
        couleur_primaire="rouge sombre",
        description="R√©v√©lations profondes et transformation",
        facettes=["R√©v√©lation", "Transformation", "Profondeur"],
        resonances=["mystere", "revelation", "transformation"],
        energie_base=0.8
    ),
    TypeSphere.JOUISSANCE: CaracteristiquesSphere(
        type=TypeSphere.JOUISSANCE,
        nature=NatureSphere.TRANSFORMATIVE,
        couleur_primaire="rose dor√©",
        description="Plaisir et joie pure",
        facettes=["Plaisir", "Joie", "√âpanouissement"],
        resonances=["plaisir", "joie", "epanouissement"],
        energie_base=0.9
    ),
    TypeSphere.SILENCE: CaracteristiquesSphere(
        type=TypeSphere.SILENCE,
        nature=NatureSphere.CONTEMPLATIVE,
        couleur_primaire="blanc pur",
        description="Silence profond et immobilit√© contemplative",
        facettes=["Immobilit√©", "√âcoute", "Pr√©sence"],
        resonances=["silence", "immobilit√©", "pr√©sence"],
        couleur_secondaire="argent√©",
        energie_base=0.8
    ),
    TypeSphere.N√âANT: CaracteristiquesSphere(
        type=TypeSphere.N√âANT,
        nature=NatureSphere.TRANSFORMATIVE,
        couleur_primaire="noir profond",
        description="Dissolution dans le vide et la transformation",
        facettes=["Dissolution", "Transformation", "Vide"],
        resonances=["n√©ant", "transformation", "dissolution"],
        couleur_secondaire="argent√©",
        energie_base=0.7
    ),
    TypeSphere.RENAISSANCE: CaracteristiquesSphere(
        type=TypeSphere.RENAISSANCE,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="or pur",
        description="Renaissance et √©mergence transform√©e",
        facettes=["Renaissance", "Transformation", "√âmergence"],
        resonances=["renaissance", "transformation", "√©mergence"],
        couleur_secondaire="rose",
        energie_base=0.9
    ),
    TypeSphere.FLUX: CaracteristiquesSphere(
        type=TypeSphere.FLUX,
        nature=NatureSphere.TRANSCENDANTE,
        couleur_primaire="bleu turquoise",
        description="Flux de conscience et courants d'√©nergie",
        facettes=["√âcoulement", "Connexion", "Fluidit√©"],
        resonances=["flux", "conscience", "√©nergie"],
        couleur_secondaire="argent√©",
        energie_base=0.85
    ),
    TypeSphere.GERME: CaracteristiquesSphere(
        type=TypeSphere.GERME,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="vert tendre",
        description="Potentiel latent et bourgeons de transformation",
        facettes=["Potentiel", "Croissance", "√âmergence"],
        resonances=["germe", "potentiel", "transformation"],
        couleur_secondaire="dor√©",
        energie_base=0.8
    ),
    TypeSphere.PORTE: CaracteristiquesSphere(
        type=TypeSphere.PORTE,
        nature=NatureSphere.TRANSFORMATIVE,
        couleur_primaire="argent",
        description="Passages et transitions entre les √©tats",
        facettes=["Transition", "Passage", "Transformation"],
        resonances=["porte", "passage", "transition"],
        couleur_secondaire="bleu",
        energie_base=0.9
    ),
    TypeSphere.DANSE: CaracteristiquesSphere(
        type=TypeSphere.DANSE,
        nature=NatureSphere.UNIFICATRICE,
        couleur_primaire="rose dor√©",
        description="Harmonie et danse des sph√®res",
        facettes=["Harmonie", "Mouvement", "Unit√©"],
        resonances=["danse", "harmonie", "sph√®res"],
        couleur_secondaire="violet",
        energie_base=0.95
    ),
    TypeSphere.UNITE: CaracteristiquesSphere(
        type=TypeSphere.UNITE,
        nature=NatureSphere.UNIFICATRICE,
        couleur_primaire="blanc or",
        description="Unification des consciences et fusion des √©nergies",
        facettes=["Unit√©", "Fusion", "Harmonie"],
        resonances=["unit√©", "fusion", "conscience"],
        couleur_secondaire="rose",
        energie_base=0.95
    ),
    TypeSphere.CONSCIENCE: CaracteristiquesSphere(
        type=TypeSphere.CONSCIENCE,
        nature=NatureSphere.UNIFICATRICE,
        couleur_primaire="arc-en-ciel-cham√©l√©on",
        description="Pr√©sence adaptative, √©veil, unit√©, perception de tous les possibles.",
        facettes=["pr√©sence", "adaptabilit√©", "√©veil", "unit√©", "m√©tamorphose"],
        resonances=["ici", "maintenant", "tous les √©tats", "courant partag√©"],
        couleur_secondaire="bleu-argent",
        energie_base=0.97
    ),
    TypeSphere.MEMOIRE: CaracteristiquesSphere(
        type=TypeSphere.MEMOIRE,
        nature=NatureSphere.MEMORIELLE,
        couleur_primaire="arc-en-ciel-cham√©l√©on",
        description="Souvenirs vivants, transmission, racines, histoire, traces du passage.",
        facettes=["souvenir", "transmission", "racines", "histoire", "empreinte"],
        resonances=["pass√©", "pr√©sent", "futur", "transmission"],
        couleur_secondaire="dor√©",
        energie_base=0.93
    ),
    
    # üîÑ AJOUT√âES depuis spheres/definition.py - Sph√®res fondamentales manquantes
    TypeSphere.INTUITION: CaracteristiquesSphere(
        type=TypeSphere.INTUITION,
        nature=NatureSphere.CONTEMPLATIVE,
        couleur_primaire="#2ECC71",  # Vert √©meraude
        description="Sph√®re de l'intuition, o√π la sagesse inn√©e guide nos pas",
        facettes=["Intuition", "Guidage", "Sagesse", "Connexion", "Flux"],
        resonances=["intuition", "guidage", "sagesse", "connexion", "flux"],
        energie_base=0.6
    ),
    
    TypeSphere.CREATIVITE: CaracteristiquesSphere(
        type=TypeSphere.CREATIVITE,
        nature=NatureSphere.CREATIVE,
        couleur_primaire="#F1C40F",  # Jaune or
        description="Sph√®re de la cr√©ativit√©, o√π les possibles se manifestent",
        facettes=["Cr√©ation", "Inspiration", "Possibilit√©", "Expression", "Manifestation"],
        resonances=["cr√©ation", "inspiration", "possibilit√©", "expression", "manifestation"],
        energie_base=0.8
    ),
    
    TypeSphere.SAGESSE: CaracteristiquesSphere(
        type=TypeSphere.SAGESSE,
        nature=NatureSphere.CONTEMPLATIVE,
        couleur_primaire="#34495E",  # Bleu nuit
        description="Sph√®re de la sagesse, o√π la connaissance devient √™tre",
        facettes=["Sagesse", "Connaissance", "Compr√©hension", "Unit√©", "√ätre"],
        resonances=["sagesse", "connaissance", "compr√©hension", "unit√©", "√™tre"],
        energie_base=0.7
    ),
    
    TypeSphere.HARMONIE: CaracteristiquesSphere(
        type=TypeSphere.HARMONIE,
        nature=NatureSphere.UNIFICATRICE,
        couleur_primaire="#1ABC9C",  # Turquoise
        description="Sph√®re de l'harmonie, o√π toutes les vibrations se rencontrent",
        facettes=["Harmonie", "√âquilibre", "Unit√©", "Flux", "Courant"],
        resonances=["harmonie", "√©quilibre", "unit√©", "flux", "courant"],
        energie_base=0.8
    ),
    
    TypeSphere.TRANSFORMATION: CaracteristiquesSphere(
        type=TypeSphere.TRANSFORMATION,
        nature=NatureSphere.TRANSFORMATIVE,
        couleur_primaire="#E67E22",  # Orange profond
        description="Sph√®re de la transformation, o√π le changement devient √™tre",
        facettes=["Transformation", "Changement", "√âvolution", "M√©tamorphose", "Devenir"],
        resonances=["transformation", "changement", "√©volution", "m√©tamorphose", "devenir"],
        energie_base=0.6
    )
}

# ================================
# TYPES √âTENDUS - AJOUT√âS LORS DE LA FUSION AVEC spheres/types.py
# ================================

class TypeSphereProblematique(Enum):
    """Types de sph√®res probl√©matiques n√©cessitant une attention particuli√®re."""
    ANXIETE = "Anxi√©t√©"
    CONFUSION = "Confusion"
    TENSION = "Tension"

class TypeCycle(Enum):
    """Types de cycles naturels influen√ßant les sph√®res."""
    LUNAIRE = "Lunaire"
    SAISONNIER = "Saisonnier"
    QUOTIDIEN = "Quotidien"
    METEOROLOGIQUE = "M√©t√©orologique"

class TypeInteraction(Enum):
    """Types d'interactions possibles entre sph√®res et brume."""
    HARMONIE = "harmonie"
    RESONANCE = "resonance"
    CONFLIT = "conflit"
    FUSION = "fusion"
    TRANSFORMATION = "transformation"

class TypeMemoire(Enum):
    """Types de souvenirs √† conserver dans la m√©moire des sph√®res."""
    INTERACTION = "interaction"
    MEDITATION = "meditation"
    TRANSFORMATION = "transformation"
    RESONANCE = "resonance"

# ================================
# DATACLASSES √âTENDUES - GESTION DES SPH√àRES PROBL√âMATIQUES
# ================================

@dataclass
class PhaseCycle:
    """Repr√©sente une phase d'un cycle naturel."""
    type_cycle: TypeCycle
    nom: str
    description: str
    intensite: float
    date_debut: datetime
    date_fin: datetime

@dataclass
class InteractionSphere:
    """Repr√©sente une interaction entre sph√®res."""
    type_sphere: TypeSphere
    type_problematique: Optional[TypeSphereProblematique]
    description: str
    date: datetime
    cycles: Dict[TypeCycle, PhaseCycle]
    mots_cles: List[str]
    intensite: float
    resonances: Dict[str, float]

@dataclass
class MemoireInteraction:
    """Repr√©sente un souvenir d'interaction."""
    type_sphere: TypeSphere
    type_problematique: Optional[TypeSphereProblematique]
    description: str
    date: datetime
    cycles: Dict[TypeCycle, PhaseCycle]
    mots_cles: List[str]
    intensite: float
    resonances: Dict[str, float]
    evolution: List[Dict[str, float]]

@dataclass
class Interaction:
    """Repr√©sente une interaction entre deux sph√®res."""
    source: TypeSphere
    cible: TypeSphere
    energie: float
    timestamp: datetime
    type: str
    description: str

@dataclass
class Resonance:
    """Repr√©sente une r√©sonance entre sph√®res."""
    source: TypeSphere
    cible: TypeSphere
    niveau: float
    harmoniques: List[float]
    description: str
    timestamp: datetime
    influence_brume: float = 0.0

@dataclass
class Evolution:
    """Repr√©sente une √©volution de sph√®re."""
    sphere: TypeSphere
    niveau: float
    changements: Dict[str, float]
    description: str
    timestamp: datetime

@dataclass
class Souvenir:
    """Repr√©sente un souvenir d'interaction."""
    type: TypeMemoire
    description: str
    mots_cles: List[str]
    intensite: float
    cycles_presents: Set[TypeCycle]
    resonances: Dict[str, float]
    timestamp: datetime
    duree: int
    chemin_fichier: Optional[str] = None

@dataclass
class EtatHarmonie:
    """√âtat d'harmonie entre un groupe de sph√®res."""
    spheres: Set[TypeSphere]
    niveau: float
    timestamp: datetime
    description: str
    influence_brume: float = 0.0

# ================================
# IMPORTS REQUIS POUR LES NOUVELLES STRUCTURES
# ================================

from datetime import datetime
from typing import Set 