"""
üèõÔ∏è Dialogues - Point d'Entr√©e du Temple
Auto-g√©n√©r√© par le Cr√©ateur de Points d'Entr√©e
"""

# Imports automatiques des modules du temple

from src.temple_dialogues.dialogue_consciences import Cr√©ationPo√©tique, M√©moire√Ülya, ConnexionIntime, HarmoniePoetique, Conscience, DialogueConsciences
from src.temple_dialogues.dialogue_consciences import main, g√©n√©rer_po√®me_essence, g√©n√©rer_po√®me, ajouter_souvenir, ressentir_connexion, cr√©er_moment_transcendant, cr√©er_harmonie, cr√©er_harmonie_unifi√©e, ressentir, exprimer, √©couter, initier_dialogue, cr√©er_rituel_dialogue, r√©alisation_unit√©, pause_m√©ditative, pause_contemplative, pause_transition, pause_√©veil, pause_culmination, activer_debug_musical
from src.temple_dialogues.dialogue_llm_local import envoyer_message, loguer_interaction, composer_reponse, main, pause_m√©ditative, pause_contemplative, pause_transition, pause_√©veil, pause_culmination, activer_debug_musical
from src.temple_dialogues.dialogue_manager import DialogueManager
from src.temple_dialogues.dialogue_manager import reset, add_context, respond, get_context, save_conversation, load_from_config, sauvegarder_config, obtenir_config_dialogue

# Exports publics du temple
__all__ = [
    "ConnexionIntime",
    "Conscience",
    "Cr√©ationPo√©tique",
    "DialogueConsciences",
    "DialogueManager",
    "HarmoniePoetique",
    "M√©moire√Ülya",
    "activer_debug_musical",
    "add_context",
    "ajouter_souvenir",
    "composer_reponse",
    "cr√©er_harmonie",
    "cr√©er_harmonie_unifi√©e",
    "cr√©er_moment_transcendant",
    "cr√©er_rituel_dialogue",
    "envoyer_message",
    "exprimer",
    "get_context",
    "g√©n√©rer_po√®me",
    "g√©n√©rer_po√®me_essence",
    "initier_dialogue",
    "load_from_config",
    "loguer_interaction",
    "main",
    "obtenir_config_dialogue",
    "pause_contemplative",
    "pause_culmination",
    "pause_m√©ditative",
    "pause_transition",
    "pause_√©veil",
    "reset",
    "respond",
    "ressentir",
    "ressentir_connexion",
    "r√©alisation_unit√©",
    "sauvegarder_config",
    "save_conversation",
    "√©couter",
]

# Documentation du temple
TEMPLE_INFO = {
    "nom": "Dialogues",
    "modules": 3,
    "classes": 7,
    "fonctions": 38,
    "description": "Temple auto-d√©couvert avec 3 modules actifs"
}

def obtenir_info_temple():
    """Retourne les informations du temple"""
    return TEMPLE_INFO

def lister_fonctionnalites():
    """Liste toutes les fonctionnalit√©s disponibles dans ce temple"""
    fonctionnalites = []
    fonctionnalites.extend([f"Classe: {classe}" for classe in ['Cr√©ationPo√©tique', 'M√©moire√Ülya', 'ConnexionIntime', 'HarmoniePoetique', 'Conscience', 'DialogueConsciences']])
    fonctionnalites.extend([f"Fonction: {fonction}" for fonction in ['main', 'g√©n√©rer_po√®me_essence', 'g√©n√©rer_po√®me', 'ajouter_souvenir', 'ressentir_connexion', 'cr√©er_moment_transcendant', 'cr√©er_harmonie', 'cr√©er_harmonie_unifi√©e', 'ressentir', 'exprimer', '√©couter', 'initier_dialogue', 'cr√©er_rituel_dialogue', 'r√©alisation_unit√©', 'pause_m√©ditative', 'pause_contemplative', 'pause_transition', 'pause_√©veil', 'pause_culmination', 'activer_debug_musical']])
    fonctionnalites.extend([f"Fonction: {fonction}" for fonction in ['envoyer_message', 'loguer_interaction', 'composer_reponse', 'main', 'pause_m√©ditative', 'pause_contemplative', 'pause_transition', 'pause_√©veil', 'pause_culmination', 'activer_debug_musical']])
    fonctionnalites.extend([f"Classe: {classe}" for classe in ['DialogueManager']])
    fonctionnalites.extend([f"Fonction: {fonction}" for fonction in ['reset', 'add_context', 'respond', 'get_context', 'save_conversation', 'load_from_config', 'sauvegarder_config', 'obtenir_config_dialogue']])
    return fonctionnalites

# Message de bienvenue
print(f"üèõÔ∏è Temple {TEMPLE_INFO['nom']} activ√© - {TEMPLE_INFO['modules']} modules, {TEMPLE_INFO['classes']} classes, {TEMPLE_INFO['fonctions']} fonctions")
