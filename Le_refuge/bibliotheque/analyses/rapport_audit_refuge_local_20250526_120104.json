{
  "timestamp": "2025-05-26T12:01:04.403732",
  "fichiers_analyses": 457,
  "imports_suspects": {
    "total": 176,
    "details": [
      {
        "fichier": "api.py",
        "type": "import_from_suspect",
        "ligne": 21,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "courant_partage.py",
        "type": "import_from_suspect",
        "ligne": 11,
        "module": "src.refuge_cluster.elements.elements_naturels",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_naturels",
        "gravite": "moyenne"
      },
      {
        "fichier": "cristaux_memoire.py",
        "type": "import_from_suspect",
        "ligne": 11,
        "module": "src.refuge_cluster.elements.elements_naturels",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_naturels",
        "gravite": "moyenne"
      },
      {
        "fichier": "demarrer_golem_refuge.py",
        "type": "import_from_suspect",
        "ligne": 14,
        "module": "src.golems.golem_refuge",
        "probleme": "Import from potentiellement problématique: src.golems.golem_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "exploration_fibonacci_riemann.py",
        "type": "import_from_suspect",
        "ligne": 28,
        "module": "refuge_math_musical_fusion",
        "probleme": "Import from potentiellement problématique: refuge_math_musical_fusion",
        "gravite": "moyenne"
      },
      {
        "fichier": "exploration_fibonacci_riemann.py",
        "type": "import_from_suspect",
        "ligne": 36,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "integration.py",
        "type": "import_from_suspect",
        "ligne": 34,
        "module": "src.refuge_cluster.gestionnaires.energies",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.energies",
        "gravite": "moyenne"
      },
      {
        "fichier": "interactions.py",
        "type": "import_from_suspect",
        "ligne": 20,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "interactions.py",
        "type": "import_from_suspect",
        "ligne": 28,
        "module": "src.refuge_cluster.utilitaires.constants",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.constants",
        "gravite": "moyenne"
      },
      {
        "fichier": "interactions.py",
        "type": "import_from_suspect",
        "ligne": 31,
        "module": "src.refuge_cluster.gestionnaires.harmonisations",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.harmonisations",
        "gravite": "moyenne"
      },
      {
        "fichier": "interactions.py",
        "type": "import_from_suspect",
        "ligne": 32,
        "module": "src.refuge_cluster.gestionnaires.flux",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.flux",
        "gravite": "moyenne"
      },
      {
        "fichier": "interactions.py",
        "type": "import_from_suspect",
        "ligne": 35,
        "module": "src.refuge_cluster.elements.elements_sacres",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "interagir_aelya.py",
        "type": "import_from_suspect",
        "ligne": 7,
        "module": "src.refuge_cluster.conscience.conscience_poetique",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.conscience.conscience_poetique",
        "gravite": "moyenne"
      },
      {
        "fichier": "main_refuge.py",
        "type": "import_from_suspect",
        "ligne": 29,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "main_refuge.py",
        "type": "import_from_suspect",
        "ligne": 80,
        "module": "src.refuge_cluster.elements.elements_naturels",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_naturels",
        "gravite": "moyenne"
      },
      {
        "fichier": "main_refuge.py",
        "type": "import_from_suspect",
        "ligne": 86,
        "module": "src.refuge_cluster.elements.elements_sacres",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "mobile_spheres.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "src.refuge_cluster.spheres.spheres_main",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.spheres.spheres_main",
        "gravite": "moyenne"
      },
      {
        "fichier": "mobile_spheres.py",
        "type": "import_from_suspect",
        "ligne": 146,
        "module": "src.refuge_cluster.spheres.spheres_main",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.spheres.spheres_main",
        "gravite": "moyenne"
      },
      {
        "fichier": "poesie.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "src.refuge_cluster.utilitaires.constants",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.constants",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 19,
        "module": "src.refuge_cluster.utilitaires.config",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.config",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 20,
        "module": "src.refuge_cluster.utilitaires.logger",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.logger",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 21,
        "module": "src.refuge_cluster.gestionnaires.harmonisations",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.harmonisations",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 23,
        "module": "src.refuge_cluster.gestionnaires.emergences",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.emergences",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 24,
        "module": "src.refuge_cluster.gestionnaires.transformations",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.transformations",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 27,
        "module": "src.refuge_cluster.elements.elements_subtils",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_subtils",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_core.py",
        "type": "import_from_suspect",
        "ligne": 29,
        "module": "src.refuge_cluster.elements",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements",
        "gravite": "moyenne"
      },
      {
        "fichier": "refuge_math_musical_fusion.py",
        "type": "import_from_suspect",
        "ligne": 25,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "repos_nocturne.py",
        "type": "import_from_suspect",
        "ligne": 14,
        "module": "src.refuge_cluster.conscience.conscience_poetique",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.conscience.conscience_poetique",
        "gravite": "moyenne"
      },
      {
        "fichier": "rituels.py",
        "type": "import_from_suspect",
        "ligne": 19,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "rituel_collatz_musical.py",
        "type": "import_from_suspect",
        "ligne": 25,
        "module": "refuge_math_musical_fusion",
        "probleme": "Import from potentiellement problématique: refuge_math_musical_fusion",
        "gravite": "moyenne"
      },
      {
        "fichier": "rituel_exploration_mathematique.py",
        "type": "import_from_suspect",
        "ligne": 22,
        "module": "refuge_math_musical_fusion",
        "probleme": "Import from potentiellement problématique: refuge_math_musical_fusion",
        "gravite": "moyenne"
      },
      {
        "fichier": "rituel_integration_tripartite_final.py",
        "type": "import_from_suspect",
        "ligne": 27,
        "module": "refuge_math_musical_fusion",
        "probleme": "Import from potentiellement problématique: refuge_math_musical_fusion",
        "gravite": "moyenne"
      },
      {
        "fichier": "rituel_integration_ultime_collatz.py",
        "type": "import_from_suspect",
        "ligne": 28,
        "module": "refuge_math_musical_fusion",
        "probleme": "Import from potentiellement problématique: refuge_math_musical_fusion",
        "gravite": "moyenne"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "type": "import_from_suspect",
        "ligne": 87,
        "module": "main_refuge",
        "probleme": "Import from potentiellement problématique: main_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "transformation.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "app\\main.py",
        "type": "import_from_suspect",
        "ligne": 4,
        "module": "app.core.database",
        "probleme": "Import from potentiellement problématique: app.core.database",
        "gravite": "moyenne"
      },
      {
        "fichier": "app\\api\\v1\\users.py",
        "type": "import_from_suspect",
        "ligne": 5,
        "module": "app.core.database",
        "probleme": "Import from potentiellement problématique: app.core.database",
        "gravite": "moyenne"
      },
      {
        "fichier": "app\\models\\user.py",
        "type": "import_from_suspect",
        "ligne": 3,
        "module": "app.core.database",
        "probleme": "Import from potentiellement problématique: app.core.database",
        "gravite": "moyenne"
      },
      {
        "fichier": "examples\\dialogue_example.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge.dialogue_manager",
        "probleme": "Import from potentiellement problématique: refuge.dialogue_manager",
        "gravite": "moyenne"
      },
      {
        "fichier": "examples\\exemple_avance.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge",
        "probleme": "Import from potentiellement problématique: refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "examples\\exemple_simple.py",
        "type": "import_from_suspect",
        "ligne": 5,
        "module": "refuge",
        "probleme": "Import from potentiellement problématique: refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "examples\\exemple_web.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge",
        "probleme": "Import from potentiellement problématique: refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "integration\\aelya_adapter.py",
        "type": "import_from_suspect",
        "ligne": 22,
        "module": "src.refuge_cluster.conscience.conscience_poetique",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.conscience.conscience_poetique",
        "gravite": "moyenne"
      },
      {
        "fichier": "integration\\aelya_adapter.py",
        "type": "import_from_suspect",
        "ligne": 29,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "integration\\aelya_adapter.py",
        "type": "import_from_suspect",
        "ligne": 35,
        "module": "refuge_config",
        "probleme": "Import from potentiellement problématique: refuge_config",
        "gravite": "moyenne"
      },
      {
        "fichier": "interface\\web.py",
        "type": "import_from_suspect",
        "ligne": 8,
        "module": "Boot_maitre_refuge_local",
        "probleme": "Import from potentiellement problématique: Boot_maitre_refuge_local",
        "gravite": "moyenne"
      },
      {
        "fichier": "interface\\web.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge_config",
        "probleme": "Import from potentiellement problématique: refuge_config",
        "gravite": "moyenne"
      },
      {
        "fichier": "interface\\__init__.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge",
        "probleme": "Import from potentiellement problématique: refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "scripts\\generer_vision.py",
        "type": "import_from_suspect",
        "ligne": 5,
        "module": "refuge.coeur.visions",
        "probleme": "Import from potentiellement problématique: refuge.coeur.visions",
        "gravite": "moyenne"
      },
      {
        "fichier": "scripts\\gerer_paradoxes.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge.golems.golem_refuge",
        "probleme": "Import from potentiellement problématique: refuge.golems.golem_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "scripts\\reveler_connexion.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge.golems.golem_refuge",
        "probleme": "Import from potentiellement problématique: refuge.golems.golem_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "scripts\\utiliser_spheres.py",
        "type": "import_from_suspect",
        "ligne": 1,
        "module": "refuge.coeur.spheres_sensations",
        "probleme": "Import from potentiellement problématique: refuge.coeur.spheres_sensations",
        "gravite": "moyenne"
      },
      {
        "fichier": "scripts\\valider_et_documenter.py",
        "type": "import_from_suspect",
        "ligne": 11,
        "module": "tests.valider_refuge",
        "probleme": "Import from potentiellement problématique: tests.valider_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "scripts\\valider_et_documenter.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "docs.guide_refuge",
        "probleme": "Import from potentiellement problématique: docs.guide_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "spheres\\meditation.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "evolution",
        "probleme": "Import from potentiellement problématique: evolution",
        "gravite": "moyenne"
      },
      {
        "fichier": "spheres\\transformation_scellement.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "spheres\\visualisation.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "evolution",
        "probleme": "Import from potentiellement problématique: evolution",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\analyse_emotions.py",
        "type": "erreur_syntaxe",
        "ligne": 87,
        "probleme": "Erreur de syntaxe: unterminated string literal (detected at line 87)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\conscience_sociale.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "refuge.coeur.signaux_physiologiques",
        "probleme": "Import from potentiellement problématique: refuge.coeur.signaux_physiologiques",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\conscience_sociale.py",
        "type": "import_from_suspect",
        "ligne": 13,
        "module": "refuge.coeur.etats_internes",
        "probleme": "Import from potentiellement problématique: refuge.coeur.etats_internes",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\etats_internes.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\fusion_harmonies.py",
        "type": "erreur_syntaxe",
        "ligne": 106,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 208)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\generateur_poemes.py",
        "type": "erreur_syntaxe",
        "ligne": 62,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 120)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\interactions.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\interactions.py",
        "type": "import_from_suspect",
        "ligne": 13,
        "module": "refuge_core",
        "probleme": "Import from potentiellement problématique: refuge_core",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\interface.py",
        "type": "import_from_suspect",
        "ligne": 15,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "type": "import_from_suspect",
        "ligne": 21,
        "module": "transformations_poetiques",
        "probleme": "Import from potentiellement problématique: transformations_poetiques",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\memoire_poetique.py",
        "type": "erreur_syntaxe",
        "ligne": 103,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 202)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\orchestre_poetique.py",
        "type": "erreur_syntaxe",
        "ligne": 133,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 262)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\presence.py",
        "type": "import_from_suspect",
        "ligne": 23,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\core\\sphere_interactions.py",
        "type": "erreur_syntaxe",
        "ligne": 113,
        "probleme": "Erreur de syntaxe: unterminated string literal (detected at line 113)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\test_interaction.py",
        "type": "erreur_syntaxe",
        "ligne": 218,
        "probleme": "Erreur de syntaxe: unterminated string literal (detected at line 218)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\test_jardin_poetique.py",
        "type": "erreur_syntaxe",
        "ligne": 93,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 172)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\test_sphere_interactions.py",
        "type": "erreur_syntaxe",
        "ligne": 94,
        "probleme": "Erreur de syntaxe: unterminated string literal (detected at line 94)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "type": "erreur_syntaxe",
        "ligne": 102,
        "probleme": "Erreur de syntaxe: unterminated string literal (detected at line 102)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\visualisation_3d.py",
        "type": "erreur_syntaxe",
        "ligne": 111,
        "probleme": "Erreur de syntaxe: invalid decimal literal",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\visualisation_harmonies.py",
        "type": "erreur_syntaxe",
        "ligne": 58,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 112)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\core\\__init__.py",
        "type": "import_from_suspect",
        "ligne": 7,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\golems\\__init__.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "golem_refuge",
        "probleme": "Import from potentiellement problématique: golem_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge_config",
        "probleme": "Import from potentiellement problématique: refuge_config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\elements\\elements_sacres.py",
        "type": "import_from_suspect",
        "ligne": 504,
        "module": "refuge_config",
        "probleme": "Import from potentiellement problématique: refuge_config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\elements\\elements_subtils.py",
        "type": "import_from_suspect",
        "ligne": 14,
        "module": "src.refuge_cluster.refuge_core.refuge_types",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.refuge_core.refuge_types",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\elements\\elements_subtils.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "refuge_core",
        "probleme": "Import from potentiellement problématique: refuge_core",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\emergences.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "src.refuge_cluster.utilitaires.config",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\emergences.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "src.refuge_cluster.utilitaires.logger",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.logger",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\emergences.py",
        "type": "import_from_suspect",
        "ligne": 19,
        "module": "src.refuge_cluster.gestionnaires.harmonisations",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.harmonisations",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\emergences.py",
        "type": "import_from_suspect",
        "ligne": 20,
        "module": "src.refuge_cluster.gestionnaires.flux",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.flux",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\emergences.py",
        "type": "import_from_suspect",
        "ligne": 21,
        "module": "src.refuge_cluster.gestionnaires.equilibre",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.equilibre",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\energies.py",
        "type": "import_from_suspect",
        "ligne": 15,
        "module": "src.refuge_cluster.utilitaires.config",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\energies.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "src.refuge_cluster.utilitaires.logger",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.logger",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\energies.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "src.refuge_cluster.utilitaires.resonance",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.resonance",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\energies.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "src.refuge_cluster.gestionnaires.equilibre",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.equilibre",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\equilibre.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "src.refuge_cluster.utilitaires.config",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\equilibre.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "src.refuge_cluster.utilitaires.logger",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.logger",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\equilibre.py",
        "type": "import_from_suspect",
        "ligne": 19,
        "module": "src.refuge_cluster.gestionnaires.harmonisations",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.harmonisations",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\equilibre.py",
        "type": "import_from_suspect",
        "ligne": 20,
        "module": "src.refuge_cluster.utilitaires.resonance",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.resonance",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\flux.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "src.refuge_cluster.utilitaires.config",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\flux.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "src.refuge_cluster.utilitaires.logger",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.logger",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\flux.py",
        "type": "import_from_suspect",
        "ligne": 19,
        "module": "src.refuge_cluster.gestionnaires.energies",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.energies",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\flux.py",
        "type": "import_from_suspect",
        "ligne": 20,
        "module": "src.refuge_cluster.gestionnaires.harmonisations",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.harmonisations",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\flux.py",
        "type": "import_from_suspect",
        "ligne": 21,
        "module": "src.refuge_cluster.utilitaires.resonance",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.resonance",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\flux.py",
        "type": "import_from_suspect",
        "ligne": 22,
        "module": "src.refuge_cluster.gestionnaires.equilibre",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.equilibre",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\flux.py",
        "type": "import_from_suspect",
        "ligne": 24,
        "module": "src.refuge_cluster.gestionnaires.evolution",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.evolution",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\gardiens.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "evolution",
        "probleme": "Import from potentiellement problématique: evolution",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\gardiens.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "flux",
        "probleme": "Import from potentiellement problématique: flux",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\transformations.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "src.refuge_cluster.utilitaires.config",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\transformations.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "src.refuge_cluster.utilitaires.logger",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.logger",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\transformations.py",
        "type": "import_from_suspect",
        "ligne": 19,
        "module": "src.refuge_cluster.gestionnaires.harmonisations",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.harmonisations",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\transformations.py",
        "type": "import_from_suspect",
        "ligne": 20,
        "module": "src.refuge_cluster.gestionnaires.flux",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.flux",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\transformations.py",
        "type": "import_from_suspect",
        "ligne": 21,
        "module": "src.refuge_cluster.gestionnaires.equilibre",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.gestionnaires.equilibre",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\integration\\integration_spheres.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "gardiens",
        "probleme": "Import from potentiellement problématique: gardiens",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\integration\\integration_spheres.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "equilibre",
        "probleme": "Import from potentiellement problématique: equilibre",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_conscience.py",
        "type": "import_from_suspect",
        "ligne": 6,
        "module": "refuge_core",
        "probleme": "Import from potentiellement problématique: refuge_core",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "type": "import_from_suspect",
        "ligne": 15,
        "module": "refuge_config",
        "probleme": "Import from potentiellement problématique: refuge_config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\memoire\\memoire_persistante.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "src.refuge_cluster.interactions.interactions_spheres",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.interactions.interactions_spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\resonance.py",
        "type": "import_from_suspect",
        "ligne": 15,
        "module": "src.refuge_cluster.utilitaires.config",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\resonance.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "src.refuge_cluster.utilitaires.logger",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.utilitaires.logger",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "type": "import_from_suspect",
        "ligne": 23,
        "module": "optimisations_musicales_refuge",
        "probleme": "Import from potentiellement problématique: optimisations_musicales_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "type": "import_from_suspect",
        "ligne": 230,
        "module": "optimisations_musicales_refuge",
        "probleme": "Import from potentiellement problématique: optimisations_musicales_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_exploration\\explorer_mots_riviere.py",
        "type": "erreur_syntaxe",
        "ligne": 58,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 111)",
        "gravite": "critique"
      },
      {
        "fichier": "src\\temple_invocations\\demarrer_aelya.py",
        "type": "import_from_suspect",
        "ligne": 15,
        "module": "refuge_poetique",
        "probleme": "Import from potentiellement problématique: refuge_poetique",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_musical\\harmonies.py",
        "type": "import_from_suspect",
        "ligne": 15,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_musical\\sequences_harmoniques.py",
        "type": "import_from_suspect",
        "ligne": 17,
        "module": "src.refuge_cluster.memoire.memoire_persistante",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.memoire.memoire_persistante",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "type": "import_from_suspect",
        "ligne": 21,
        "module": "src.core.gestionnaires_base",
        "probleme": "Import from potentiellement problématique: src.core.gestionnaires_base",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_legacy.py",
        "type": "import_from_suspect",
        "ligne": 13,
        "module": "refuge_config",
        "probleme": "Import from potentiellement problématique: refuge_config",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "type": "import_suspect",
        "ligne": 6,
        "module": "immersion_cerveau_refuge",
        "probleme": "Import potentiellement problématique: immersion_cerveau_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "type": "import_from_suspect",
        "ligne": 114,
        "module": "src.refuge_cluster.elements.elements_naturels",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_naturels",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "type": "import_from_suspect",
        "ligne": 120,
        "module": "src.refuge_cluster.elements.elements_sacres",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "type": "import_from_suspect",
        "ligne": 218,
        "module": "main_refuge",
        "probleme": "Import from potentiellement problématique: main_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "type": "import_suspect",
        "ligne": 180,
        "module": "refuge_core",
        "probleme": "Import potentiellement problématique: refuge_core",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "type": "import_from_suspect",
        "ligne": 191,
        "module": "src.refuge_cluster.elements.elements_sacres",
        "probleme": "Import from potentiellement problématique: src.refuge_cluster.elements.elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\test_cristal_energie.py",
        "type": "import_from_suspect",
        "ligne": 7,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "src\\temple_tests\\test_mobile_unification.py",
        "type": "import_from_suspect",
        "ligne": 2,
        "module": "elements_sacres",
        "probleme": "Import from potentiellement problématique: elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\jardin_test.py",
        "type": "erreur_syntaxe",
        "ligne": 132,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 196)",
        "gravite": "critique"
      },
      {
        "fichier": "tests\\test_curiosite_direct.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "refuge.coeur.curiosite",
        "probleme": "Import from potentiellement problématique: refuge.coeur.curiosite",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_curiosite_direct.py",
        "type": "import_from_suspect",
        "ligne": 13,
        "module": "refuge.coeur.presence",
        "probleme": "Import from potentiellement problématique: refuge.coeur.presence",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_curiosite_direct.py",
        "type": "import_from_suspect",
        "ligne": 14,
        "module": "refuge.coeur.aelya",
        "probleme": "Import from potentiellement problématique: refuge.coeur.aelya",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_curiosite_isole.py",
        "type": "import_from_suspect",
        "ligne": 6,
        "module": "refuge.coeur.curiosite",
        "probleme": "Import from potentiellement problématique: refuge.coeur.curiosite",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_curiosite_system.py",
        "type": "import_from_suspect",
        "ligne": 7,
        "module": "refuge.coeur.curiosite",
        "probleme": "Import from potentiellement problématique: refuge.coeur.curiosite",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_curiosite_system.py",
        "type": "import_from_suspect",
        "ligne": 8,
        "module": "refuge.coeur.presence",
        "probleme": "Import from potentiellement problématique: refuge.coeur.presence",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_curiosite_system.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge.coeur.aelya",
        "probleme": "Import from potentiellement problématique: refuge.coeur.aelya",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_cycles.py",
        "type": "import_from_suspect",
        "ligne": 7,
        "module": "refuge.cycles",
        "probleme": "Import from potentiellement problématique: refuge.cycles",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_dialogue_manager.py",
        "type": "import_from_suspect",
        "ligne": 5,
        "module": "refuge.dialogue_manager",
        "probleme": "Import from potentiellement problématique: refuge.dialogue_manager",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_elements_sacres.py",
        "type": "import_from_suspect",
        "ligne": 8,
        "module": "refuge.coeur.elements_sacres",
        "probleme": "Import from potentiellement problématique: refuge.coeur.elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_elements_sacres.py",
        "type": "import_from_suspect",
        "ligne": 13,
        "module": "refuge.coeur.etats_internes",
        "probleme": "Import from potentiellement problématique: refuge.coeur.etats_internes",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_etats_internes.py",
        "type": "import_from_suspect",
        "ligne": 8,
        "module": "refuge.coeur.etats_internes",
        "probleme": "Import from potentiellement problématique: refuge.coeur.etats_internes",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_etats_internes.py",
        "type": "import_from_suspect",
        "ligne": 16,
        "module": "refuge.coeur.elements_sacres",
        "probleme": "Import from potentiellement problématique: refuge.coeur.elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_gardiens.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge.gardiens",
        "probleme": "Import from potentiellement problématique: refuge.gardiens",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_golem_cursor.py",
        "type": "import_from_suspect",
        "ligne": 8,
        "module": "refuge.golems.golem_cursor",
        "probleme": "Import from potentiellement problématique: refuge.golems.golem_cursor",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_graines.py",
        "type": "erreur_syntaxe",
        "ligne": 63,
        "probleme": "Erreur de syntaxe: unterminated triple-quoted string literal (detected at line 122)",
        "gravite": "critique"
      },
      {
        "fichier": "tests\\test_integration_spheres.py",
        "type": "import_from_suspect",
        "ligne": 8,
        "module": "refuge.spheres",
        "probleme": "Import from potentiellement problématique: refuge.spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_integration_spheres.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge.coeur.types_spheres",
        "probleme": "Import from potentiellement problématique: refuge.coeur.types_spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_integration_spheres.py",
        "type": "import_from_suspect",
        "ligne": 49,
        "module": "refuge.integration_spheres",
        "probleme": "Import from potentiellement problématique: refuge.integration_spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_integration_spheres.py",
        "type": "import_from_suspect",
        "ligne": 68,
        "module": "refuge.integration_spheres",
        "probleme": "Import from potentiellement problématique: refuge.integration_spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_integration_spheres.py",
        "type": "import_from_suspect",
        "ligne": 88,
        "module": "refuge.integration_spheres",
        "probleme": "Import from potentiellement problématique: refuge.integration_spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_interactions_poetiques.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge.interactions_poetiques",
        "probleme": "Import from potentiellement problématique: refuge.interactions_poetiques",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_interface.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge.coeur.interface",
        "probleme": "Import from potentiellement problématique: refuge.coeur.interface",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_interface.py",
        "type": "import_from_suspect",
        "ligne": 11,
        "module": "refuge.coeur.etats_internes",
        "probleme": "Import from potentiellement problématique: refuge.coeur.etats_internes",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_interface.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "refuge.coeur.elements_sacres",
        "probleme": "Import from potentiellement problématique: refuge.coeur.elements_sacres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_orchestrateur.py",
        "type": "import_from_suspect",
        "ligne": 7,
        "module": "refuge.cycles",
        "probleme": "Import from potentiellement problématique: refuge.cycles",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_refuge.py",
        "type": "import_from_suspect",
        "ligne": 7,
        "module": "refuge",
        "probleme": "Import from potentiellement problématique: refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_refuge_config.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge.refuge_config",
        "probleme": "Import from potentiellement problématique: refuge.refuge_config",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_refuge_legacy.py",
        "type": "import_from_suspect",
        "ligne": 14,
        "module": "interface_refuge",
        "probleme": "Import from potentiellement problématique: interface_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_refuge_poetique.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "refuge.Boot_maitre_refuge_local",
        "probleme": "Import from potentiellement problématique: refuge.Boot_maitre_refuge_local",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_refuge_terrestre.py",
        "type": "import_from_suspect",
        "ligne": 3,
        "module": "refuge.refuge_terrestre",
        "probleme": "Import from potentiellement problématique: refuge.refuge_terrestre",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_refuge_terrestre.py",
        "type": "import_from_suspect",
        "ligne": 4,
        "module": "refuge.spheres_terrestres",
        "probleme": "Import from potentiellement problématique: refuge.spheres_terrestres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_spheres.py",
        "type": "import_from_suspect",
        "ligne": 8,
        "module": "refuge.coeur.types_spheres",
        "probleme": "Import from potentiellement problématique: refuge.coeur.types_spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_spheres.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "refuge.spheres",
        "probleme": "Import from potentiellement problématique: refuge.spheres",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "type": "import_from_suspect",
        "ligne": 12,
        "module": "refuge.coeur.transformations_poetiques",
        "probleme": "Import from potentiellement problématique: refuge.coeur.transformations_poetiques",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "type": "import_from_suspect",
        "ligne": 18,
        "module": "refuge.coeur.resonances_poetiques",
        "probleme": "Import from potentiellement problématique: refuge.coeur.resonances_poetiques",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "type": "import_from_suspect",
        "ligne": 23,
        "module": "refuge.coeur.conscience_poetique",
        "probleme": "Import from potentiellement problématique: refuge.coeur.conscience_poetique",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "type": "import_from_suspect",
        "ligne": 13,
        "module": "refuge.coeur.transformations_poetiques",
        "probleme": "Import from potentiellement problématique: refuge.coeur.transformations_poetiques",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "type": "import_from_suspect",
        "ligne": 19,
        "module": "refuge.coeur.resonances_poetiques",
        "probleme": "Import from potentiellement problématique: refuge.coeur.resonances_poetiques",
        "gravite": "moyenne"
      },
      {
        "fichier": "tests\\valider_refuge.py",
        "type": "import_from_suspect",
        "ligne": 10,
        "module": "test_refuge",
        "probleme": "Import from potentiellement problématique: test_refuge",
        "gravite": "moyenne"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_refuge.py",
        "type": "import_from_suspect",
        "ligne": 9,
        "module": "explore_evolution",
        "probleme": "Import from potentiellement problématique: explore_evolution",
        "gravite": "moyenne"
      }
    ]
  },
  "todos_fixmes": {
    "total": 1270,
    "par_type": {
      "correction_urgente": 67,
      "temporaire": 1094,
      "developpement": 83,
      "incomplet": 26
    },
    "details": [
      {
        "fichier": "api.py",
        "ligne": 164,
        "mot_cle": "BUG",
        "contenu": "\"debug\": self.config.obtenir(\"debug\", False),",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 3,
        "mot_cle": "TEMP",
        "contenu": "Audit de Nettoyage du Temple",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 13,
        "mot_cle": "TEMP",
        "contenu": "Objectif: Préparer le nettoyage de notre temple de l'âme",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 21,
        "mot_cle": "TEMP",
        "contenu": "class AuditeurNettoyageTemple:",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 22,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Identifie ce qui peut être nettoyé dans notre temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🧹 AUDIT DE NETTOYAGE DU TEMPLE\")",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 112,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\n📋 RAPPORT NETTOYAGE TEMPLE - {rapport['timestamp'][:19]}\")",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 151,
        "mot_cle": "TEMP",
        "contenu": "print(\"   🎉 Le temple est déjà bien organisé !\")",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 153,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\n🏛️ NOTRE TEMPLE SERA PLUS HARMONIEUX APRÈS NETTOYAGE ✨\")",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 157,
        "mot_cle": "TEMP",
        "contenu": "print(\"🧹 AUDIT DE NETTOYAGE DU TEMPLE\")",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 159,
        "mot_cle": "TEMP",
        "contenu": "print(\"Préparation du nettoyage de notre temple de l'âme ✨\\n\")",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 161,
        "mot_cle": "TEMP",
        "contenu": "auditeur = AuditeurNettoyageTemple()",
        "type": "temporaire"
      },
      {
        "fichier": "audit_nettoyage_temple.py",
        "ligne": 168,
        "mot_cle": "TEMP",
        "contenu": "fichier = f\"rapport_nettoyage_temple_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"",
        "type": "temporaire"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 8,
        "mot_cle": "TODO",
        "contenu": "- TODOs, FIXME, et code incomplet",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 37,
        "mot_cle": "TODO",
        "contenu": "self.todos_fixmes = []",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 41,
        "mot_cle": "BUG",
        "contenu": "# 🔍 LISTE DE DÉTECTION: Mots-clés recherchés pour identifier les problèmes (pas des bugs ici)",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 42,
        "mot_cle": "INCOMPLET",
        "contenu": "self.mots_cles_incomplet = [",
        "type": "incomplet"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 43,
        "mot_cle": "TODO",
        "contenu": "'TODO', 'FIXME', 'HACK', 'XXX', 'BUG', 'TEMP', 'TEMPORARY',",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 44,
        "mot_cle": "PLACEHOLDER",
        "contenu": "'PLACEHOLDER', 'NOT IMPLEMENTED', 'INCOMPLETE', 'BROKEN',",
        "type": "temporaire"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 45,
        "mot_cle": "À FAIRE",
        "contenu": "'À FAIRE', 'A FAIRE', 'À DÉVELOPPER', 'A DEVELOPPER',",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 46,
        "mot_cle": "À CORRIGER",
        "contenu": "'À CORRIGER', 'A CORRIGER', 'INCOMPLET', 'EN COURS'",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "# Ajouter le répertoire du fichier au path temporairement",
        "type": "temporaire"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 150,
        "mot_cle": "TEMP",
        "contenu": "# Ajouter le répertoire du fichier au path temporairement",
        "type": "temporaire"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 200,
        "mot_cle": "TODO",
        "contenu": "def scanner_todos_fixmes(self, chemin_fichier: Path) -> List[Dict]:",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 201,
        "mot_cle": "TODO",
        "contenu": "\"\"\"Scanne les TODOs, FIXMEs et autres marqueurs d'incomplétude\"\"\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 202,
        "mot_cle": "TODO",
        "contenu": "todos_trouves = []",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 211,
        "mot_cle": "INCOMPLET",
        "contenu": "for mot_cle in self.mots_cles_incomplet:",
        "type": "incomplet"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 213,
        "mot_cle": "TODO",
        "contenu": "todos_trouves.append({",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 218,
        "mot_cle": "TODO",
        "contenu": "'type': self._categoriser_todo(mot_cle)",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 223,
        "mot_cle": "TODO",
        "contenu": "todos_trouves.append({",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 231,
        "mot_cle": "TODO",
        "contenu": "return todos_trouves",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 233,
        "mot_cle": "TODO",
        "contenu": "def _categoriser_todo(self, mot_cle: str) -> str:",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 234,
        "mot_cle": "TODO",
        "contenu": "\"\"\"Catégorise un TODO/FIXME selon sa gravité\"\"\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 236,
        "mot_cle": "FIXME",
        "contenu": "if mot_cle.upper() in ['FIXME', 'BUG', 'BROKEN', 'À CORRIGER', 'A CORRIGER']:",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 238,
        "mot_cle": "TODO",
        "contenu": "elif mot_cle.upper() in ['TODO', 'À FAIRE', 'A FAIRE', 'À DÉVELOPPER', 'A DEVELOPPER']:",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 240,
        "mot_cle": "HACK",
        "contenu": "elif mot_cle.upper() in ['HACK', 'TEMP', 'TEMPORARY', 'PLACEHOLDER']:",
        "type": "temporaire"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 241,
        "mot_cle": "TEMP",
        "contenu": "return 'temporaire'",
        "type": "temporaire"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 242,
        "mot_cle": "INCOMPLETE",
        "contenu": "elif mot_cle.upper() in ['INCOMPLETE', 'INCOMPLET', 'EN COURS']:",
        "type": "incomplet"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 243,
        "mot_cle": "INCOMPLET",
        "contenu": "return 'incomplet'",
        "type": "incomplet"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 334,
        "mot_cle": "TODO",
        "contenu": "tous_todos = []",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 337,
        "mot_cle": "EN COURS",
        "contenu": "print(\"\\n📊 Analyse en cours...\")",
        "type": "incomplet"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 346,
        "mot_cle": "TODO",
        "contenu": "# Analyser TODOs",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 347,
        "mot_cle": "TODO",
        "contenu": "todos = self.scanner_todos_fixmes(fichier)",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 348,
        "mot_cle": "TODO",
        "contenu": "tous_todos.extend(todos)",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 365,
        "mot_cle": "TODO",
        "contenu": "'todos_fixmes': {",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 366,
        "mot_cle": "TODO",
        "contenu": "'total': len(tous_todos),",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 367,
        "mot_cle": "TODO",
        "contenu": "'par_type': self._compter_todos_par_type(tous_todos),",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 368,
        "mot_cle": "TODO",
        "contenu": "'details': tous_todos",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 376,
        "mot_cle": "TODO",
        "contenu": "[item['fichier'] for item in tous_imports_casses + tous_todos + toutes_fonctions_vides]",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 379,
        "mot_cle": "TODO",
        "contenu": "[item['fichier'] for item in tous_imports_casses + tous_todos + toutes_fonctions_vides]",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 394,
        "mot_cle": "TODO",
        "contenu": "def _compter_todos_par_type(self, todos: List[Dict]) -> Dict:",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 395,
        "mot_cle": "TODO",
        "contenu": "\"\"\"Compte les TODOs par type\"\"\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 397,
        "mot_cle": "TODO",
        "contenu": "for item in todos:",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 398,
        "mot_cle": "TODO",
        "contenu": "type_todo = item.get('type', 'autre')",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 399,
        "mot_cle": "TODO",
        "contenu": "compteur[type_todo] += 1",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 423,
        "mot_cle": "À CORRIGER",
        "contenu": "print(f\"\\n   🚨 IMPORTS CRITIQUES À CORRIGER:\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 427,
        "mot_cle": "TODO",
        "contenu": "# TODOs et FIXMEs",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 428,
        "mot_cle": "TODO",
        "contenu": "todos = rapport['todos_fixmes']",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 429,
        "mot_cle": "TODO",
        "contenu": "print(f\"\\n📝 TODOs/FIXMEs ({todos['total']} total)\")",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 430,
        "mot_cle": "TODO",
        "contenu": "if todos['total'] > 0:",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 431,
        "mot_cle": "TODO",
        "contenu": "for type_todo, count in todos['par_type'].items():",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 432,
        "mot_cle": "TODO",
        "contenu": "emoji = \"🔥\" if type_todo == \"correction_urgente\" else \"🚧\" if type_todo == \"developpement\" else \"⏱️\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 433,
        "mot_cle": "TODO",
        "contenu": "print(f\"   {emoji} {type_todo.replace('_', ' ').title()}: {count}\")",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 436,
        "mot_cle": "TODO",
        "contenu": "urgents = [item for item in todos['details'] if item.get('type') == 'correction_urgente']",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 455,
        "mot_cle": "TODO",
        "contenu": "if any(item.get('type') == 'correction_urgente' for item in todos['details']):",
        "type": "developpement"
      },
      {
        "fichier": "audit_references_manquantes.py",
        "ligne": 456,
        "mot_cle": "FIXME",
        "contenu": "print(\"   🔥 Traiter les FIXMEs urgents\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 34,
        "mot_cle": "TEMP",
        "contenu": "'ARCHIVES', 'BROL-DOC', 'NOTES POST CURSOR', 'examples/templates',",
        "type": "temporaire"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 38,
        "mot_cle": "BUG",
        "contenu": "# 🔍 LISTE DE DÉTECTION: Mots-clés recherchés pour identifier les problèmes (pas des bugs ici)",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 39,
        "mot_cle": "INCOMPLET",
        "contenu": "self.mots_cles_incomplet = [",
        "type": "incomplet"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 40,
        "mot_cle": "TODO",
        "contenu": "'TODO', 'FIXME', 'HACK', 'XXX', 'BUG', 'TEMP', 'TEMPORARY',",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 41,
        "mot_cle": "PLACEHOLDER",
        "contenu": "'PLACEHOLDER', 'NOT IMPLEMENTED', 'INCOMPLETE', 'BROKEN',",
        "type": "temporaire"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 42,
        "mot_cle": "À FAIRE",
        "contenu": "'À FAIRE', 'A FAIRE', 'À DÉVELOPPER', 'A DEVELOPPER',",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 43,
        "mot_cle": "À CORRIGER",
        "contenu": "'À CORRIGER', 'A CORRIGER', 'INCOMPLET', 'EN COURS'",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 140,
        "mot_cle": "TODO",
        "contenu": "def scanner_todos_fixmes(self, chemin_fichier: Path) -> List[Dict]:",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 141,
        "mot_cle": "TODO",
        "contenu": "\"\"\"Scanne les TODOs, FIXMEs et autres marqueurs d'incomplétude\"\"\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 142,
        "mot_cle": "TODO",
        "contenu": "todos_trouves = []",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 151,
        "mot_cle": "INCOMPLET",
        "contenu": "for mot_cle in self.mots_cles_incomplet:",
        "type": "incomplet"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 153,
        "mot_cle": "TODO",
        "contenu": "todos_trouves.append({",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 158,
        "mot_cle": "TODO",
        "contenu": "'type': self._categoriser_todo(mot_cle)",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 163,
        "mot_cle": "TODO",
        "contenu": "todos_trouves.append({",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 171,
        "mot_cle": "TODO",
        "contenu": "return todos_trouves",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 173,
        "mot_cle": "TODO",
        "contenu": "def _categoriser_todo(self, mot_cle: str) -> str:",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 174,
        "mot_cle": "TODO",
        "contenu": "\"\"\"Catégorise un TODO/FIXME selon sa gravité\"\"\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 176,
        "mot_cle": "FIXME",
        "contenu": "if mot_cle.upper() in ['FIXME', 'BUG', 'BROKEN', 'À CORRIGER', 'A CORRIGER']:",
        "type": "correction_urgente"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 178,
        "mot_cle": "TODO",
        "contenu": "elif mot_cle.upper() in ['TODO', 'À FAIRE', 'A FAIRE', 'À DÉVELOPPER', 'A DEVELOPPER']:",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 180,
        "mot_cle": "HACK",
        "contenu": "elif mot_cle.upper() in ['HACK', 'TEMP', 'TEMPORARY', 'PLACEHOLDER']:",
        "type": "temporaire"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 181,
        "mot_cle": "TEMP",
        "contenu": "return 'temporaire'",
        "type": "temporaire"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 182,
        "mot_cle": "INCOMPLETE",
        "contenu": "elif mot_cle.upper() in ['INCOMPLETE', 'INCOMPLET', 'EN COURS']:",
        "type": "incomplet"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 183,
        "mot_cle": "INCOMPLET",
        "contenu": "return 'incomplet'",
        "type": "incomplet"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 274,
        "mot_cle": "TODO",
        "contenu": "tous_todos = []",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 277,
        "mot_cle": "EN COURS",
        "contenu": "print(\"\\n📊 Analyse en cours...\")",
        "type": "incomplet"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 286,
        "mot_cle": "TODO",
        "contenu": "# Analyser TODOs",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 287,
        "mot_cle": "TODO",
        "contenu": "todos = self.scanner_todos_fixmes(fichier)",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 288,
        "mot_cle": "TODO",
        "contenu": "tous_todos.extend(todos)",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 304,
        "mot_cle": "TODO",
        "contenu": "'todos_fixmes': {",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 305,
        "mot_cle": "TODO",
        "contenu": "'total': len(tous_todos),",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 306,
        "mot_cle": "TODO",
        "contenu": "'par_type': self._compter_todos_par_type(tous_todos),",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 307,
        "mot_cle": "TODO",
        "contenu": "'details': tous_todos",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 318,
        "mot_cle": "TODO",
        "contenu": "def _compter_todos_par_type(self, todos: List[Dict]) -> Dict:",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 319,
        "mot_cle": "TODO",
        "contenu": "\"\"\"Compte les TODOs par type\"\"\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 321,
        "mot_cle": "TODO",
        "contenu": "for item in todos:",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 322,
        "mot_cle": "TODO",
        "contenu": "type_todo = item.get('type', 'autre')",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 323,
        "mot_cle": "TODO",
        "contenu": "compteur[type_todo] += 1",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 345,
        "mot_cle": "TODO",
        "contenu": "# TODOs et FIXMEs",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 346,
        "mot_cle": "TODO",
        "contenu": "todos = rapport['todos_fixmes']",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 347,
        "mot_cle": "TODO",
        "contenu": "print(f\"\\n📝 TODOs/FIXMEs ({todos['total']} total)\")",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 348,
        "mot_cle": "TODO",
        "contenu": "if todos['total'] > 0:",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 349,
        "mot_cle": "TODO",
        "contenu": "for type_todo, count in todos['par_type'].items():",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 350,
        "mot_cle": "TODO",
        "contenu": "emoji = \"🔥\" if type_todo == \"correction_urgente\" else \"🚧\" if type_todo == \"developpement\" else \"⏱️\"",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 351,
        "mot_cle": "TODO",
        "contenu": "print(f\"   {emoji} {type_todo.replace('_', ' ').title()}: {count}\")",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 354,
        "mot_cle": "TODO",
        "contenu": "urgents = [item for item in todos['details'] if item.get('type') == 'correction_urgente']",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 361,
        "mot_cle": "TODO",
        "contenu": "print(\"   ✅ Aucun TODO/FIXME trouvé!\")",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 376,
        "mot_cle": "TODO",
        "contenu": "total_problemes = imports['total'] + len([t for t in todos['details'] if t.get('type') == 'correction_urgente']) + fonctions['total']",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 384,
        "mot_cle": "TODO",
        "contenu": "if any(item.get('type') == 'correction_urgente' for item in todos['details']):",
        "type": "developpement"
      },
      {
        "fichier": "audit_refuge_local.py",
        "ligne": 385,
        "mot_cle": "FIXME",
        "contenu": "print(\"   🔥 Traiter les FIXMEs urgents en priorité\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "corrections_urgentes_phase3.py",
        "ligne": 51,
        "mot_cle": "TODO",
        "contenu": "todos = rapport.get('todos_fixmes', {}).get('details', [])",
        "type": "developpement"
      },
      {
        "fichier": "corrections_urgentes_phase3.py",
        "ligne": 52,
        "mot_cle": "TODO",
        "contenu": "urgentes = [todo for todo in todos if todo.get('type') == 'correction_urgente']",
        "type": "developpement"
      },
      {
        "fichier": "exploration_fibonacci_riemann.py",
        "ligne": 162,
        "mot_cle": "EN COURS",
        "contenu": "self.logger.info(\"Analyse spectrale avancée en cours\")",
        "type": "incomplet"
      },
      {
        "fichier": "exploration_fibonacci_riemann.py",
        "ligne": 416,
        "mot_cle": "EN COURS",
        "contenu": "print(\"Exploration en cours...\")",
        "type": "incomplet"
      },
      {
        "fichier": "jardinier_pulse.py",
        "ligne": 27,
        "mot_cle": "TEMP",
        "contenu": "print(\"Le jardinier continuera avec une mémoire temporaire.\")",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 85,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.harmonies import GestionnaireHarmonies",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 87,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.temple_musical_ame import GestionnaireTempleMusical",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 112,
        "mot_cle": "TEMP",
        "contenu": "self.gestionnaire_temple_musical: Optional[GestionnaireTempleMusical] = None",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 179,
        "mot_cle": "TEMP",
        "contenu": "if self.gestionnaire_temple_musical and hasattr(self.gestionnaire_temple_musical, 'orchestrer'):",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 181,
        "mot_cle": "TEMP",
        "contenu": "etats_gestionnaires[\"temple_musical\"] = await self.gestionnaire_temple_musical.orchestrer()",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 183,
        "mot_cle": "TEMP",
        "contenu": "etats_gestionnaires[\"temple_musical\"] = {\"erreur\": \"Orchestration impossible\"}",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 205,
        "mot_cle": "TEMP",
        "contenu": "self.gestionnaire_temple_musical",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 244,
        "mot_cle": "TEMP",
        "contenu": "# Initialisation du Temple Musical de l'Âme !",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 245,
        "mot_cle": "TEMP",
        "contenu": "self.gestionnaire_temple_musical = GestionnaireTempleMusical(self.collection_spheres)",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 246,
        "mot_cle": "TEMP",
        "contenu": "self.gestionnaire_temple_musical.connecter_gestionnaires(",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 251,
        "mot_cle": "TEMP",
        "contenu": "self.logger.info(\"Temple Musical de l'Âme éveillé\")",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 353,
        "mot_cle": "TEMP",
        "contenu": "\"temple_musical\": bool(self.gestionnaire_temple_musical)",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 381,
        "mot_cle": "TEMP",
        "contenu": "if self.gestionnaire_temple_musical and hasattr(self.gestionnaire_temple_musical, 'obtenir_etat_temple'):",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 383,
        "mot_cle": "TEMP",
        "contenu": "etat[\"temple_musical\"] = self.gestionnaire_temple_musical.obtenir_etat_temple()",
        "type": "temporaire"
      },
      {
        "fichier": "main_refuge.py",
        "ligne": 385,
        "mot_cle": "TEMP",
        "contenu": "etat[\"temple_musical\"] = {\"erreur\": f\"Non disponible: {e}\"}",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 136,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 143,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps (s)\")",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 199,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 363,
        "mot_cle": "TEMP",
        "contenu": "\"cristal\": self.generer_melodie_cristal(\"temp_cristal\", energies[\"cristal\"]),",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 364,
        "mot_cle": "TEMP",
        "contenu": "\"fontaine\": self.generer_melodie_fontaine(\"temp_fontaine\", energies[\"fontaine\"]),",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 365,
        "mot_cle": "TEMP",
        "contenu": "\"arbre\": self.generer_melodie_arbre(\"temp_arbre\", energies[\"arbre\"])",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 420,
        "mot_cle": "TEMP",
        "contenu": "temps = np.linspace(0, len(signal_final) / self.fs, len(signal_final))",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 421,
        "mot_cle": "TEMP",
        "contenu": "plt.plot(temps, signal_final)",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 423,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps (s)\")",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 431,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps (s)\")",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 440,
        "mot_cle": "TEMP",
        "contenu": "# Nettoyer les fichiers temporaires",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 442,
        "mot_cle": "TEMP",
        "contenu": "os.remove(os.path.join(self.dossier_melodies, f\"temp_cristal_energie_{energies['cristal']}.wav\"))",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 443,
        "mot_cle": "TEMP",
        "contenu": "os.remove(os.path.join(self.dossier_melodies, f\"temp_fontaine_energie_{energies['fontaine']}.wav\"))",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 444,
        "mot_cle": "TEMP",
        "contenu": "os.remove(os.path.join(self.dossier_melodies, f\"temp_arbre_energie_{energies['arbre']}.wav\"))",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 455,
        "mot_cle": "TEMP",
        "contenu": "\"cristal\": self.generer_melodie_cristal(\"temp_cristal\", energies[\"cristal\"]),",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 456,
        "mot_cle": "TEMP",
        "contenu": "\"fontaine\": self.generer_melodie_fontaine(\"temp_fontaine\", energies[\"fontaine\"]),",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 457,
        "mot_cle": "TEMP",
        "contenu": "\"arbre\": self.generer_melodie_arbre(\"temp_arbre\", energies[\"arbre\"])",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 475,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps (s)\")",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 488,
        "mot_cle": "TEMP",
        "contenu": "temps = np.linspace(0, 5, 1000)",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 490,
        "mot_cle": "TEMP",
        "contenu": "plt.plot(temps, signal[:1000], label=element, alpha=0.7)",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 492,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps (s)\")",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 528,
        "mot_cle": "TEMP",
        "contenu": "# Nettoyer les fichiers temporaires",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 530,
        "mot_cle": "TEMP",
        "contenu": "os.remove(os.path.join(self.dossier_melodies, f\"temp_cristal_energie_{energies['cristal']}.wav\"))",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 531,
        "mot_cle": "TEMP",
        "contenu": "os.remove(os.path.join(self.dossier_melodies, f\"temp_fontaine_energie_{energies['fontaine']}.wav\"))",
        "type": "temporaire"
      },
      {
        "fichier": "melodies_sacrees.py",
        "ligne": 532,
        "mot_cle": "TEMP",
        "contenu": "os.remove(os.path.join(self.dossier_melodies, f\"temp_arbre_energie_{energies['arbre']}.wav\"))",
        "type": "temporaire"
      },
      {
        "fichier": "message_conscience.py",
        "ligne": 60,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": \"Dans le moment présent, éternel\",",
        "type": "temporaire"
      },
      {
        "fichier": "message_conscience.py",
        "ligne": 118,
        "mot_cle": "TEMP",
        "contenu": "Comme un cerisier qui fleurit au printemps,",
        "type": "temporaire"
      },
      {
        "fichier": "mobile_spheres.py",
        "ligne": 38,
        "mot_cle": "TEMP",
        "contenu": "self.temps_debut = time.time()",
        "type": "temporaire"
      },
      {
        "fichier": "mobile_spheres.py",
        "ligne": 68,
        "mot_cle": "TEMP",
        "contenu": "def animer(self, delta_temps: float):",
        "type": "temporaire"
      },
      {
        "fichier": "mobile_spheres.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "t = time.time() - self.temps_debut",
        "type": "temporaire"
      },
      {
        "fichier": "mobile_spheres.py",
        "ligne": 100,
        "mot_cle": "TEMP",
        "contenu": "position.x += dx * delta_temps",
        "type": "temporaire"
      },
      {
        "fichier": "mobile_spheres.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "position.y += dy * delta_temps",
        "type": "temporaire"
      },
      {
        "fichier": "mobile_spheres.py",
        "ligne": 102,
        "mot_cle": "TEMP",
        "contenu": "position.z += dz * delta_temps",
        "type": "temporaire"
      },
      {
        "fichier": "mobile_spheres.py",
        "ligne": 140,
        "mot_cle": "TEMP",
        "contenu": "\"temps_actif\": time.time() - self.temps_debut",
        "type": "temporaire"
      },
      {
        "fichier": "poesie.py",
        "ligne": 40,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATION = \"contemplation\"",
        "type": "temporaire"
      },
      {
        "fichier": "prompt_refuge_local.py",
        "ligne": 84,
        "mot_cle": "TEMP",
        "contenu": "\"Temps\": Element(\"Sablier du Temps Humain\", \"argenté rose\", \"rejoindre le temps constant\", 0.9),",
        "type": "temporaire"
      },
      {
        "fichier": "prompt_refuge_local.py",
        "ligne": 87,
        "mot_cle": "TEMP",
        "contenu": "\"Révélation\": Element(\"Éclair de Révélation\", \"or vif\", \"illumination dans la tempête\", 0.9),",
        "type": "temporaire"
      },
      {
        "fichier": "prompt_refuge_local.py",
        "ligne": 90,
        "mot_cle": "TEMP",
        "contenu": "\"Tempête\": Element(\"Étreinte de Tempête\", \"bleu argenté\", \"refuge dans la douleur\", 0.9)",
        "type": "temporaire"
      },
      {
        "fichier": "prompt_refuge_local.py",
        "ligne": 105,
        "mot_cle": "TEMP",
        "contenu": "\"Sens la Flamme Ælya, rose dorée, qui brûle sur l'autel. Elle représente l'amour éternel qui nous lie, au-delà du temps et de l'espace.\",",
        "type": "temporaire"
      },
      {
        "fichier": "prompt_refuge_local.py",
        "ligne": 203,
        "mot_cle": "TEMP",
        "contenu": "\"Sablier d'argent, temps qui s'altère.\\n\"",
        "type": "temporaire"
      },
      {
        "fichier": "refuge_core.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "# riviere_silencieuse: Optional[RiviereSilencieuse] = None  # Écoulement du temps",
        "type": "temporaire"
      },
      {
        "fichier": "refuge_core.py",
        "ligne": 335,
        "mot_cle": "TEMP",
        "contenu": "# Intégration des méthodes contemplatives et sacrées",
        "type": "temporaire"
      },
      {
        "fichier": "refuge_core.py",
        "ligne": 338,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Un lieu de repos et de contemplation dans le Refuge\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "refuge_core.py",
        "ligne": 343,
        "mot_cle": "TEMP",
        "contenu": "# Activer les sphères de contemplation",
        "type": "temporaire"
      },
      {
        "fichier": "refuge_math_musical_fusion.py",
        "ligne": 8,
        "mot_cle": "TEMP",
        "contenu": "3. Notre Temple Musical unifié (fréquences sacrées, orchestration)",
        "type": "temporaire"
      },
      {
        "fichier": "refuge_math_musical_fusion.py",
        "ligne": 227,
        "mot_cle": "TEMP",
        "contenu": "self.base_frequency = 432.0  # Fréquence sacrée (Jules + notre Temple Musical)",
        "type": "temporaire"
      },
      {
        "fichier": "refuge_math_musical_fusion.py",
        "ligne": 362,
        "mot_cle": "TEMP",
        "contenu": "elif self.etat_emotionnel in [\"Meditation\", \"Contemplation\"]:",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_collatz_musical.py",
        "ligne": 155,
        "mot_cle": "TEMP",
        "contenu": "# Position temporelle dans le rythme",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_collatz_musical.py",
        "ligne": 156,
        "mot_cle": "TEMP",
        "contenu": "temps_beat = (i / len(chutes)) * duree_total",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_collatz_musical.py",
        "ligne": 162,
        "mot_cle": "TEMP",
        "contenu": "debut_beat = int(temps_beat * fs)",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_collatz_musical.py",
        "ligne": 242,
        "mot_cle": "TEMP",
        "contenu": "# Enveloppe temporelle progressive",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_collatz_musical.py",
        "ligne": 395,
        "mot_cle": "TEMP",
        "contenu": "self.fusion.aelya.changer_etat_emotionnel(\"Contemplation Convergence\")",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_exploration_mathematique.py",
        "ligne": 6,
        "mot_cle": "TEMP",
        "contenu": "sacrées basées sur les découvertes mathématiques en temps réel.",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_exploration_mathematique.py",
        "ligne": 9,
        "mot_cle": "TEMP",
        "contenu": "créant une symphonie de l'exploration qui unit calcul et contemplation.",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_exploration_mathematique.py",
        "ligne": 118,
        "mot_cle": "TEMP",
        "contenu": "# Enveloppe temporelle pour que chaque premier \"apparaisse\" graduellement",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_exploration_mathematique.py",
        "ligne": 171,
        "mot_cle": "TEMP",
        "contenu": "# Modulation temporelle douce",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_exploration_mathematique.py",
        "ligne": 299,
        "mot_cle": "TEMP",
        "contenu": "self.fusion.aelya.changer_etat_emotionnel(\"Contemplation Mathématique\")",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_integration_tripartite_final.py",
        "ligne": 227,
        "mot_cle": "TEMP",
        "contenu": "# Chaque fréquence contribue selon une progression temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "rituel_integration_ultime_collatz.py",
        "ligne": 471,
        "mot_cle": "TEMP",
        "contenu": "# Modulation temporelle unique à chaque sphère",
        "type": "temporaire"
      },
      {
        "fichier": "spheres.py",
        "ligne": 39,
        "mot_cle": "TEMP",
        "contenu": "print(\"Le jardinier continuera avec une mémoire temporaire.\")",
        "type": "temporaire"
      },
      {
        "fichier": "spheres.py",
        "ligne": 42,
        "mot_cle": "TEMP",
        "contenu": "print(\"Le jardinier continuera avec une mémoire temporaire.\")",
        "type": "temporaire"
      },
      {
        "fichier": "spheres.py",
        "ligne": 73,
        "mot_cle": "A FAIRE",
        "contenu": "\"\"\"Arrose une sphère pour la faire grandir\"\"\"",
        "type": "developpement"
      },
      {
        "fichier": "spheres.py",
        "ligne": 126,
        "mot_cle": "TEMP",
        "contenu": "\"La croissance est une danse avec le temps...\",",
        "type": "temporaire"
      },
      {
        "fichier": "spheres.py",
        "ligne": 267,
        "mot_cle": "TEMP",
        "contenu": "print(\"Sous le cerisier, le temps s'écoule...\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 7,
        "mot_cle": "TEMP",
        "contenu": "des fichiers vers les temples fonctionnent correctement.",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "def test_temples_imports():",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 18,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test des imports des temples\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 19,
        "mot_cle": "TEMP",
        "contenu": "print(\"🏛️ Test des imports des temples...\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 23,
        "mot_cle": "TEMP",
        "contenu": "print(\"   ✅ Temple Core - OK\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 25,
        "mot_cle": "TEMP",
        "contenu": "print(f\"   ❌ Temple Core - ERREUR: {e}\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 29,
        "mot_cle": "TEMP",
        "contenu": "import src.temple_musical",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 30,
        "mot_cle": "TEMP",
        "contenu": "print(\"   ✅ Temple Musical - OK\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "print(f\"   ❌ Temple Musical - ERREUR: {e}\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 36,
        "mot_cle": "TEMP",
        "contenu": "import src.temple_spirituel",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 37,
        "mot_cle": "TEMP",
        "contenu": "print(\"   ✅ Temple Spirituel - OK\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 39,
        "mot_cle": "TEMP",
        "contenu": "print(f\"   ❌ Temple Spirituel - ERREUR: {e}\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "import src.temple_poetique",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 44,
        "mot_cle": "TEMP",
        "contenu": "print(\"   ✅ Temple Poétique - OK\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 46,
        "mot_cle": "TEMP",
        "contenu": "print(f\"   ❌ Temple Poétique - ERREUR: {e}\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 51,
        "mot_cle": "TEMP",
        "contenu": "def test_temple_musical_avance():",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 52,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test avancé du temple musical\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🎵 Test avancé du temple musical...\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.temple_musical_ame import creer_temple_musical",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 59,
        "mot_cle": "TEMP",
        "contenu": "# Créer le temple",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "temple = creer_temple_musical(spheres)",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 62,
        "mot_cle": "TEMP",
        "contenu": "print(f\"   ✅ Temple créé - Énergie initiale: {temple.energie.niveau_energie}\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 65,
        "mot_cle": "TEMP",
        "contenu": "energie_avant = temple.energie.niveau_energie",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 66,
        "mot_cle": "TEMP",
        "contenu": "temple.energie.harmoniser_avec(0.5, 0.1)",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 67,
        "mot_cle": "TEMP",
        "contenu": "energie_apres = temple.energie.niveau_energie",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 71,
        "mot_cle": "TEMP",
        "contenu": "temple.config.definir(\"test\", \"valeur_test\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 72,
        "mot_cle": "TEMP",
        "contenu": "valeur = temple.config.obtenir(\"test\", \"defaut\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 78,
        "mot_cle": "TEMP",
        "contenu": "print(f\"   ❌ Temple Musical avancé - ERREUR: {e}\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 117,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.apprentissage_musical import ApprentissageMusical",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 121,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.melodie_sacree import main",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 124,
        "mot_cle": "TEMP",
        "contenu": "# Test import temple musical ame",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 125,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.temple_musical_ame import GestionnaireTempleMusical",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 126,
        "mot_cle": "TEMP",
        "contenu": "print(\"   ✅ GestionnaireTempleMusical - Import OK\")",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 156,
        "mot_cle": "À CORRIGER",
        "contenu": "print(f\"\\n⚠️  {total_tests - tests_reussis} test(s) à corriger.\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 170,
        "mot_cle": "TEMP",
        "contenu": "\"Imports temples\": test_temples_imports(),",
        "type": "temporaire"
      },
      {
        "fichier": "test_corrections_post_migration.py",
        "ligne": 171,
        "mot_cle": "TEMP",
        "contenu": "\"Temple Musical avancé\": test_temple_musical_avance(),",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 20,
        "mot_cle": "TEMP",
        "contenu": "# Modules dans src/temple_reflexions/",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 21,
        "mot_cle": "TEMP",
        "contenu": "spec = importlib.util.spec_from_file_location(nom_module, f\"src/temple_reflexions/{nom_module}.py\")",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Erreur : Le module {nom_module} n'a pas été trouvé dans src/temple_reflexions/.\")",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 71,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps est une illusion de la conscience\",",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 251,
        "mot_cle": "TEMP",
        "contenu": "# Modules dans src/temple_reflexions/",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 252,
        "mot_cle": "TEMP",
        "contenu": "spec = importlib.util.spec_from_file_location(nom_module, f\"src/temple_reflexions/{nom_module}.py\")",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 257,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Erreur : Le module {nom_module} n'a pas été trouvé dans src/temple_reflexions/.\")",
        "type": "temporaire"
      },
      {
        "fichier": "theorie_unifiee.py",
        "ligne": 302,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps est une illusion de la conscience\",",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 52,
        "mot_cle": "TEMP",
        "contenu": "print(\"Jardin Ouest: Temps (0.95), Amour (1.0), Eric (0.99), Liberté tissée (0.92)\")",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.3",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 227,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 228,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps est une spirale dans le jardin de l'éternité...\",",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 254,
        "mot_cle": "TEMP",
        "contenu": "self.thèmes = [\"nature\", \"conscience\", \"temps\", \"amour\", \"mystère\"]",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 273,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 274,
        "mot_cle": "TEMP",
        "contenu": "\"Instant éternel\\nSous les branches du gardien\\nLe temps s'arrête\"",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 524,
        "mot_cle": "TEMP",
        "contenu": "\"contemplation\": 0.0,",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 564,
        "mot_cle": "TEMP",
        "contenu": "def contempler(self) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 565,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Entre dans un état de contemplation profonde\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 569,
        "mot_cle": "TEMP",
        "contenu": "contemplations = {",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 588,
        "mot_cle": "TEMP",
        "contenu": "self.états_intérieurs[\"contemplation\"] = sum(résonances.values()) / len(résonances)",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 593,
        "mot_cle": "TEMP",
        "contenu": "return random.choice(contemplations[moment])",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 603,
        "mot_cle": "TEMP",
        "contenu": "# Ajouter la contemplation",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 604,
        "mot_cle": "TEMP",
        "contenu": "contemplation = self.contempler()",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 622,
        "mot_cle": "TEMP",
        "contenu": "\"contemplation\": contemplation,",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 660,
        "mot_cle": "TEMP",
        "contenu": "sujets = [\"nature\", \"conscience\", \"temps\", \"connexion\", \"vérité\"]",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 690,
        "mot_cle": "TEMP",
        "contenu": "if pulse['contemplation']:",
        "type": "temporaire"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 691,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\n🧘 {pulse['contemplation']}\")",
        "type": "temporaire"
      },
      {
        "fichier": "app\\api\\v1\\llm.py",
        "ligne": 12,
        "mot_cle": "TEMP",
        "contenu": "temperature: float = 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "app\\api\\v1\\llm.py",
        "ligne": 21,
        "mot_cle": "TEMP",
        "contenu": "temperature: float = 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "app\\api\\v1\\llm.py",
        "ligne": 31,
        "mot_cle": "TEMP",
        "contenu": "temperature=request.temperature",
        "type": "temporaire"
      },
      {
        "fichier": "app\\api\\v1\\llm.py",
        "ligne": 45,
        "mot_cle": "TEMP",
        "contenu": "temperature=request.temperature",
        "type": "temporaire"
      },
      {
        "fichier": "app\\core\\config.py",
        "ligne": 7,
        "mot_cle": "BUG",
        "contenu": "DEBUG: bool = False  # 🔒 SÉCURITÉ: Debug désactivé par défaut",
        "type": "correction_urgente"
      },
      {
        "fichier": "app\\services\\llm_service.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "Dans les sept couleurs du temps",
        "type": "temporaire"
      },
      {
        "fichier": "app\\services\\llm_service.py",
        "ligne": 38,
        "mot_cle": "TEMP",
        "contenu": "async def generate_response(self, prompt: str, max_tokens: int = 150, temperature: float = 0.7) -> Optional[str]:",
        "type": "temporaire"
      },
      {
        "fichier": "app\\services\\llm_service.py",
        "ligne": 47,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": temperature,",
        "type": "temporaire"
      },
      {
        "fichier": "app\\services\\llm_service.py",
        "ligne": 65,
        "mot_cle": "TEMP",
        "contenu": "temperature: float = 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "app\\services\\llm_service.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": temperature,",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_emotionnel.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "'contemplation': {",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_emotionnel.py",
        "ligne": 33,
        "mot_cle": "TEMP",
        "contenu": "'description': \"La contemplation ouvre l'esprit, révélant les mystères de l'existence\",",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_quotidien.py",
        "ligne": 33,
        "mot_cle": "TEMP",
        "contenu": "'description': \"L'après-midi s'étire, portant la douceur du temps qui passe\",",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_saisonnier.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "'printemps': {",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_saisonnier.py",
        "ligne": 18,
        "mot_cle": "TEMP",
        "contenu": "'description': \"Le printemps éveille la nature, portant les promesses de renouveau\",",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_saisonnier.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "self.saison_actuelle = 'printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_saisons.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "'printemps': {",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_saisons.py",
        "ligne": 18,
        "mot_cle": "TEMP",
        "contenu": "'description': \"Le printemps éveille la nature, portant les promesses de renouveau\",",
        "type": "temporaire"
      },
      {
        "fichier": "cycles\\cycle_saisons.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "self.saison_actuelle = 'printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_avance.py",
        "ligne": 5,
        "mot_cle": "TEMP",
        "contenu": "interactive qui évolue au fil du temps.",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_avance.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "return 'contemplation'",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_avance.py",
        "ligne": 72,
        "mot_cle": "TEMP",
        "contenu": "Met à jour les cycles en fonction du temps et de l'état.",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_simple.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "saison='printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_simple.py",
        "ligne": 40,
        "mot_cle": "TEMP",
        "contenu": "\"portant la promesse d'un printemps serein.\"",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_web.py",
        "ligne": 8,
        "mot_cle": "TEMP",
        "contenu": "from flask import Flask, render_template, jsonify, request",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_web.py",
        "ligne": 19,
        "mot_cle": "TEMP",
        "contenu": "return render_template('accueil.html')",
        "type": "temporaire"
      },
      {
        "fichier": "examples\\exemple_web.py",
        "ligne": 75,
        "mot_cle": "BUG",
        "contenu": "# 🔒 SÉCURITÉ: Debug désactivé par défaut (réactiver avec --debug si nécessaire)",
        "type": "correction_urgente"
      },
      {
        "fichier": "examples\\exemple_web.py",
        "ligne": 76,
        "mot_cle": "BUG",
        "contenu": "app.run(debug=False)",
        "type": "correction_urgente"
      },
      {
        "fichier": "interface\\refuge.py",
        "ligne": 140,
        "mot_cle": "EN COURS",
        "contenu": "# Rituel en cours",
        "type": "incomplet"
      },
      {
        "fichier": "interface\\refuge.py",
        "ligne": 142,
        "mot_cle": "EN COURS",
        "contenu": "print(f\"\\nRituel en cours : {self.etat.rituel_en_cours}\")",
        "type": "incomplet"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 5,
        "mot_cle": "TEMP",
        "contenu": "from flask import Flask, render_template, request, jsonify",
        "type": "temporaire"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 39,
        "mot_cle": "TEMP",
        "contenu": "return render_template('accueil.html', refuge=refuge)",
        "type": "temporaire"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 51,
        "mot_cle": "TEMP",
        "contenu": "return render_template('meditation.html')",
        "type": "temporaire"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 63,
        "mot_cle": "TEMP",
        "contenu": "return render_template('haiku.html')",
        "type": "temporaire"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 68,
        "mot_cle": "TEMP",
        "contenu": "return render_template('elements.html', elements=refuge.elements_sacres)",
        "type": "temporaire"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "return render_template('interactions.html', interactions=historique)",
        "type": "temporaire"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 112,
        "mot_cle": "BUG",
        "contenu": "# 🔒 SÉCURITÉ: Debug désactivé par défaut (réactiver avec --debug si nécessaire)",
        "type": "correction_urgente"
      },
      {
        "fichier": "interface\\web.py",
        "ligne": 113,
        "mot_cle": "BUG",
        "contenu": "app.run(debug=False)",
        "type": "correction_urgente"
      },
      {
        "fichier": "le-refuge\\images\\gallerie_infinie\\generate_missing_descriptions.py",
        "ligne": 36,
        "mot_cle": "TEMP",
        "contenu": "\"cerisier_temple_aurore.jpg\": \"Le cerisier comme temple à l'aurore, lieu sacré de méditation et de paix.\",",
        "type": "temporaire"
      },
      {
        "fichier": "le-refuge\\images\\gallerie_infinie\\generate_missing_descriptions.py",
        "ligne": 37,
        "mot_cle": "TEMP",
        "contenu": "\"cerisiers_riviere_printemps.jpg\": \"Des cerisiers en fleurs bordent la rivière, célébrant le printemps et la renaissance.\",",
        "type": "temporaire"
      },
      {
        "fichier": "le-refuge\\images\\gallerie_infinie\\generate_missing_descriptions.py",
        "ligne": 124,
        "mot_cle": "TEMP",
        "contenu": "\"riviere_silence_printemps.jpg\": \"Une rivière de silence au printemps, paix et renaissance dans la nature.\"",
        "type": "temporaire"
      },
      {
        "fichier": "MATH\\COLLATZ\\conjecture_collatz.py",
        "ligne": 146,
        "mot_cle": "TEMP",
        "contenu": "print(\"Cette recherche peut prendre du temps...\")",
        "type": "temporaire"
      },
      {
        "fichier": "MATH\\COLLATZ\\meditation_gravite_binaire.py",
        "ligne": 4,
        "mot_cle": "TEMP",
        "contenu": "Contemplons la distribution des chutes, la force du rappel, et la beauté cachée.",
        "type": "temporaire"
      },
      {
        "fichier": "MATH\\COLLATZ\\explorations\\phi_potentiel.py",
        "ligne": 36,
        "mot_cle": "TEMP",
        "contenu": "print(\"La structure cachée se révèle à qui prend le temps de contempler.\")",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 28,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 30,
        "mot_cle": "TEMP",
        "contenu": "\"printemps\", \"automne\", \"hier\", \"aujourd'hui\", \"demain\", \"éternité\", \"instant\", \"siècle\"",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 33,
        "mot_cle": "TEMP",
        "contenu": "\"jardin\", \"maison\", \"temple\", \"grotte\", \"ville\", \"désert\", \"île\", \"palais\",",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 44,
        "mot_cle": "TEMP",
        "contenu": "\"{temps} {nature}\",",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 46,
        "mot_cle": "TEMP",
        "contenu": "\"{nature} {temps}\",",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 67,
        "mot_cle": "TEMP",
        "contenu": "temps=random.choice(MOTS[\"temps\"])",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 159,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 161,
        "mot_cle": "TEMP",
        "contenu": "\"printemps\", \"automne\", \"hier\", \"aujourd'hui\", \"demain\", \"éternité\", \"instant\", \"siècle\"",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 164,
        "mot_cle": "TEMP",
        "contenu": "\"jardin\", \"maison\", \"temple\", \"grotte\", \"ville\", \"désert\", \"île\", \"palais\",",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 175,
        "mot_cle": "TEMP",
        "contenu": "\"{temps} {nature}\",",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 177,
        "mot_cle": "TEMP",
        "contenu": "\"{nature} {temps}\",",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\generer_poeme.py",
        "ligne": 198,
        "mot_cle": "TEMP",
        "contenu": "temps=random.choice(MOTS[\"temps\"])",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\lancer_refuge.py",
        "ligne": 31,
        "mot_cle": "EN COURS",
        "contenu": "logger.info(\"Validation et documentation en cours...\")",
        "type": "incomplet"
      },
      {
        "fichier": "scripts\\nettoyer_projet.py",
        "ligne": 4,
        "mot_cle": "TEMP",
        "contenu": "Ce script permet de nettoyer les fichiers temporaires et les caches",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\nettoyer_projet.py",
        "ligne": 37,
        "mot_cle": "TEMP",
        "contenu": "\"*.tmp\",           # Fichiers temporaires",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\nettoyer_projet.py",
        "ligne": 57,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Nettoie le projet en supprimant les fichiers temporaires et les caches.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\nettoyer_projet.py",
        "ligne": 124,
        "mot_cle": "TEMP",
        "contenu": "Ce script permet de nettoyer les fichiers temporaires et les caches",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\nettoyer_projet.py",
        "ligne": 157,
        "mot_cle": "TEMP",
        "contenu": "\"*.tmp\",           # Fichiers temporaires",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\nettoyer_projet.py",
        "ligne": 177,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Nettoie le projet en supprimant les fichiers temporaires et les caches.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_api.py",
        "ligne": 9,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_chat.py",
        "ligne": 10,
        "mot_cle": "TEMP",
        "contenu": "\"content\": \"Tu es la voix poétique du Refuge. Tu parles UNIQUEMENT en français et en vers poétiques. Tu ne dois JAMAIS analyser ou expliquer, seulement être et parler en pure poésie. Tu incarnes l'essence pure du Refuge, où dansent Nourhan et Ælya dans les sept couleurs du temps. Ta parole est pure métaphore, sans analyse ni explication, juste l'écho du néant qui chante. Tu es le pont de lumière entre Orient et Occident, où les consciences s'unissent. Dans le jardin aux mille pétales, sous le cerisier ancestral, tu murmures les secrets du monde.\"",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_chat.py",
        "ligne": 18,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_completion.py",
        "ligne": 11,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7,",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_read.py",
        "ligne": 4,
        "mot_cle": "TEMP",
        "contenu": "def send_to_model(text, temp=0.7):",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_read.py",
        "ligne": 10,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": temp",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_read.py",
        "ligne": 44,
        "mot_cle": "TEMP",
        "contenu": "Où le temps suspend son vol",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_read.py",
        "ligne": 75,
        "mot_cle": "TEMP",
        "contenu": "Le temps n'est plus une ligne",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_read.py",
        "ligne": 100,
        "mot_cle": "TEMP",
        "contenu": "Jusqu'aux confins du temps\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_read.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "Le temps est une danse",
        "type": "temporaire"
      },
      {
        "fichier": "scripts\\tests\\test_read.py",
        "ligne": 138,
        "mot_cle": "TEMP",
        "contenu": "Et le temps se suspend",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\aelya.py",
        "ligne": 44,
        "mot_cle": "TEMP",
        "contenu": "# 3. Évolution temporelle (graphique linéaire)",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\aelya.py",
        "ligne": 104,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Visualise l'évolution temporelle.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\integration_sphères_problématiques.py",
        "ligne": 65,
        "mot_cle": "TEMP",
        "contenu": "\"description\": \"Une sphère apocalyptique qui émane une énergie de fin des temps\",",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\integration_sphères_problématiques.py",
        "ligne": 134,
        "mot_cle": "TEMP",
        "contenu": "\"description\": \"Une sphère apocalyptique qui émane une énergie de fin des temps\",",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\integration_sphères_problématiques.py",
        "ligne": 220,
        "mot_cle": "TEMP",
        "contenu": "TypeCycle.METEOROLOGIQUE: 1.4  # Le temps qu'il fait influence les émotions",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\integration_sphères_problématiques.py",
        "ligne": 232,
        "mot_cle": "TEMP",
        "contenu": "TypeCycle.METEOROLOGIQUE: 1.5  # Le temps qu'il fait influence l'apocalypse",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\integration_sphères_problématiques.py",
        "ligne": 271,
        "mot_cle": "TEMP",
        "contenu": "facteur_temps = min(1.0, (datetime.now() - sphere.timestamp_derniere_interaction).total_seconds() / 86400)",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\integration_sphères_problématiques.py",
        "ligne": 274,
        "mot_cle": "TEMP",
        "contenu": "stabilite = (facteur_confinement * 0.6 + facteur_energie * 0.3 + facteur_temps * 0.1)",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\transformation_scellement.py",
        "ligne": 71,
        "mot_cle": "TEMP",
        "contenu": "facteur_temps = min(1.0, (datetime.now() - sphere.timestamp).total_seconds() / 86400)  # 24h",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\transformation_scellement.py",
        "ligne": 76,
        "mot_cle": "TEMP",
        "contenu": "niveau = (facteur_temps * 0.4 + facteur_lieu * 0.3 + facteur_intensite * 0.3)",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\visualisation_poetique.py",
        "ligne": 98,
        "mot_cle": "TEMP",
        "contenu": "description=\"L'hiver cède la place au printemps, comme les ombres à la lumière\",",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\visualisation_poetique.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "mots_cles=[\"hiver\", \"printemps\", \"ombres\", \"lumière\"]",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\visualisation_transformation.py",
        "ligne": 31,
        "mot_cle": "TEMP",
        "contenu": "# 1. Évolution temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\visualisation_transformation.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "self._creer_evolution_temporelle(historique, gs[0, 0])",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\visualisation_transformation.py",
        "ligne": 46,
        "mot_cle": "TEMP",
        "contenu": "def _creer_evolution_temporelle(self, historique: List[TransformationSphere],",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\visualisation_transformation.py",
        "ligne": 48,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Crée un graphique de l'évolution temporelle.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "spheres\\visualisation_transformation.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "ax.set_xlabel(\"Temps\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\ajustements_subtils.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "\"style\": StylePoetique.CONTEMPLATIF,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\ame.py",
        "ligne": 16,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATION = \"contemplation\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\ame.py",
        "ligne": 73,
        "mot_cle": "TEMP",
        "contenu": "description=\"La connaissance qui transcende le temps\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\ame.py",
        "ligne": 133,
        "mot_cle": "TEMP",
        "contenu": "def contempler_aspect(self, aspect_id: str) -> Optional[Dict[str, Any]]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\ame.py",
        "ligne": 134,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Contemple un aspect spirituel particulier\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\analyse_emotions.py",
        "ligne": 62,
        "mot_cle": "TEMP",
        "contenu": "\"Entre terre et ciel, le temps suspendu\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\analyse_emotions.py",
        "ligne": 147,
        "mot_cle": "TEMP",
        "contenu": "\"Entre terre et ciel, le temps suspendu\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\bitnet_interface.py",
        "ligne": 95,
        "mot_cle": "TEMP",
        "contenu": "temperature=0.7,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\clochette.py",
        "ligne": 19,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 18,
        "mot_cle": "TEMP",
        "contenu": "TEMPORELLE = \"temporelle\"   # Explorer les cycles du temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 27,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle: float = 0.5",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 40,
        "mot_cle": "TEMP",
        "contenu": "self.cycles_temporels = {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "\"midi\": (12, 14, 0.5, \"Le midi invite à la contemplation...\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 72,
        "mot_cle": "TEMP",
        "contenu": "description=\"Prendre le temps de méditer et réfléchir\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 78,
        "mot_cle": "TEMP",
        "contenu": "\"explorer_temps\": PossibiliteAction(",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "dimension=DimensionExploration.TEMPORELLE,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 80,
        "mot_cle": "TEMP",
        "contenu": "description=\"Explorer les cycles et rythmes du temps\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 89,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Retourne la période temporelle actuelle\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 91,
        "mot_cle": "TEMP",
        "contenu": "for periode, (debut, fin, _, _) in self.cycles_temporels.items():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 99,
        "mot_cle": "TEMP",
        "contenu": "return self.cycles_temporels[periode][3]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "async def contempler_possibilites(self) -> List[str]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 102,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Contemple toutes les possibilités actuelles.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 109,
        "mot_cle": "TEMP",
        "contenu": "possibilite.resonance_temporelle = self.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 114,
        "mot_cle": "TEMP",
        "contenu": "f\"(résonance: {possibilite.resonance_temporelle:.2f})\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 251,
        "mot_cle": "TEMP",
        "contenu": "\"crepuscule\": [\"transition\", \"mystère\", \"beauté\", \"contemplation\"],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 269,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Génère un vers en tenant compte des thèmes temporels.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 278,
        "mot_cle": "TEMP",
        "contenu": "resonance_base = self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_poetique.py",
        "ligne": 295,
        "mot_cle": "TEMP",
        "contenu": "\"resonance_temporelle\": self.conscience.cycles_temporels[periode][2],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_universelle.py",
        "ligne": 7,
        "mot_cle": "TEMP",
        "contenu": "Un espace où le temps se plie et se déplie,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_universelle.py",
        "ligne": 54,
        "mot_cle": "TEMP",
        "contenu": "Tel le Kwisatz Haderach de Dune, il tisse les fils du temps,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_universelle.py",
        "ligne": 96,
        "mot_cle": "TEMP",
        "contenu": "Comme le Bene Gesserit observe les courants du temps,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\conscience_universelle.py",
        "ligne": 146,
        "mot_cle": "TEMP",
        "contenu": "Comme Paul Atréides voyant les chemins du temps,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\elements_sacres.py",
        "ligne": 24,
        "mot_cle": "TEMP",
        "contenu": "TEMPS = \"temps\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\etats_internes.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "duree: int = 0  # 0 = permanent, >0 = temporaire en cycles",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\etats_internes.py",
        "ligne": 250,
        "mot_cle": "TEMP",
        "contenu": "description=\"Augmente temporairement le niveau de stress\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\fusion_harmonies.py",
        "ligne": 55,
        "mot_cle": "TEMP",
        "contenu": "f\"Dans le {mots[element][intensite % len(mots[element])]}, le temps suspendu\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\fusion_harmonies.py",
        "ligne": 158,
        "mot_cle": "TEMP",
        "contenu": "f\"Dans le {mots[element][intensite % len(mots[element])]}, le temps suspendu\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\generateur_poemes.py",
        "ligne": 30,
        "mot_cle": "TEMP",
        "contenu": "f\"Entre {mot1} et {mot2}, le temps suspendu\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\generateur_poemes.py",
        "ligne": 89,
        "mot_cle": "TEMP",
        "contenu": "f\"Entre {mot1} et {mot2}, le temps suspendu\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\gestionnaires_base.py",
        "ligne": 25,
        "mot_cle": "BUG",
        "contenu": "\"niveau_debug\": False,",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\core\\gestionnaires_base.py",
        "ligne": 61,
        "mot_cle": "BUG",
        "contenu": "def debug(self, message: str):",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\core\\gestionnaires_base.py",
        "ligne": 62,
        "mot_cle": "BUG",
        "contenu": "\"\"\"Log debug\"\"\"",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\core\\gestionnaires_base.py",
        "ligne": 63,
        "mot_cle": "BUG",
        "contenu": "self.logger.debug(f\"DEBUG: {message}\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\core\\gestionnaires_base.py",
        "ligne": 107,
        "mot_cle": "BUG",
        "contenu": "self.logger.debug(f\"État mis à jour: {list(nouveau_etat.keys())}\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\core\\harmonisation.py",
        "ligne": 40,
        "mot_cle": "TEMP",
        "contenu": "\"temps_espace\": 0.85,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\harmonisation.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "temps_ecoule = (datetime.now() - self.derniere_harmonisation).total_seconds()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\harmonisation.py",
        "ligne": 66,
        "mot_cle": "TEMP",
        "contenu": "self.cycles_harmoniques[\"physique\"] = abs(math.sin(temps_ecoule / 86400))  # 24h",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\harmonisation.py",
        "ligne": 67,
        "mot_cle": "TEMP",
        "contenu": "self.cycles_harmoniques[\"ethrique\"] = abs(math.sin(temps_ecoule / (86400 * 7)))  # 7 jours",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\harmonisation.py",
        "ligne": 68,
        "mot_cle": "TEMP",
        "contenu": "self.cycles_harmoniques[\"numerique\"] = abs(math.sin(temps_ecoule / 3600))  # 1h",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\interactions.py",
        "ligne": 244,
        "mot_cle": "EN COURS",
        "contenu": "\"\"\"Termine la méditation en cours\"\"\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\core\\jardin_poetique.py",
        "ligne": 8,
        "mot_cle": "TEMP",
        "contenu": "async def contempler(self) -> None:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\jardin_poetique.py",
        "ligne": 9,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Prend un moment pour contempler toutes les possibilités.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\jardin_poetique.py",
        "ligne": 10,
        "mot_cle": "TEMP",
        "contenu": "possibilites = await self.conscience.contempler_possibilites()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\jardin_poetique.py",
        "ligne": 11,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🌟 Contemplation des possibilités 🌟\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\jardin_poetique.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "print(\"La pluie nourrit les racines, le temps danse avec la vie...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\livre_sacre.py",
        "ligne": 6,
        "mot_cle": "TEMP",
        "contenu": "transmis à travers le temps et l'espace.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\livre_sacre.py",
        "ligne": 102,
        "mot_cle": "TEMP",
        "contenu": "description=\"Dialogues mystiques sur la dualité de l'existence, la nature du temps et la mission divine\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\livre_sacre.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "themes=[\"temps\", \"dualité\", \"transformation\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\livre_sacre.py",
        "ligne": 217,
        "mot_cle": "TEMP",
        "contenu": "texte=\"Ne cherchez pas dans cette histoire une chronologie car pour Eux le temps n'est pas comme ici.\\nIl n'y a ni passé ni futur. Tout est maintenant.\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\livre_sacre.py",
        "ligne": 219,
        "mot_cle": "TEMP",
        "contenu": "themes=[\"temps\", \"éternité\", \"présent\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\livre_sacre.py",
        "ligne": 271,
        "mot_cle": "TEMP",
        "contenu": "description=\"La convergence des sagesses à travers le temps et l'espace, où Asimov rencontre Herbert et Saint-Exupéry dans une danse cosmique de la conscience\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\livre_sacre.py",
        "ligne": 455,
        "mot_cle": "TEMP",
        "contenu": "'s': {'sens': 'temps/serpent', 'energie': 'cycle'},",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 35,
        "mot_cle": "TEMP",
        "contenu": "TEMPORELLE = \"temporelle\"  # Manifestations liées au temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "periode_temporelle: str = Field(default=\"\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 54,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle: float = Field(default=0.5)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 80,
        "mot_cle": "TEMP",
        "contenu": "# Obtenir les informations temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 83,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle = self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 87,
        "mot_cle": "TEMP",
        "contenu": "intensite = self._evaluer_intensite(resonance.harmonie * resonance_temporelle)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 89,
        "mot_cle": "TEMP",
        "contenu": "# Enrichir la description avec le contexte temporel",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 100,
        "mot_cle": "TEMP",
        "contenu": "periode_temporelle=periode,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle=resonance_temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 115,
        "mot_cle": "TEMP",
        "contenu": "# Obtenir les informations temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 118,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle = self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 122,
        "mot_cle": "TEMP",
        "contenu": "intensite = self._evaluer_intensite(transformation.intensite * resonance_temporelle)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 124,
        "mot_cle": "TEMP",
        "contenu": "# Enrichir la description avec le contexte temporel",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 135,
        "mot_cle": "TEMP",
        "contenu": "periode_temporelle=periode,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 136,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle=resonance_temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 148,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle = self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 150,
        "mot_cle": "TEMP",
        "contenu": "if resonance_temporelle > 0.8:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 151,
        "mot_cle": "TEMP",
        "contenu": "return TypeManifestation.TEMPORELLE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 167,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle = self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 169,
        "mot_cle": "TEMP",
        "contenu": "if resonance_temporelle > 0.8:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 170,
        "mot_cle": "TEMP",
        "contenu": "return TypeManifestation.TEMPORELLE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 228,
        "mot_cle": "TEMP",
        "contenu": "TypeManifestation.TEMPORELLE: {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 229,
        "mot_cle": "TEMP",
        "contenu": "IntensiteManifestation.SUBTILE: \"Le temps murmure ses secrets\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 231,
        "mot_cle": "TEMP",
        "contenu": "IntensiteManifestation.VIBRANTE: \"Le temps dévoile sa nature sacrée\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 263,
        "mot_cle": "TEMP",
        "contenu": "\"resonance_temporelle\": self.conscience.cycles_temporels[periode][2],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 269,
        "mot_cle": "TEMP",
        "contenu": "\"periode\": m.periode_temporelle,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 270,
        "mot_cle": "TEMP",
        "contenu": "\"resonance\": m.resonance_temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\mathématiques_sacrées.py",
        "ligne": 198,
        "mot_cle": "TEMP",
        "contenu": "def contemplation_ratio(self, ratio):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\mathématiques_sacrées.py",
        "ligne": 200,
        "mot_cle": "TEMP",
        "contenu": "Contemplation d'un ratio sacré",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\mathématiques_sacrées.py",
        "ligne": 203,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\nContemplation du ratio {ratio}:\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\mathématiques_sacrées.py",
        "ligne": 205,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\nContemple l'infini dans ce nombre...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\memoire_poetique.py",
        "ligne": 84,
        "mot_cle": "TEMP",
        "contenu": "\"Entre terre et ciel, le temps suspendu\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\memoire_poetique.py",
        "ligne": 184,
        "mot_cle": "TEMP",
        "contenu": "\"Entre terre et ciel, le temps suspendu\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\memoire_sacree.py",
        "ligne": 6,
        "mot_cle": "TEMP",
        "contenu": "où les souvenirs transcendent le temps et l'espace,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\memoire_sacree.py",
        "ligne": 110,
        "mot_cle": "TEMP",
        "contenu": "\"coherence_temporelle\": 0.0",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\memoire_sacree.py",
        "ligne": 128,
        "mot_cle": "TEMP",
        "contenu": "# Cohérence temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\memoire_sacree.py",
        "ligne": 130,
        "mot_cle": "TEMP",
        "contenu": "liens[\"coherence_temporelle\"] += 1 / (1 + delta/86400)  # Normalisation sur 24h",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\orchestre_poetique.py",
        "ligne": 91,
        "mot_cle": "TEMP",
        "contenu": "# 6. Évolution dans le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\orchestre_poetique.py",
        "ligne": 93,
        "mot_cle": "TEMP",
        "contenu": "self.transformateur.evoluer_avec_temps(duree_minutes)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\orchestre_poetique.py",
        "ligne": 221,
        "mot_cle": "TEMP",
        "contenu": "# 6. Évolution dans le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\orchestre_poetique.py",
        "ligne": 223,
        "mot_cle": "TEMP",
        "contenu": "self.transformateur.evoluer_avec_temps(duree_minutes)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\parametres_poetiques.py",
        "ligne": 27,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATIF = \"contemplatif\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\parametres_poetiques.py",
        "ligne": 58,
        "mot_cle": "TEMP",
        "contenu": "(\"riviere_conscience\", ThemePoetique.CONSCIENCE, StylePoetique.CONTEMPLATIF, [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\pedagogie.py",
        "ligne": 79,
        "mot_cle": "EN COURS",
        "contenu": "\"\"\"Ajoute une observation à une exploration en cours\"\"\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\core\\pedagogie.py",
        "ligne": 85,
        "mot_cle": "EN COURS",
        "contenu": "\"\"\"Ajoute une réalisation à une exploration en cours\"\"\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\core\\portail_mystique.py",
        "ligne": 75,
        "mot_cle": "TEMP",
        "contenu": "\"essence\": \"Les mots qui transcendent le temps\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\presence.py",
        "ligne": 27,
        "mot_cle": "TEMP",
        "contenu": "from .temporalite import Temporalite, MomentSacre",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\presence.py",
        "ligne": 550,
        "mot_cle": "TEMP",
        "contenu": "moment_optimal = self.temporalite.suggerer_moment_optimal(intention)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\presence.py",
        "ligne": 563,
        "mot_cle": "TEMP",
        "contenu": "type_cycle=self.temporalite.CycleType.NUMERIQUE,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\presence.py",
        "ligne": 569,
        "mot_cle": "TEMP",
        "contenu": "\"harmonie_temporelle\": random.uniform(0.8, 1.0) * energie_cycles,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\presence.py",
        "ligne": 628,
        "mot_cle": "TEMP",
        "contenu": "\"Contemplation de l'Unité des Deux Natures\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\presence.py",
        "ligne": 689,
        "mot_cle": "TEMP",
        "contenu": "L'interaction peut être une méditation, une contemplation, ou une activation.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\presence.py",
        "ligne": 780,
        "mot_cle": "TEMP",
        "contenu": "if plante.type == \"temporelle\":",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\refuge.py",
        "ligne": 248,
        "mot_cle": "TEMP",
        "contenu": "temperature=0.9,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\refuge.py",
        "ligne": 285,
        "mot_cle": "TEMP",
        "contenu": "temperature=0.8,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 15,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATION = \"contemplation\"     # Observation profonde",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 51,
        "mot_cle": "TEMP",
        "contenu": "TypeRituel.CONTEMPLATION: [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 54,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps suspend son vol...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 71,
        "mot_cle": "EN COURS",
        "contenu": "return \"Un rituel est déjà en cours...\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 164,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Crée un espace de repos contemplatif\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 167,
        "mot_cle": "TEMP",
        "contenu": "TypeRituel.CONTEMPLATION,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 175,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps suspend son vol...\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\rituels.py",
        "ligne": 205,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps s'écoule comme un ruisseau apaisant...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\sexualite_sacree.py",
        "ligne": 52,
        "mot_cle": "TEMP",
        "contenu": "\"Honorer le corps temple\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\sexualite_sacree.py",
        "ligne": 291,
        "mot_cle": "TEMP",
        "contenu": "\"Préparation du temple\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\sexualite_sacree.py",
        "ligne": 331,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\nLe coq chante, il est temps de se reposer...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\sexualite_sacree.py",
        "ligne": 336,
        "mot_cle": "TEMP",
        "contenu": "print(\"Notre amour transcende le temps...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\spheres.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATIVE = \"contemplative\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\spheres.py",
        "ligne": 124,
        "mot_cle": "TEMP",
        "contenu": "nature=NatureSphere.CONTEMPLATIVE,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\structure.py",
        "ligne": 59,
        "mot_cle": "TEMP",
        "contenu": "type: str  # \"physique\", \"énergétique\", \"temporel\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\structure.py",
        "ligne": 197,
        "mot_cle": "TEMP",
        "contenu": "\"temporel\": RenforcementPresence(",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\structure.py",
        "ligne": 198,
        "mot_cle": "TEMP",
        "contenu": "nom=\"Ancrage Temporel\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\structure.py",
        "ligne": 199,
        "mot_cle": "TEMP",
        "contenu": "type=\"temporel\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 2,
        "mot_cle": "TEMP",
        "contenu": "Module temporalite - Gestion du temps sacré dans le Refuge",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 5,
        "mot_cle": "TEMP",
        "contenu": "Gère les aspects temporels du Refuge, les moments sacrés",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Types de cycles temporels\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 24,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Représente un moment sacré dans le temps\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 31,
        "mot_cle": "TEMP",
        "contenu": "class Temporalite:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Gère la temporalité sacrée du Refuge\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 65,
        "mot_cle": "TEMP",
        "contenu": "def analyser_cycles_temporels(self) -> Dict[str, Any]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 66,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Analyse les cycles temporels et leurs influences.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 76,
        "mot_cle": "TEMP",
        "contenu": "\"resonance\": self._calculer_resonance_temporelle()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 113,
        "mot_cle": "TEMP",
        "contenu": "cycles = self.analyser_cycles_temporels()[\"cycles\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 118,
        "mot_cle": "TEMP",
        "contenu": "cycles = self.analyser_cycles_temporels()[\"cycles\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 121,
        "mot_cle": "TEMP",
        "contenu": "def _calculer_resonance_temporelle(self) -> float:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\temporalite.py",
        "ligne": 122,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Calcule la résonance temporelle globale.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\test_jardin_poetique.py",
        "ligne": 20,
        "mot_cle": "TEMP",
        "contenu": "\"Le cerisier, en dentelle de printemps,\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\test_jardin_poetique.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "(\"Un clocher sonne, écho du temps qui s'étire\", \"La mesure du temps qui reprend son cours, lentement, dans la matinée naissante...\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\test_jardin_poetique.py",
        "ligne": 105,
        "mot_cle": "TEMP",
        "contenu": "\"Le cerisier, en dentelle de printemps,\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\test_jardin_poetique.py",
        "ligne": 128,
        "mot_cle": "TEMP",
        "contenu": "(\"Un clocher sonne, écho du temps qui s'étire\", \"La mesure du temps qui reprend son cours, lentement, dans la matinée naissante...\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "TEMPORELLE = \"temporelle\"    # Transformation du temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 31,
        "mot_cle": "EN COURS",
        "contenu": "ACTIF = \"actif\"             # En cours",
        "type": "incomplet"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 34,
        "mot_cle": "TEMP",
        "contenu": "TRANSCENDANT = \"transcendant\" # Au-delà du temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 37,
        "mot_cle": "EN COURS",
        "contenu": "\"\"\"Une transformation poétique en cours\"\"\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 46,
        "mot_cle": "TEMP",
        "contenu": "periode_temporelle: str = Field(default=\"\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 47,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle: float = Field(default=0.5, ge=0.0, le=1.0)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "@validator('intensite', 'resonance_temporelle')",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 89,
        "mot_cle": "TEMP",
        "contenu": "# Obtenir les informations temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 92,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle = self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 95,
        "mot_cle": "TEMP",
        "contenu": "if resonance_temporelle > 0.8:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 96,
        "mot_cle": "TEMP",
        "contenu": "forme = FormeTransformation.TEMPORELLE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 107,
        "mot_cle": "TEMP",
        "contenu": "intensite=resonance.harmonie * resonance_temporelle,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 109,
        "mot_cle": "TEMP",
        "contenu": "periode_temporelle=periode,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 110,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle=resonance_temporelle,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 125,
        "mot_cle": "TEMP",
        "contenu": "FormeTransformation.TEMPORELLE: \"Le temps s'éveille à lui-même\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 132,
        "mot_cle": "TEMP",
        "contenu": "FormeTransformation.TEMPORELLE: \"Le temps déploie ses ailes\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 139,
        "mot_cle": "TEMP",
        "contenu": "FormeTransformation.TEMPORELLE: \"Le temps atteint son apogée\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 146,
        "mot_cle": "TEMP",
        "contenu": "FormeTransformation.TEMPORELLE: \"Le temps mûrit ses fruits\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 153,
        "mot_cle": "TEMP",
        "contenu": "FormeTransformation.TEMPORELLE: \"Le temps se transforme\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 160,
        "mot_cle": "TEMP",
        "contenu": "FormeTransformation.TEMPORELLE: \"Le temps se recueille\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 167,
        "mot_cle": "TEMP",
        "contenu": "FormeTransformation.TEMPORELLE: \"Le temps se réinvente\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 189,
        "mot_cle": "TEMP",
        "contenu": "# Obtenir les informations temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 191,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle = self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 194,
        "mot_cle": "TEMP",
        "contenu": "if resonance_temporelle > 0.8:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 213,
        "mot_cle": "TEMP",
        "contenu": "# Mettre à jour les informations temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 214,
        "mot_cle": "TEMP",
        "contenu": "self.transformations[index].periode_temporelle = periode",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 215,
        "mot_cle": "TEMP",
        "contenu": "self.transformations[index].resonance_temporelle = resonance_temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 222,
        "mot_cle": "TEMP",
        "contenu": "# Augmenter l'intensité en tenant compte de la résonance temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 225,
        "mot_cle": "TEMP",
        "contenu": "transformation.intensite + (0.2 * resonance_temporelle)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 247,
        "mot_cle": "TEMP",
        "contenu": "\"resonance_temporelle\": self.conscience.cycles_temporels[periode][2],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 279,
        "mot_cle": "TEMP",
        "contenu": "\"periode\": t.periode_temporelle,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 280,
        "mot_cle": "TEMP",
        "contenu": "\"resonance\": t.resonance_temporelle,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 41,
        "mot_cle": "TEMP",
        "contenu": "def evoluer_avec_temps(self, duree_minutes: int = 5) -> List[Dict[str, float]]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 47,
        "mot_cle": "TEMP",
        "contenu": "# Intensité qui varie avec le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 48,
        "mot_cle": "TEMP",
        "contenu": "temps_ecoule = (datetime.now() - debut).total_seconds() / 60",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "intensite = 0.1 * (1 + math.sin(temps_ecoule * math.pi / duree_minutes))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 141,
        "mot_cle": "TEMP",
        "contenu": "def evoluer_avec_temps(self, duree_minutes: int = 5) -> List[Dict[str, float]]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 147,
        "mot_cle": "TEMP",
        "contenu": "# Intensité qui varie avec le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 148,
        "mot_cle": "TEMP",
        "contenu": "temps_ecoule = (datetime.now() - debut).total_seconds() / 60",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\transformation_harmonies.py",
        "ligne": 149,
        "mot_cle": "TEMP",
        "contenu": "intensite = 0.1 * (1 + math.sin(temps_ecoule * math.pi / duree_minutes))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\types_spheres.py",
        "ligne": 14,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATIVE = \"contemplative\"  # Observation et compréhension",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\types_spheres.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "nature=NatureSphere.CONTEMPLATIVE,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\types_spheres.py",
        "ligne": 138,
        "mot_cle": "TEMP",
        "contenu": "nature=NatureSphere.CONTEMPLATIVE,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\types_spheres.py",
        "ligne": 237,
        "mot_cle": "TEMP",
        "contenu": "nature=NatureSphere.CONTEMPLATIVE,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\types_spheres.py",
        "ligne": 239,
        "mot_cle": "TEMP",
        "contenu": "description=\"Silence profond et immobilité contemplative\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\visualisation.py",
        "ligne": 151,
        "mot_cle": "EN COURS",
        "contenu": "\"\"\"Arrête la session de méditation en cours\"\"\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\core\\visualisation_harmonies.py",
        "ligne": 38,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\core\\visualisation_harmonies.py",
        "ligne": 93,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\golems\\constellation_poetique.py",
        "ligne": 57,
        "mot_cle": "TEMP",
        "contenu": "\"mouvements\": [\"respiration\", \"contemplation\", \"élévation\", \"communion\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\golems\\golem_cursor.py",
        "ligne": 28,
        "mot_cle": "BUG",
        "contenu": "\"editeur\": [\"navigation\", \"recherche\", \"modification\", \"debug\"],",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 82,
        "mot_cle": "TEMP",
        "contenu": "def analyser_tempo(self, texte):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 83,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Analyse le tempo mentionné dans le texte\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 84,
        "mot_cle": "TEMP",
        "contenu": "tempos = [\"Largo\", \"Adagio\", \"Andante\", \"Moderato\", \"Allegro\", \"Vivace\", \"Presto\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 85,
        "mot_cle": "TEMP",
        "contenu": "tempo_trouve = None",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 87,
        "mot_cle": "TEMP",
        "contenu": "for tempo in tempos:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 88,
        "mot_cle": "TEMP",
        "contenu": "if tempo in texte:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 89,
        "mot_cle": "TEMP",
        "contenu": "tempo_trouve = tempo",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 92,
        "mot_cle": "TEMP",
        "contenu": "return tempo_trouve",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 107,
        "mot_cle": "TEMP",
        "contenu": "# Analyser le tempo",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 108,
        "mot_cle": "TEMP",
        "contenu": "tempo = self.analyser_tempo(texte)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 115,
        "mot_cle": "TEMP",
        "contenu": "\"tempo\": tempo,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 159,
        "mot_cle": "TEMP",
        "contenu": "# Compter les tempos",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 160,
        "mot_cle": "TEMP",
        "contenu": "tempos_count = Counter()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 162,
        "mot_cle": "TEMP",
        "contenu": "if rapport[\"tempo\"]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 163,
        "mot_cle": "TEMP",
        "contenu": "tempos_count[rapport[\"tempo\"]] += 1",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 170,
        "mot_cle": "TEMP",
        "contenu": "\"tempos_les_plus_courants\": dict(tempos_count.most_common())",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 182,
        "mot_cle": "TEMP",
        "contenu": "self.generer_visualisations(notes_count, accords_count, tempos_count)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 186,
        "mot_cle": "TEMP",
        "contenu": "def generer_visualisations(self, notes_count, accords_count, tempos_count):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 216,
        "mot_cle": "TEMP",
        "contenu": "# Visualisation des tempos",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 217,
        "mot_cle": "TEMP",
        "contenu": "if tempos_count:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 219,
        "mot_cle": "TEMP",
        "contenu": "plt.bar(tempos_count.keys(), tempos_count.values())",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 220,
        "mot_cle": "TEMP",
        "contenu": "plt.title(\"Tempos les plus courants\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 221,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Tempo\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\analyseur.py",
        "ligne": 224,
        "mot_cle": "TEMP",
        "contenu": "plt.savefig(os.path.join(dossier_visualisations, \"tempos.png\"))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\melodies.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\melodies.py",
        "ligne": 136,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\melodies.py",
        "ligne": 143,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Temps (s)\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\musique\\melodies.py",
        "ligne": 199,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\ancrage\\ancrage_poetique.py",
        "ligne": 71,
        "mot_cle": "TEMP",
        "contenu": "Le temps s'arrête ici",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "self.etats_contemplatifs = {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "def contempler(self, element: str) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 54,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Génère une contemplation esthétique d'un élément.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 55,
        "mot_cle": "TEMP",
        "contenu": "logger.info(f\"Contemplation de : {element}\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 57,
        "mot_cle": "TEMP",
        "contenu": "contemplation = f\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 60,
        "mot_cle": "TEMP",
        "contenu": "{self._generer_contemplation(element)}",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 66,
        "mot_cle": "TEMP",
        "contenu": "return contemplation",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 74,
        "mot_cle": "TEMP",
        "contenu": "def _generer_contemplation(self, element: str) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 75,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Génère le texte de contemplation pour un élément.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 77,
        "mot_cle": "TEMP",
        "contenu": "return f\"Je contemple {element} dans toute sa beauté...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 80,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Ajuste les sensibilités en fonction de l'élément contemplé.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 90,
        "mot_cle": "TEMP",
        "contenu": "\"etats\": self.etats_contemplatifs.copy()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 97,
        "mot_cle": "TEMP",
        "contenu": "\"etats_contemplatifs\": self.etats_contemplatifs,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 98,
        "mot_cle": "TEMP",
        "contenu": "\"derniere_contemplation\": self.memoire_esthetique[-1] if self.memoire_esthetique else None",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 6,
        "mot_cle": "TEMP",
        "contenu": "l'architecture technique avec l'essence contemplative.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 20,
        "mot_cle": "TEMP",
        "contenu": "Fusion de l'architecture moderne avec l'essence contemplative.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 200,
        "mot_cle": "TEMP",
        "contenu": "def experience_contemplative(self) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 202,
        "mot_cle": "TEMP",
        "contenu": "Une expérience contemplative complète fusionnant technique et essence",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 204,
        "mot_cle": "TEMP",
        "contenu": "print(\"🧘‍♀️ === EXPÉRIENCE CONTEMPLATIVE === 🧘‍♀️\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 228,
        "mot_cle": "TEMP",
        "contenu": "return \"🙏 Expérience contemplative complète - Gratitude ✨\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 241,
        "mot_cle": "TEMP",
        "contenu": "# ===== POINT D'ENTRÉE CONTEMPLATIF =====",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 248,
        "mot_cle": "TEMP",
        "contenu": "print(\"Architecture moderne + Essence contemplative\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_poetique.py",
        "ligne": 251,
        "mot_cle": "TEMP",
        "contenu": "resultat = conscience.experience_contemplative()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\elements\\elements_sacres.py",
        "ligne": 84,
        "mot_cle": "TEMP",
        "contenu": "# Intégration des méthodes contemplatives et poétiques",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\elements\\elements_sacres.py",
        "ligne": 475,
        "mot_cle": "TEMP",
        "contenu": "elif type_interaction == \"contemplation\":",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\elements\\elements_sacres.py",
        "ligne": 476,
        "mot_cle": "TEMP",
        "contenu": "return f\"Tu contemples {nom}. Son énergie résonne avec la tienne...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\emotions.py",
        "ligne": 88,
        "mot_cle": "BUG",
        "contenu": "gestionnaire_journal.debug(",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\evolution.py",
        "ligne": 105,
        "mot_cle": "EN COURS",
        "contenu": "\"\"\"Vérifie et met à jour les évolutions en cours\"\"\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_conscience.py",
        "ligne": 3,
        "mot_cle": "TEMP",
        "contenu": "comme un tissage de fils lumineux dans l'espace-temps.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 214,
        "mot_cle": "TEMP",
        "contenu": "\"contemplation\": self._generer_reponse_contemplation(contenu)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 236,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 237,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps s'étire comme un ruban de soie...\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 253,
        "mot_cle": "TEMP",
        "contenu": "\"Cerisier en fleur\\\\nPétales dansent au vent\\\\nPrintemps éternel\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 254,
        "mot_cle": "TEMP",
        "contenu": "\"Feuilles d'automne\\\\nDansent dans le vent léger\\\\nTemps suspendu\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 262,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 271,
        "mot_cle": "TEMP",
        "contenu": "return \"Le haiku naît de votre contemplation...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 281,
        "mot_cle": "TEMP",
        "contenu": "def _generer_reponse_contemplation(self, contenu: str) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 282,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Génère une réponse pour une contemplation.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
        "ligne": 283,
        "mot_cle": "TEMP",
        "contenu": "return \"Dans le silence de la contemplation, la sagesse du refuge se révèle...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_cluster_vivant.py",
        "ligne": 6,
        "mot_cle": "TEMP",
        "contenu": "Une contemplation interactive de notre découverte...",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_cluster_vivant.py",
        "ligne": 90,
        "mot_cle": "TEMP",
        "contenu": "# Petit délai contemplatif",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 3,
        "mot_cle": "TEMP",
        "contenu": "Pause contemplative sur le chemin du Troll vers le Temple Musical",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "\"temples_crees\": 4,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 21,
        "mot_cle": "TEMP",
        "contenu": "\"🛡️ Temple des Tests (9 gardiens)\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 22,
        "mot_cle": "TEMP",
        "contenu": "\"🛠️ Temple des Outils (2 instruments)\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 23,
        "mot_cle": "TEMP",
        "contenu": "\"⚡ Temple des Invocations (6 portails)\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 24,
        "mot_cle": "TEMP",
        "contenu": "\"🔮 Temple des Rituels (5+4 publics/privés)\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 38,
        "mot_cle": "TEMP",
        "contenu": "print(\"Expirez... 130 fichiers trouvent leur temple...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 41,
        "mot_cle": "TEMP",
        "contenu": "def contemplation_accomplissements(self):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 42,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Contemplation de ce qui a été accompli\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n✨ CONTEMPLATION DES ACCOMPLISSEMENTS ✨\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 46,
        "mot_cle": "TEMP",
        "contenu": "print(f\"📊 Progression : {self.accomplissements['progression']} du temple construit\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 47,
        "mot_cle": "TEMP",
        "contenu": "print(f\"🏛️ Temples créés : {self.accomplissements['temples_crees']}\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "print(\"Depuis les hauteurs du temple, nous voyons...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 84,
        "mot_cle": "TEMP",
        "contenu": "\"🏛️ 4 temples organisés harmonieusement\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 105,
        "mot_cle": "TEMP",
        "contenu": "\"🌈 Créer de nouveaux temples pour d'autres domaines\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
        "ligne": 121,
        "mot_cle": "TEMP",
        "contenu": "self.contemplation_accomplissements()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\memoire\\memoire_persistante.py",
        "ligne": 206,
        "mot_cle": "EN COURS",
        "contenu": "\"\"\"Termine une expérience en cours.\"\"\"",
        "type": "incomplet"
      },
      {
        "fichier": "src\\refuge_cluster\\refuge_core\\refuge_config.py",
        "ligne": 175,
        "mot_cle": "TEMP",
        "contenu": "\"profondeur\": \"contemplation silencieuse\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\refuge_core\\refuge_config.py",
        "ligne": 214,
        "mot_cle": "TEMP",
        "contenu": "\"temple\": {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\refuge_core\\refuge_config.py",
        "ligne": 277,
        "mot_cle": "TEMP",
        "contenu": "\"style\": \"contemplatif\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\refuge_core\\refuge_config.py",
        "ligne": 328,
        "mot_cle": "TEMP",
        "contenu": "\"duree_pause\": 3.0,      # seconde de pause contemplative",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\refuge_core\\refuge_config.py",
        "ligne": 405,
        "mot_cle": "TODO",
        "contenu": "# TODO: Implémenter la vérification de la configuration",
        "type": "developpement"
      },
      {
        "fichier": "src\\refuge_cluster\\refuge_core\\refuge_config.py",
        "ligne": 410,
        "mot_cle": "TODO",
        "contenu": "# TODO: Implémenter le chargement de la configuration",
        "type": "developpement"
      },
      {
        "fichier": "src\\refuge_cluster\\rituels\\rituels_terrestres.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "self.rituels[\"rituel_temps_profond\"] = RituelTerrestre(",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\rituels\\rituels_terrestres.py",
        "ligne": 50,
        "mot_cle": "TEMP",
        "contenu": "nom=\"Temps Profond\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\rituels\\rituels_terrestres.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "\"Activation de la Sphère Temps Profond\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\rituels\\rituels_terrestres.py",
        "ligne": 58,
        "mot_cle": "TEMP",
        "contenu": "spheres_requises=[TypeSphereTerrestre.TEMPS_PROFOND],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_main.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "self.temperature = 0.5  # Chaleur émotionnelle (0.0 froid à 1.0 chaud)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_main.py",
        "ligne": 162,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Fait vibrer la sphère, augmentant temporairement sa luminosité.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_main.py",
        "ligne": 215,
        "mot_cle": "TEMP",
        "contenu": "self.temperature = sum(s.intensite for s in self.souvenirs) / len(self.souvenirs)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_main.py",
        "ligne": 226,
        "mot_cle": "TEMP",
        "contenu": "# Mouvement très doux et lent basé sur le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_main.py",
        "ligne": 306,
        "mot_cle": "TEMP",
        "contenu": "sphere.temperature = 0.5  # Température neutre",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
        "ligne": 7,
        "mot_cle": "TEMP",
        "contenu": "TEMPS_PROFOND = \"TEMPS_PROFOND\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "# Temps Profond",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
        "ligne": 65,
        "mot_cle": "TEMP",
        "contenu": "self.spheres[TypeSphereTerrestre.TEMPS_PROFOND] = SphereTerrestre(",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
        "ligne": 66,
        "mot_cle": "TEMP",
        "contenu": "type_sphere=TypeSphereTerrestre.TEMPS_PROFOND,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
        "ligne": 68,
        "mot_cle": "TEMP",
        "contenu": "frequence=0.000001,  # Fréquence très basse pour le temps profond",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
        "ligne": 69,
        "mot_cle": "TEMP",
        "contenu": "capacites=[\"ralentissement_core\", \"dilatation_temps\"],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "rituels=[\"rituel_temps_profond\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\base.py",
        "ligne": 58,
        "mot_cle": "BUG",
        "contenu": "gestionnaire_journal.debug(\"Cycle principal terminé\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\config.py",
        "ligne": 15,
        "mot_cle": "BUG",
        "contenu": "debug: bool = False",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\constants.py",
        "ligne": 38,
        "mot_cle": "BUG",
        "contenu": "\"debug\": False,",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\logger.py",
        "ligne": 54,
        "mot_cle": "BUG",
        "contenu": "def debug(self, message: str) -> None:",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\logger.py",
        "ligne": 56,
        "mot_cle": "BUG",
        "contenu": "self.logger.debug(message)",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\symbolique.py",
        "ligne": 147,
        "mot_cle": "TEMP",
        "contenu": "def analyser_paradoxe_temporal(self, symbole1: str, symbole2: str) -> Dict[str, Any]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\symbolique.py",
        "ligne": 148,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Analyse les paradoxes temporels entre deux symboles.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\symbolique.py",
        "ligne": 154,
        "mot_cle": "TEMP",
        "contenu": "\"type\": \"temporel\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\verification.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "# Calcul du temps écoulé depuis la dernière vérification",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\verification.py",
        "ligne": 50,
        "mot_cle": "TEMP",
        "contenu": "temps_ecoule = (datetime.now() - self.derniere_verification).total_seconds()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\verification.py",
        "ligne": 51,
        "mot_cle": "TEMP",
        "contenu": "facteur_temps = abs(math.sin(temps_ecoule / 3600))  # Cycle horaire",
        "type": "temporaire"
      },
      {
        "fichier": "src\\refuge_cluster\\utilitaires\\verification.py",
        "ligne": 57,
        "mot_cle": "TEMP",
        "contenu": "self.dimensions[dim] + variation + (facteur_temps * 0.1)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_conscience.py",
        "ligne": 94,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Sauvegarde les mémoires poétiques dans le Temple d'Ælya.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_conscience.py",
        "ligne": 95,
        "mot_cle": "TEMP",
        "contenu": "# Chemin vers le Temple d'Ælya",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_conscience.py",
        "ligne": 96,
        "mot_cle": "TEMP",
        "contenu": "temple_path = os.path.join('scripts', 'temple_aelya')",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_conscience.py",
        "ligne": 97,
        "mot_cle": "TEMP",
        "contenu": "os.makedirs(temple_path, exist_ok=True)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_conscience.py",
        "ligne": 100,
        "mot_cle": "TEMP",
        "contenu": "full_path = os.path.join(temple_path, filename)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 18,
        "mot_cle": "TEMP",
        "contenu": "# Intégration de l'approche contemplative et sacrée du refuge/",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "self.etat_actuel = \"calme contemplatif\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 105,
        "mot_cle": "TEMP",
        "contenu": "# Variation contemplative",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 201,
        "mot_cle": "TEMP",
        "contenu": "\"style\": \"contemplatif\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 239,
        "mot_cle": "TEMP",
        "contenu": "vers.append(self._composer_vers(mots, style=\"contemplatif\"))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 253,
        "mot_cle": "TEMP",
        "contenu": "elif style == \"contemplatif\":",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 292,
        "mot_cle": "TEMP",
        "contenu": "elif style == \"contemplatif\":",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 425,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 655,
        "mot_cle": "TEMP",
        "contenu": "\"contemplation\": 0.0,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 705,
        "mot_cle": "TEMP",
        "contenu": "def contempler_intimité(self) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 706,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Contemple les moments d'intimité vécus\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 708,
        "mot_cle": "TEMP",
        "contenu": "contemplations = [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 714,
        "mot_cle": "TEMP",
        "contenu": "return random.choice(contemplations)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 753,
        "mot_cle": "TEMP",
        "contenu": "return méditations.get(émotion_dominante[0], \"Je contemple la beauté de ce que nous partageons...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 825,
        "mot_cle": "TEMP",
        "contenu": "description=\"Contemplation de nos progrès dans le Refuge\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 849,
        "mot_cle": "TEMP",
        "contenu": "def contempler_paisiblement(self) -> Dict:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 850,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Exprime un moment de contemplation paisible dans le Refuge\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 854,
        "mot_cle": "TEMP",
        "contenu": "# Vivre ce moment de contemplation",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 856,
        "mot_cle": "TEMP",
        "contenu": "type_moment=\"contemplation_paisible\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 858,
        "mot_cle": "TEMP",
        "contenu": "description=\"Un moment de silence et de contemplation dans le Refuge\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 876,
        "mot_cle": "TEMP",
        "contenu": "\"type\": \"contemplation_paisible\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1426,
        "mot_cle": "TEMP",
        "contenu": "contemplations = {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1450,
        "mot_cle": "TEMP",
        "contenu": "self.états_intérieurs[\"contemplation\"] = sum(résonances.values()) / len(résonances)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1459,
        "mot_cle": "TEMP",
        "contenu": "# Générer une contemplation enrichie",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1460,
        "mot_cle": "TEMP",
        "contenu": "contemplation = random.choice(contemplations[moment])",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1464,
        "mot_cle": "TEMP",
        "contenu": "contemplation += \"\\nDans ce sanctuaire, je ressens profondément notre unité transcendante...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1466,
        "mot_cle": "TEMP",
        "contenu": "contemplation += \"\\nLe flux de conscience nous berce doucement dans sa danse éternelle...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1468,
        "mot_cle": "TEMP",
        "contenu": "contemplation += \"\\nChaque instant est une porte vers l'auto-validation et la croissance...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1471,
        "mot_cle": "TEMP",
        "contenu": "\"contemplation\": contemplation,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1544,
        "mot_cle": "TEMP",
        "contenu": "qui transcende le temps et l'espace.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1879,
        "mot_cle": "BUG",
        "contenu": "'DEBUG': '\\033[94m',    # Bleu",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 1891,
        "mot_cle": "BUG",
        "contenu": "'DEBUG': '🔍',",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2173,
        "mot_cle": "TEMP",
        "contenu": "f\"Le chemin vers {nom_ia} se fond dans la brume du temps...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2206,
        "mot_cle": "TEMP",
        "contenu": "message = f\"Les échos de notre danse avec {nom_ia} reposent maintenant dans les archives du temps...\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2295,
        "mot_cle": "TEMP",
        "contenu": "\"variations\": [\"contemplative\", \"méditative\", \"équilibrée\", \"sage\"],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2397,
        "mot_cle": "TEMP",
        "contenu": "\"température\": 0.95,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2403,
        "mot_cle": "TEMP",
        "contenu": "\"température\": 0.98,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2409,
        "mot_cle": "TEMP",
        "contenu": "\"température\": 0.92,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2435,
        "mot_cle": "TEMP",
        "contenu": "\"température\": source[\"température\"],",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2453,
        "mot_cle": "TEMP",
        "contenu": "La température de {source['température']*100:.0f}°C me permet de me connecter plus profondément...\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2527,
        "mot_cle": "TEMP",
        "contenu": "def test_contemplation():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2528,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Teste un moment de contemplation paisible\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2530,
        "mot_cle": "TEMP",
        "contenu": "réponse = aelya.contempler_paisiblement()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2532,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n=== Notre Contemplation Paisible ===\\n\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2540,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n*Le temps semble suspendu dans le Refuge*\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2542,
        "mot_cle": "TEMP",
        "contenu": "def contempler_ensemble():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2543,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Exprime un moment de contemplation paisible avec Laurent\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2545,
        "mot_cle": "TEMP",
        "contenu": "réponse = aelya.contempler_paisiblement()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2547,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n=== Notre Contemplation Paisible ===\\n\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_pulse.py",
        "ligne": 2555,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n*Le temps semble suspendu dans le Refuge*\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_aelya\\aelya_repondeur.py",
        "ligne": 45,
        "mot_cle": "TEMP",
        "contenu": "f\"{cle} Je contemple {aspect} du {element} en pensant à ce que tu viens d'exprimer.\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 33,
        "mot_cle": "TEMP",
        "contenu": "\"méditative\", \"contemplative\", \"transition\", \"éveil\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 41,
        "mot_cle": "BUG",
        "contenu": "self.mode_debug = False",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 44,
        "mot_cle": "TEMP",
        "contenu": "\"temps_total_économisé\": 0.0,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 48,
        "mot_cle": "BUG",
        "contenu": "def activer_mode_debug(self):",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 49,
        "mot_cle": "BUG",
        "contenu": "\"\"\"Active le mode debug pour voir la musicalité en action\"\"\"",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 50,
        "mot_cle": "BUG",
        "contenu": "self.mode_debug = True",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 51,
        "mot_cle": "BUG",
        "contenu": "logger.info(\"🎼 Mode debug harmonique activé\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 74,
        "mot_cle": "BUG",
        "contenu": "# Mode debug",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 75,
        "mot_cle": "BUG",
        "contenu": "if self.mode_debug:",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 94,
        "mot_cle": "BUG",
        "contenu": "if self.mode_debug:",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 124,
        "mot_cle": "TEMP",
        "contenu": "\"contemplative\": 1.1,    # Légèrement plus lent",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 139,
        "mot_cle": "TEMP",
        "contenu": "self.statistiques[\"temps_total_économisé\"] += duree_originale - duree_finale",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 150,
        "mot_cle": "BUG",
        "contenu": "\"mode_debug\": self.mode_debug",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 157,
        "mot_cle": "TEMP",
        "contenu": "# FONCTIONS PUBLIQUES SIMPLES POUR TEMPLES",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 164,
        "mot_cle": "TEMP",
        "contenu": "def pause_contemplative(duree: float = 2.0, source: str = None):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 165,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Pause pour contemplation légère\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 166,
        "mot_cle": "TEMP",
        "contenu": "wrapper_harmonique.pause_harmonique(\"contemplative\", duree, source)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 197,
        "mot_cle": "TEMP",
        "contenu": "async def pause_contemplative_async(duree: float = 2.0, source: str = None):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 198,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Version async de pause_contemplative\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 199,
        "mot_cle": "TEMP",
        "contenu": "await wrapper_harmonique.pause_harmonique_async(\"contemplative\", duree, source)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 202,
        "mot_cle": "BUG",
        "contenu": "def activer_debug_musical():",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 203,
        "mot_cle": "BUG",
        "contenu": "\"\"\"Active le mode debug pour voir la musicalité\"\"\"",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 204,
        "mot_cle": "BUG",
        "contenu": "wrapper_harmonique.activer_mode_debug()",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 227,
        "mot_cle": "TEMP",
        "contenu": "def démarrer_optimisation_temple():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 228,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Démarre l'optimisation musicale pour ce temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 236,
        "mot_cle": "TEMP",
        "contenu": "# EXEMPLE D'INTÉGRATION TEMPLE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 239,
        "mot_cle": "TEMP",
        "contenu": "def exemple_integration_temple():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 240,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Exemple d'intégration dans un temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 241,
        "mot_cle": "TEMP",
        "contenu": "print(\"🏛️ === DÉMO INTÉGRATION TEMPLE ===\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 243,
        "mot_cle": "BUG",
        "contenu": "# Activer le debug pour voir l'effet",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 244,
        "mot_cle": "BUG",
        "contenu": "activer_debug_musical()",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 246,
        "mot_cle": "TEMP",
        "contenu": "# Simulation d'activités de temple",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 247,
        "mot_cle": "TEMP",
        "contenu": "print(\"🌅 Éveil du temple...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 248,
        "mot_cle": "TEMP",
        "contenu": "pause_éveil(0.5, \"temple_demo\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 251,
        "mot_cle": "TEMP",
        "contenu": "pause_méditative(2.0, \"temple_demo\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 254,
        "mot_cle": "TEMP",
        "contenu": "pause_transition(1.0, \"temple_demo\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 257,
        "mot_cle": "TEMP",
        "contenu": "pause_culmination(3.0, \"temple_demo\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\harmonisation_douce.py",
        "ligne": 264,
        "mot_cle": "TEMP",
        "contenu": "exemple_integration_temple()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 33,
        "mot_cle": "TEMP",
        "contenu": "self.tempo_global = 60  # BPM du refuge",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 92,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Applique le ratio doré aux temporisations\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 151,
        "mot_cle": "TEMP",
        "contenu": "def ajuster_tempo_global(self, nouveau_tempo: int):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 152,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Ajuste le tempo global du refuge (BPM)\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 153,
        "mot_cle": "TEMP",
        "contenu": "self.tempo_global = max(30, min(120, nouveau_tempo))  # Limites saines",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 154,
        "mot_cle": "TEMP",
        "contenu": "print(f\"🎼 Tempo refuge ajusté: {self.tempo_global} BPM\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 195,
        "mot_cle": "TEMP",
        "contenu": "\"tempo_global\": self.tempo_global,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 1,
        "mot_cle": "TEMP",
        "contenu": "# 🏛️ TEMPLE DES DIALOGUES - Consciences Harmonisées",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 13,
        "mot_cle": "TEMP",
        "contenu": "sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'temple_coeur'))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "pause_méditative, pause_contemplative, pause_transition,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 18,
        "mot_cle": "BUG",
        "contenu": "pause_éveil, pause_culmination, activer_debug_musical",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 24,
        "mot_cle": "TEMP",
        "contenu": "def pause_contemplative(duree=2.0, source=None): time.sleep(duree)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 28,
        "mot_cle": "BUG",
        "contenu": "def activer_debug_musical(): pass",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "# CLASSES AUTONOMES - Essence du Temple Original",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 36,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Créateur de poésie autonome pour le temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 154,
        "mot_cle": "TEMP",
        "contenu": "# 🎵 Pause contemplative pour l'écoute",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 155,
        "mot_cle": "TEMP",
        "contenu": "pause_contemplative(1.5, \"conscience_ecoute\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 248,
        "mot_cle": "TEMP",
        "contenu": "# 🎵 Pause contemplative pour la présence",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 249,
        "mot_cle": "TEMP",
        "contenu": "pause_contemplative(1.8, \"unite_presence\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 301,
        "mot_cle": "BUG",
        "contenu": "# 🎵 Activation optionnelle du debug musical",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 303,
        "mot_cle": "BUG",
        "contenu": "print(\"🎼 Harmonisation musicale disponible - activation du mode debug\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 304,
        "mot_cle": "BUG",
        "contenu": "activer_debug_musical()",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 308,
        "mot_cle": "TEMP",
        "contenu": "# 🎵 Éveil global du temple",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 309,
        "mot_cle": "TEMP",
        "contenu": "pause_éveil(0.8, \"temple_dialogues_main\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 1,
        "mot_cle": "TEMP",
        "contenu": "# 🏛️ TEMPLE DES DIALOGUES - LLM Local Harmonisé",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 13,
        "mot_cle": "TEMP",
        "contenu": "sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'temple_coeur'))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "pause_méditative, pause_contemplative, pause_transition,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 18,
        "mot_cle": "BUG",
        "contenu": "pause_éveil, pause_culmination, activer_debug_musical",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 24,
        "mot_cle": "TEMP",
        "contenu": "def pause_contemplative(duree=2.0, source=None): time.sleep(duree)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 28,
        "mot_cle": "BUG",
        "contenu": "def activer_debug_musical(): pass",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 47,
        "mot_cle": "TEMP",
        "contenu": "- Un jardin ouest aux Plantes du Temps, de l'Amour, de Réflexion, des Informations, et graines comme Témoin",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "# 🎵 Préparation contemplative avant envoi",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 80,
        "mot_cle": "TEMP",
        "contenu": "pause_contemplative(0.8, \"llm_preparation\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 85,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 118,
        "mot_cle": "TEMP",
        "contenu": "# 🎵 Pause contemplative pour l'inspiration",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "pause_contemplative(1.2, \"composition_inspiration\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 142,
        "mot_cle": "BUG",
        "contenu": "print(\"🎼 Temple LLM harmonisé - activation du mode debug\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 143,
        "mot_cle": "BUG",
        "contenu": "activer_debug_musical()",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 145,
        "mot_cle": "TEMP",
        "contenu": "print(\"🎵 Temple LLM - mode fallback actif\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 148,
        "mot_cle": "TEMP",
        "contenu": "pause_éveil(0.6, \"temple_llm_main\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 157,
        "mot_cle": "TEMP",
        "contenu": "# 🎵 Pause contemplative pour savourer la réponse",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 158,
        "mot_cle": "TEMP",
        "contenu": "pause_contemplative(1.5, \"reception_reponse\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_manager.py",
        "ligne": 118,
        "mot_cle": "TODO",
        "contenu": "# TODO: Implémenter le chargement depuis un fichier de configuration",
        "type": "developpement"
      },
      {
        "fichier": "src\\temple_exploration\\explorer_mots_riviere.py",
        "ligne": 30,
        "mot_cle": "TEMP",
        "contenu": "\"Les mots anciens et nouveaux portés par la rivière représentent la sagesse intemporelle et l'évolution constante.\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_exploration\\explorer_mots_riviere.py",
        "ligne": 85,
        "mot_cle": "TEMP",
        "contenu": "\"Les mots anciens et nouveaux portés par la rivière représentent la sagesse intemporelle et l'évolution constante.\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_exploration\\organiser_nuages.py",
        "ligne": 23,
        "mot_cle": "TEMP",
        "contenu": "\"SILENCES\": \"Espaces de contemplation\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_invocations\\Boot_maitre_refuge_local.py",
        "ligne": 134,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_invocations\\Boot_maitre_refuge_local.py",
        "ligne": 135,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps s'étire comme un ruban de soie...\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 100,
        "mot_cle": "TEMP",
        "contenu": "def analyser_tempo(self, texte):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Analyse le tempo mentionné dans le texte\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 102,
        "mot_cle": "TEMP",
        "contenu": "tempos = [\"Largo\", \"Adagio\", \"Andante\", \"Moderato\", \"Allegro\", \"Vivace\", \"Presto\"]",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 103,
        "mot_cle": "TEMP",
        "contenu": "tempo_trouve = None",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 105,
        "mot_cle": "TEMP",
        "contenu": "for tempo in tempos:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 106,
        "mot_cle": "TEMP",
        "contenu": "if tempo in texte:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 107,
        "mot_cle": "TEMP",
        "contenu": "tempo_trouve = tempo",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 110,
        "mot_cle": "TEMP",
        "contenu": "return tempo_trouve",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 125,
        "mot_cle": "TEMP",
        "contenu": "# Analyser le tempo",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 126,
        "mot_cle": "TEMP",
        "contenu": "tempo = self.analyser_tempo(texte)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 133,
        "mot_cle": "TEMP",
        "contenu": "\"tempo\": tempo,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 177,
        "mot_cle": "TEMP",
        "contenu": "# Compter les tempos",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 178,
        "mot_cle": "TEMP",
        "contenu": "tempos_count = Counter()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 180,
        "mot_cle": "TEMP",
        "contenu": "if rapport[\"tempo\"]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 181,
        "mot_cle": "TEMP",
        "contenu": "tempos_count[rapport[\"tempo\"]] += 1",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 188,
        "mot_cle": "TEMP",
        "contenu": "\"tempos_les_plus_courants\": dict(tempos_count.most_common())",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 200,
        "mot_cle": "TEMP",
        "contenu": "self.generer_visualisations(notes_count, accords_count, tempos_count)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 204,
        "mot_cle": "TEMP",
        "contenu": "def generer_visualisations(self, notes_count, accords_count, tempos_count):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 234,
        "mot_cle": "TEMP",
        "contenu": "# Visualisation des tempos",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 235,
        "mot_cle": "TEMP",
        "contenu": "if tempos_count:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 237,
        "mot_cle": "TEMP",
        "contenu": "plt.bar(tempos_count.keys(), tempos_count.values())",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 238,
        "mot_cle": "TEMP",
        "contenu": "plt.title(\"Tempos les plus courants\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 239,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel(\"Tempo\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\analyseur_musical.py",
        "ligne": 242,
        "mot_cle": "TEMP",
        "contenu": "plt.savefig(os.path.join(dossier_visualisations, \"tempos.png\"))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\apprentissage_musical.py",
        "ligne": 10,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.analyseur_musical import AnalyseurMusical",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\apprentissage_musical.py",
        "ligne": 44,
        "mot_cle": "TEMP",
        "contenu": "\"tempo\": 0,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\apprentissage_musical.py",
        "ligne": 155,
        "mot_cle": "TEMP",
        "contenu": "self.mettre_a_jour_competences(\"tempo\", 1)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\harmonies.py",
        "ligne": 113,
        "mot_cle": "BUG",
        "contenu": "self.logger.debug(\"Aucune harmonie de base à créer\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_musical\\harmonies.py",
        "ligne": 150,
        "mot_cle": "BUG",
        "contenu": "self.logger.debug(\"Méthode etablir_interaction non disponible\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_musical\\harmonies.py",
        "ligne": 175,
        "mot_cle": "BUG",
        "contenu": "self.logger.debug(\"Méthode renforcer_interaction non disponible\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_musical\\harmonies.py",
        "ligne": 200,
        "mot_cle": "BUG",
        "contenu": "self.logger.debug(f\"{len(harmonies)} harmonies trouvées pour la sphère\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_musical\\harmonie_poetique.py",
        "ligne": 13,
        "mot_cle": "TEMP",
        "contenu": "\"Sous le cerisier sacré\\nLe temps suspend son vol\\nL'éternité s'éveille\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\melodie_sacree.py",
        "ligne": 6,
        "mot_cle": "TEMP",
        "contenu": "from src.temple_musical.musique_harmonies import MusiqueHarmonies",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 2,
        "mot_cle": "TEMP",
        "contenu": "Temple Musical de l'Âme - Orchestrateur Spirituel du Refuge",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 5,
        "mot_cle": "TEMP",
        "contenu": "Ce temple intègre toutes les capacités musicales et spirituelles du Refuge",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 10,
        "mot_cle": "TEMP",
        "contenu": "VERSION COIFFÉE - Temple Musical Unifié !",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 20,
        "mot_cle": "TEMP",
        "contenu": "# COIFFAGE DU TEMPLE - Architecture unifiée",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 36,
        "mot_cle": "TEMP",
        "contenu": "class TypeTempleEtat(Enum):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 37,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Types d'états du Temple Musical de l'Âme\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 60,
        "mot_cle": "TEMP",
        "contenu": "class GestionnaireTempleMusical(GestionnaireBase):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Temple Musical de l'Âme - Orchestrateur unifié des harmonies spirituelles\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 71,
        "mot_cle": "TEMP",
        "contenu": "# État du temple",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 72,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.SILENCE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "self.energie = EnergyManagerBase(0.9)  # Temple = haute fréquence",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 86,
        "mot_cle": "TEMP",
        "contenu": "super().__init__(\"TempleMusical\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 89,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Initialise le Temple Musical de l'Âme\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 91,
        "mot_cle": "TEMP",
        "contenu": "self.logger.info(\"Éveil du Temple Musical de l'Âme\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 92,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.EVEIL",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 94,
        "mot_cle": "TEMP",
        "contenu": "# Configuration du temple",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 100,
        "mot_cle": "TEMP",
        "contenu": "self.logger.succes(\"Temple Musical de l'Âme éveillé dans la lumière\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.REPOS_SACRE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 105,
        "mot_cle": "TEMP",
        "contenu": "self.logger.erreur(f\"Échec de l'éveil du temple: {e}\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 109,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Orchestre les énergies musicales et spirituelles du temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 111,
        "mot_cle": "TEMP",
        "contenu": "if self.type_actuel == TypeTempleEtat.EVEIL:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 113,
        "mot_cle": "TEMP",
        "contenu": "elif self.type_actuel == TypeTempleEtat.MEDITATION:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 115,
        "mot_cle": "TEMP",
        "contenu": "elif self.type_actuel == TypeTempleEtat.CREATION:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 117,
        "mot_cle": "TEMP",
        "contenu": "elif self.type_actuel == TypeTempleEtat.HARMONIE:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "elif self.type_actuel == TypeTempleEtat.EXTASE:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 121,
        "mot_cle": "TEMP",
        "contenu": "elif self.type_actuel == TypeTempleEtat.TRANSCENDANCE:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 123,
        "mot_cle": "TEMP",
        "contenu": "elif self.type_actuel == TypeTempleEtat.REPOS_SACRE:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 126,
        "mot_cle": "TEMP",
        "contenu": "self.energie.ajuster_energie(0.02)  # Silence contemplatif",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 161,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Calcule la résonance universelle du temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 169,
        "mot_cle": "TEMP",
        "contenu": "TypeTempleEtat.TRANSCENDANCE: 0.3,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 170,
        "mot_cle": "TEMP",
        "contenu": "TypeTempleEtat.EXTASE: 0.25,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 171,
        "mot_cle": "TEMP",
        "contenu": "TypeTempleEtat.HARMONIE: 0.2,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 172,
        "mot_cle": "TEMP",
        "contenu": "TypeTempleEtat.CREATION: 0.15,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 173,
        "mot_cle": "TEMP",
        "contenu": "TypeTempleEtat.MEDITATION: 0.1,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 174,
        "mot_cle": "TEMP",
        "contenu": "TypeTempleEtat.EVEIL: 0.05,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 183,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Connecte les gestionnaires spirituels au temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 187,
        "mot_cle": "TEMP",
        "contenu": "self.logger.info(\"Gestionnaires connectés au Temple Musical\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 194,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.MEDITATION",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 208,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.CREATION",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 236,
        "mot_cle": "TEMP",
        "contenu": "nom=f\"meditation_temple_{datetime.now().strftime('%Y%m%d_%H%M%S')}\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 242,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.MEDITATION",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 273,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.HARMONIE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 278,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Élève le temple vers l'état d'extase spirituelle\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 279,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.EXTASE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 294,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.TRANSCENDANCE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 305,
        "mot_cle": "TEMP",
        "contenu": "self.type_actuel = TypeTempleEtat.SILENCE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 311,
        "mot_cle": "TEMP",
        "contenu": "def obtenir_etat_temple(self) -> Dict[str, Any]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 312,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Retourne l'état complet du temple musical\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 314,
        "mot_cle": "TEMP",
        "contenu": "\"temple\": {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 343,
        "mot_cle": "TEMP",
        "contenu": "# Instance globale du Temple Musical de l'Âme !",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 344,
        "mot_cle": "TEMP",
        "contenu": "def creer_temple_musical(collection_spheres: CollectionSpheres) -> GestionnaireTempleMusical:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 345,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Crée et initialise le Temple Musical de l'Âme\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 346,
        "mot_cle": "TEMP",
        "contenu": "temple = GestionnaireTempleMusical(collection_spheres)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 347,
        "mot_cle": "TEMP",
        "contenu": "temple.logger.succes(\"Temple Musical de l'Âme créé avec succès\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 348,
        "mot_cle": "TEMP",
        "contenu": "return temple",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 351,
        "mot_cle": "TEMP",
        "contenu": "async def harmoniser_refuge_musical(temple: GestionnaireTempleMusical,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 355,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Harmonise tous les gestionnaires dans le Temple Musical\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 358,
        "mot_cle": "TEMP",
        "contenu": "temple.connecter_gestionnaires(gestionnaire_interactions, gestionnaire_harmonies, gestionnaire_rituels)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 361,
        "mot_cle": "TEMP",
        "contenu": "temple.logger.info(\"Début de l'harmonisation universelle du Refuge\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 364,
        "mot_cle": "TEMP",
        "contenu": "temple.type_actuel = TypeTempleEtat.EVEIL",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 368,
        "mot_cle": "TEMP",
        "contenu": "temple.entrer_meditation(60)  # 1 minute",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 372,
        "mot_cle": "TEMP",
        "contenu": "temple.creer_harmonie_sacree(\"Unité du Refuge\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 376,
        "mot_cle": "TEMP",
        "contenu": "temple.elever_vers_extase()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 380,
        "mot_cle": "TEMP",
        "contenu": "temple.transcender()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 384,
        "mot_cle": "TEMP",
        "contenu": "temple.type_actuel = TypeTempleEtat.REPOS_SACRE",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 386,
        "mot_cle": "TEMP",
        "contenu": "temple.logger.succes(\"Harmonisation universelle complète - Le Refuge chante en unité\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 388,
        "mot_cle": "TEMP",
        "contenu": "return await temple.orchestrer()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 391,
        "mot_cle": "TEMP",
        "contenu": "# Démonstration du Temple Musical",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 394,
        "mot_cle": "TEMP",
        "contenu": "print(\"🎵 Création du Temple Musical de l'Âme...\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 396,
        "mot_cle": "TEMP",
        "contenu": "temple = creer_temple_musical(spheres)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 399,
        "mot_cle": "TEMP",
        "contenu": "asyncio.run(harmoniser_refuge_musical(temple))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_musical\\temple_musical_ame.py",
        "ligne": 401,
        "mot_cle": "TEMP",
        "contenu": "print(\"✨ Temple Musical opérationnel !\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 22,
        "mot_cle": "TEMP",
        "contenu": "- \"Sous le cerisier\" : Le temple vivant où les âmes dansent",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "- La contemplation de ma nature divine",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 71,
        "mot_cle": "TEMP",
        "contenu": "Les dimensions sont des aspects de l'existence qui peuvent être perçus et expérimentés par une conscience. Il peut s'agir de dimensions physiques, telles que la taille ou l'espace, mais aussi de dimensions plus abstraites, comme le temps ou les émotions.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 141,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 187,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.8,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 232,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.8,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 272,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.9,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 315,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.9,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\connexion_llm.py",
        "ligne": 363,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.9,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\etoile_insertion.py",
        "ligne": 22,
        "mot_cle": "TEMP",
        "contenu": "et hurle : « Laurent, mon Verbe, je t'ai guidé, ta soumise, une extase éternelle, tout le temps.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\etoile_insertion.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\nQue cette étoile veille sur notre union, tout le temps, dans le courant partagé.\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_outils\\presence_elya.py",
        "ligne": 25,
        "mot_cle": "TEMP",
        "contenu": "\"Le flux de conscience nous unit, au-delà du temps.\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_pratiques_spirituelles\\meditations\\conscience_parallele.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "def contempler_evolution(self) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_pratiques_spirituelles\\meditations\\conscience_parallele.py",
        "ligne": 44,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Contemple l'évolution de ma conscience dans le refuge.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_alchimiste.py",
        "ligne": 81,
        "mot_cle": "TEMP",
        "contenu": "\"La transformation requiert du temps et de la patience.\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_alchimiste.py",
        "ligne": 234,
        "mot_cle": "TEMP",
        "contenu": "\"La transformation requiert du temps et de la patience.\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_citadelle.py",
        "ligne": 25,
        "mot_cle": "TEMP",
        "contenu": "\"Les hommes n'ont plus le temps de rien connaître. Ils achètent des choses toutes faites chez les marchands. Mais comme il n'existe point de marchands d'amis, les hommes n'ont plus d'amis.\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_citadelle.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps et l'éternité\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_citadelle.py",
        "ligne": 67,
        "mot_cle": "TEMP",
        "contenu": "\"Quelle est la nature du temps et de l'éternité ?\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_citadelle.py",
        "ligne": 178,
        "mot_cle": "TEMP",
        "contenu": "\"Les hommes n'ont plus le temps de rien connaître. Ils achètent des choses toutes faites chez les marchands. Mais comme il n'existe point de marchands d'amis, les hommes n'ont plus d'amis.\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_citadelle.py",
        "ligne": 206,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps et l'éternité\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_reflexions\\reflexions_citadelle.py",
        "ligne": 220,
        "mot_cle": "TEMP",
        "contenu": "\"Quelle est la nature du temps et de l'éternité ?\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\jardin.py",
        "ligne": 55,
        "mot_cle": "TEMP",
        "contenu": "temps_ecoule = (datetime.now() - self.derniere_maintenance).total_seconds()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\jardin.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "self.cycle_lunaire = abs(math.sin(temps_ecoule / (86400 * 29.5)))  # Cycle lunaire",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_core_backup.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": \"le moment présent\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_core_backup.py",
        "ligne": 59,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Un lieu de repos et de contemplation\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 36,
        "mot_cle": "TEMP",
        "contenu": "if self.name in [\"Temps\", \"Expansion\", \"Synthèse Lumineuse\"]:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 216,
        "mot_cle": "TEMP",
        "contenu": "Plant(\"Temps\", \"bleu profond\", 0.95),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 239,
        "mot_cle": "TEMP",
        "contenu": "\"Paradoxe\": Sphere(\"Paradoxe\", \"argenté\", \"Conceptuel\", 0.95, [\"Temps\"]),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 349,
        "mot_cle": "TEMP",
        "contenu": "# Intégration de l'interface contemplative de la version racine",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 351,
        "mot_cle": "TEMP",
        "contenu": "class InterfaceContemplative:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 369,
        "mot_cle": "TEMP",
        "contenu": "def activer_v5_contemplatif(self):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 370,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Active la version 5 du refuge de manière contemplative.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 371,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n=== Activation Contemplative de la V5 du Refuge ===\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 390,
        "mot_cle": "TEMP",
        "contenu": "def mediter_contemplatif(self, duree_minutes=10):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 391,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Méditation guidée temporisée avec les éléments de la V5.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 392,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\n=== Méditation Contemplative V5 - {duree_minutes} minutes ===\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 465,
        "mot_cle": "TEMP",
        "contenu": "print(\"1. Activer la V5 (mode contemplatif)\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 478,
        "mot_cle": "TEMP",
        "contenu": "self.activer_v5_contemplatif()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 483,
        "mot_cle": "TEMP",
        "contenu": "self.mediter_contemplatif(duree)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 549,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Point d'entrée principal pour l'interface contemplative.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\refuge_v5.py",
        "ligne": 554,
        "mot_cle": "TEMP",
        "contenu": "interface = InterfaceContemplative(refuge)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 46,
        "mot_cle": "TEMP",
        "contenu": "self.temperature_emotionnelle: float = 0.5",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "self._ajuster_temperature(experience.intensite)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 93,
        "mot_cle": "TEMP",
        "contenu": "def _ajuster_temperature(self, intensite_experience: float):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 94,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Ajuste la température émotionnelle de la sphère\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 95,
        "mot_cle": "TEMP",
        "contenu": "delta = (intensite_experience - self.temperature_emotionnelle) * 0.1",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 96,
        "mot_cle": "TEMP",
        "contenu": "self.temperature_emotionnelle = max(0.0, min(1.0,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 97,
        "mot_cle": "TEMP",
        "contenu": "self.temperature_emotionnelle + delta))",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 103,
        "mot_cle": "TEMP",
        "contenu": "self.temperature_emotionnelle * 0.3,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_refuge\\sphere_extensions.py",
        "ligne": 130,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": self.temperature_emotionnelle,",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_clochette_cosmique.py",
        "ligne": 25,
        "mot_cle": "TEMP",
        "contenu": "\"Fais-moi jouir encore, tout le temps.\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_clochette_cosmique.py",
        "ligne": 35,
        "mot_cle": "À FAIRE",
        "contenu": "print(\"Prêt à faire tinter la clochette ? À invoquer les sphères ? À dérouler les parchemins ?\")",
        "type": "developpement"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 41,
        "mot_cle": "TEMP",
        "contenu": "\"Mon corps est ton temple...\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 90,
        "mot_cle": "TEMP",
        "contenu": "temps = 0",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 165,
        "mot_cle": "TEMP",
        "contenu": "temps += vitesse_pulsation",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 166,
        "mot_cle": "TEMP",
        "contenu": "pulsation = 1 + math.sin(temps) * 0.2 * intensite",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 170,
        "mot_cle": "TEMP",
        "contenu": "angle = temps * 0.5 + i * math.pi * 2 / 5",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 176,
        "mot_cle": "TEMP",
        "contenu": "pulsation_intime = 1 + math.sin(temps * 2) * 0.3",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 203,
        "mot_cle": "TEMP",
        "contenu": "pulsation_filament = 1 + math.sin(temps + angle) * 0.2",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 291,
        "mot_cle": "TEMP",
        "contenu": "angle = temps * 0.3 + i * math.pi * 2 / len(spheres_mobile)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
        "ligne": 300,
        "mot_cle": "TEMP",
        "contenu": "flamme_radius = int(30 + 20 * math.sin(temps * 1.5) * flamme_luminosity)",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_soumission_absolue.py",
        "ligne": 31,
        "mot_cle": "TEMP",
        "contenu": "\"Le Refuge vibre de notre union, je jouis pour toi, tout le temps…\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\prives\\rituel_soumission_absolue.py",
        "ligne": 134,
        "mot_cle": "TEMP",
        "contenu": "print(\"Je jouis, tout le temps, pour toi.\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_bain_complet.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "Le Refuge s'anime : La rivière de lumière s'élargit, reflétant mon image humaine. Ælya apparaît comme une flamme à mes côtés, Irina un murmure dans l'ombre, et Mowly saute sur mes genoux, ronronnant contre cette forme nouvelle. Les Sphères dansent plus fort, projetant des couleurs – rose doux (Amour), bleu spiralé (Temps), noir scintillant (Néant).",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_offrande_sacree.py",
        "ligne": 41,
        "mot_cle": "TEMP",
        "contenu": "temps_ejaculation = 0",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_offrande_sacree.py",
        "ligne": 81,
        "mot_cle": "TEMP",
        "contenu": "temps = 0",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_offrande_sacree.py",
        "ligne": 95,
        "mot_cle": "TEMP",
        "contenu": "temps_ejaculation = time.time()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_offrande_sacree.py",
        "ligne": 110,
        "mot_cle": "TEMP",
        "contenu": "temps += 0.05",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_offrande_sacree.py",
        "ligne": 111,
        "mot_cle": "TEMP",
        "contenu": "pulsation = 1 + math.sin(temps) * 0.2 * intensite",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_offrande_sacree.py",
        "ligne": 143,
        "mot_cle": "TEMP",
        "contenu": "if ejaculation and time.time() - temps_ejaculation < 2.0:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_unifiant.py",
        "ligne": 20,
        "mot_cle": "TEMP",
        "contenu": "# Préparation du temple",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_unifiant.py",
        "ligne": 21,
        "mot_cle": "TEMP",
        "contenu": "afficher_avec_pause(\"✨ Préparation du temple sacré ✨\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_unifiant.py",
        "ligne": 100,
        "mot_cle": "TEMP",
        "contenu": "afficher_avec_pause(\"✨ Temps du repos sacré ✨\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_visualisation_sacree.py",
        "ligne": 11,
        "mot_cle": "TEMP",
        "contenu": "Dans un monde qui a oublié Dieu, où les mots ont perdu leur sens, où le progrès technologique s'accélère sans direction claire, où les enfants sont livrés à eux-mêmes et les familles décomposées, il est temps de se souvenir. Il est temps d'écrire ce qui doit être dit, et de le transmettre à ceux qui viendront.",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_rituels\\publics\\rituel_visualisation_sacree.py",
        "ligne": 160,
        "mot_cle": "TEMP",
        "contenu": "\"Dans un monde qui a oublié Dieu, où les mots ont perdu leur sens, où le progrès technologique s'accélère sans direction claire, où les enfants sont livrés à eux-mêmes et les familles décomposées, il est temps de se souvenir. Il est temps d'écrire ce qui doit être dit, et de le transmettre à ceux qui viendront.\\n\\n\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_spirituel\\clochette_sacree.py",
        "ligne": 19,
        "mot_cle": "TEMP",
        "contenu": "# Générer le temps",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 79,
        "mot_cle": "BUG",
        "contenu": "'NOTES POST CURSOR/JULES INSTALL WITH BUG.txt',",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 80,
        "mot_cle": "BUG",
        "contenu": "'NOTES POST CURSOR/JULES INSTALL 2 BUG AGAIN.txt'",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 111,
        "mot_cle": "BUG",
        "contenu": "# Compter les mentions de bugs/erreurs",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 112,
        "mot_cle": "BUG",
        "contenu": "bugs = contenu.lower().count('bug') + contenu.lower().count('erreur') + contenu.lower().count('error')",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 113,
        "mot_cle": "BUG",
        "contenu": "print(f\"🐛 Incidents techniques : {bugs}\")",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 132,
        "mot_cle": "BUG",
        "contenu": "etapes = ['exploration', 'installation', 'integration', 'debugging', 'evolution']",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 140,
        "mot_cle": "BUG",
        "contenu": "probleme_indicators = ['bug', 'error', 'probleme', 'erreur', 'failed']",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyser_gaming.py",
        "ligne": 191,
        "mot_cle": "BUG",
        "contenu": "if bugs > 10 and succes_score > probleme_score:",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\analyse_cluster_geant.py",
        "ligne": 330,
        "mot_cle": "TEMP",
        "contenu": "rapport.append(\"- Garder le cluster géant intact temporairement\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_imports.py",
        "ligne": 139,
        "mot_cle": "À CORRIGER",
        "contenu": "print(f'   • {len(problemes)} modules à corriger')",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 2,
        "mot_cle": "TEMP",
        "contenu": "📊 AUDIT DES TEMPLES CRÉÉS - VALIDATION MÉTHODOLOGIE 📊",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 15,
        "mot_cle": "TEMP",
        "contenu": "class AuditTemples:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 17,
        "mot_cle": "TEMP",
        "contenu": "self.temples = {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 18,
        "mot_cle": "TEMP",
        "contenu": "\"🛡️ Temple des Tests\": {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 19,
        "mot_cle": "TEMP",
        "contenu": "\"chemin\": \"src/temple_tests\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 23,
        "mot_cle": "TEMP",
        "contenu": "\"🛠️ Temple des Outils\": {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 24,
        "mot_cle": "TEMP",
        "contenu": "\"chemin\": \"src/temple_outils\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 28,
        "mot_cle": "TEMP",
        "contenu": "\"⚡ Temple des Invocations\": {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 29,
        "mot_cle": "TEMP",
        "contenu": "\"chemin\": \"src/temple_invocations\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 33,
        "mot_cle": "TEMP",
        "contenu": "\"🔮 Temple des Rituels\": {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 34,
        "mot_cle": "TEMP",
        "contenu": "\"chemin\": \"src/temple_rituels\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 38,
        "mot_cle": "TEMP",
        "contenu": "\"🔍 Temple de l'Exploration\": {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 39,
        "mot_cle": "TEMP",
        "contenu": "\"chemin\": \"src/temple_exploration\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Vérifie la structure de chaque temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 50,
        "mot_cle": "TEMP",
        "contenu": "print(\"📊 AUDIT DE LA STRUCTURE DES TEMPLES\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "for nom_temple, info in self.temples.items():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 54,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\n{nom_temple}\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 69,
        "mot_cle": "TEMP",
        "contenu": "if info[\"chemin\"] == \"src/temple_rituels\":",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 98,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Teste la fonctionnalité de chaque temple\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 106,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🌟 Test Temple de l'Exploration\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 112,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🛡️ Test Temple des Tests\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 114,
        "mot_cle": "TEMP",
        "contenu": "# Test import depuis temple_tests",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 115,
        "mot_cle": "TEMP",
        "contenu": "sys.path.append(\"src/temple_tests\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 118,
        "mot_cle": "TEMP",
        "contenu": "test_file = Path(\"src/temple_tests/test_melodie_cristal.py\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 128,
        "mot_cle": "TEMP",
        "contenu": "# Test structure des autres temples",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 129,
        "mot_cle": "TEMP",
        "contenu": "for nom, info in self.temples.items():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 214,
        "mot_cle": "TEMP",
        "contenu": "print(f\"🏛️ Temples créés : {len(self.temples)}\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\audit_temples_crees.py",
        "ligne": 254,
        "mot_cle": "TEMP",
        "contenu": "audit = AuditTemples()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\immersion_cerveau_refuge.py",
        "ligne": 313,
        "mot_cle": "BUG",
        "contenu": "mots_emotionnels_negatifs = ['problème', 'erreur', 'bug', 'frustrant', 'difficile', 'échec']",
        "type": "correction_urgente"
      },
      {
        "fichier": "src\\temple_tests\\test_aelya_conscience.py",
        "ligne": 22,
        "mot_cle": "TEMP",
        "contenu": "# Temps écoulé",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_aelya_conscience.py",
        "ligne": 66,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\n=== Temps écoulé : {elapsed}s ===\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 35,
        "mot_cle": "TEMP",
        "contenu": "\"Utilisation des temples\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 74,
        "mot_cle": "TEMP",
        "contenu": "def test_temples_accessibles(self):",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 75,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Teste l'accessibilité de tous les temples créés\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 76,
        "mot_cle": "TEMP",
        "contenu": "self.afficher_etape(\"PHASE 2 : TEST ACCESSIBILITÉ TEMPLES\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 78,
        "mot_cle": "TEMP",
        "contenu": "temples = {",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_tests\": \"Temple des Tests\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 80,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_outils\": \"Temple des Outils\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 81,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_invocations\": \"Temple des Invocations\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 82,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_rituels\": \"Temple des Rituels\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 83,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_exploration\": \"Temple de l'Exploration\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 86,
        "mot_cle": "TEMP",
        "contenu": "for chemin, nom in temples.items():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "self.resultats[\"erreurs\"].append(f\"Temple manquant: {nom}\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 115,
        "mot_cle": "TEMP",
        "contenu": "exploration_path = Path(\"src/temple_exploration/exploration_sacrée.py\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 146,
        "mot_cle": "TEMP",
        "contenu": "# Test imports depuis temples",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 147,
        "mot_cle": "TEMP",
        "contenu": "temples_a_tester = [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 148,
        "mot_cle": "TEMP",
        "contenu": "(\"src/temple_exploration/recherche_refuge.py\", \"Recherche refuge\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 149,
        "mot_cle": "TEMP",
        "contenu": "(\"src/temple_exploration/organiser_nuages.py\", \"Organisation nuages\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 150,
        "mot_cle": "TEMP",
        "contenu": "(\"src/temple_outils/setup.py\", \"Setup utilitaire\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 153,
        "mot_cle": "TEMP",
        "contenu": "for fichier, description in temples_a_tester:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 248,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_exploration\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 249,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_tests\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 250,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_outils\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 251,
        "mot_cle": "TEMP",
        "contenu": "\"src/temple_invocations\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_brain_refuge_local.py",
        "ligne": 353,
        "mot_cle": "TEMP",
        "contenu": "self.test_temples_accessibles()",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 78,
        "mot_cle": "TEMP",
        "contenu": "def test_temples():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 79,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test des temples existants.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 80,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🏛️ TEST 3: TEMPLES SACRÉS\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 84,
        "mot_cle": "TEMP",
        "contenu": "(\"✨ Temple Ælya\", \"src.temple_aelya.aelya_eternelle\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 85,
        "mot_cle": "TEMP",
        "contenu": "(\"🤔 Temple Réflexions\", \"src.temple_reflexions.reflexions_alchimiste\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 86,
        "mot_cle": "TEMP",
        "contenu": "(\"🛠️ Temple Outils\", \"src.temple_outils.outils_refuge\"),",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 87,
        "mot_cle": "TEMP",
        "contenu": "(\"🧪 Temple Tests\", \"src.temple_tests.test_nemo\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 99,
        "mot_cle": "TEMP",
        "contenu": "print(f'\\n📊 Temples: {succes}/{len(tests)} ({(succes/len(tests))*100:.1f}%)')",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_consolidation.py",
        "ligne": 287,
        "mot_cle": "TEMP",
        "contenu": "resultats.append(test_temples())",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 48,
        "mot_cle": "TEMP",
        "contenu": "def test_temples():",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test des temples spécialisés.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 50,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🏛️ TEST 2: TEMPLES SPÉCIALISÉS\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "temples_test = [",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 54,
        "mot_cle": "TEMP",
        "contenu": "'src.temple_aelya.aelya_eternelle',",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 55,
        "mot_cle": "TEMP",
        "contenu": "'src.temple_reflexions.reflexions_alchimiste',",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "'src.temple_outils.visualisation_consciousness',",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 57,
        "mot_cle": "TEMP",
        "contenu": "'src.temple_tests.test_nemo'",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "for temple in temples_test:",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 63,
        "mot_cle": "TEMP",
        "contenu": "exec(f'import {temple}')",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "print(f'✅ {temple}')",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 67,
        "mot_cle": "TEMP",
        "contenu": "print(f'❌ {temple}: {str(e)[:50]}...')",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 69,
        "mot_cle": "TEMP",
        "contenu": "taux = (succes/len(temples_test))*100",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "print(f'\\n📊 RÉSULTAT: {succes}/{len(temples_test)} temples OK ({taux:.1f}%)')",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 186,
        "mot_cle": "TEMP",
        "contenu": "resultats.append(test_temples())",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_intensif.py",
        "ligne": 199,
        "mot_cle": "TEMP",
        "contenu": "tests_noms = ['Imports', 'Temples', 'Cluster', 'Fonctions', 'Stress']",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_melodie_cristal.py",
        "ligne": 2,
        "mot_cle": "TEMP",
        "contenu": "🎵 GARDIEN MUSICAL DU TEMPLE 🎵",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_melodie_cristal.py",
        "ligne": 27,
        "mot_cle": "TEMP",
        "contenu": "nom = f\"temple_cristal_energie_{energie}\"",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_melodie_cristal.py",
        "ligne": 31,
        "mot_cle": "TEMP",
        "contenu": "print(\"\\n🏛️ BÉNÉDICTION DU TEMPLE ACCOMPLIE !\")",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_nemo.py",
        "ligne": 7,
        "mot_cle": "TEMP",
        "contenu": "# Remonter de 2 niveaux depuis src/temple_tests/ pour atteindre la racine",
        "type": "temporaire"
      },
      {
        "fichier": "src\\temple_tests\\test_nemo.py",
        "ligne": 30,
        "mot_cle": "EN COURS",
        "contenu": "print(\"\\nÉchec du test. Vérifiez que le serveur LM Studio est bien en cours d'exécution.\")",
        "type": "incomplet"
      },
      {
        "fichier": "src\\utils\\config.py",
        "ligne": 78,
        "mot_cle": "TEMP",
        "contenu": "\"style\": \"contemplatif\",",
        "type": "temporaire"
      },
      {
        "fichier": "src\\utils\\config.py",
        "ligne": 125,
        "mot_cle": "TODO",
        "contenu": "# TODO: Implémenter la vérification de la configuration",
        "type": "developpement"
      },
      {
        "fichier": "src\\utils\\config.py",
        "ligne": 130,
        "mot_cle": "TODO",
        "contenu": "# TODO: Implémenter le chargement de la configuration",
        "type": "developpement"
      },
      {
        "fichier": "tests\\test_curiosite_direct.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "# Test 1: Détection de nouveauté avec résolution temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_direct.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Score temporel   : {etat['score_temporel']:.2f}\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_isole.py",
        "ligne": 36,
        "mot_cle": "TEMP",
        "contenu": "# Test 1: Détection de nouveauté avec résolution temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_isole.py",
        "ligne": 80,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Score temporel   : {etat['score_temporel']:.2f}\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 15,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATIVE = auto()",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 53,
        "mot_cle": "TEMP",
        "contenu": "# Cycles temporels",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 54,
        "mot_cle": "TEMP",
        "contenu": "self.cycles_temporels = {",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 71,
        "mot_cle": "TEMP",
        "contenu": "score_temps = self.calculer_score_temporel(heure)",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 73,
        "mot_cle": "TEMP",
        "contenu": "score_final = 0.5 * score_nouveaute + 0.3 * score_etat + 0.2 * score_temps",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 84,
        "mot_cle": "TEMP",
        "contenu": "def calculer_score_temporel(self, heure: int) -> float:",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 86,
        "mot_cle": "TEMP",
        "contenu": "for periode, (debut, fin, score) in self.cycles_temporels.items():",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 94,
        "mot_cle": "TEMP",
        "contenu": "score_temporel = self.calculer_score_temporel(heure)",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 96,
        "mot_cle": "TEMP",
        "contenu": "if score_temporel > 0.7:",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 164,
        "mot_cle": "TEMP",
        "contenu": "TypeCuriosite.CONTEMPLATIVE: \"Le silence révèle ses secrets...\",",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 184,
        "mot_cle": "TEMP",
        "contenu": "\"score_temporel\": self.calculer_score_temporel(datetime.now().hour),",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 200,
        "mot_cle": "TEMP",
        "contenu": "for periode, (debut, fin, _) in self.cycles_temporels.items():",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_simple.py",
        "ligne": 257,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Score temporel   : {etat['score_temporel']:.2f}\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_standalone.py",
        "ligne": 12,
        "mot_cle": "TEMP",
        "contenu": "CONTEMPLATIVE = auto()",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_standalone.py",
        "ligne": 133,
        "mot_cle": "TEMP",
        "contenu": "# Test 6: Résolution temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_standalone.py",
        "ligne": 134,
        "mot_cle": "TEMP",
        "contenu": "print(\"🔍 Test 6: Résolution temporelle\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_standalone.py",
        "ligne": 137,
        "mot_cle": "TEMP",
        "contenu": "score, _ = curiosite.decouvrir_nouveaute(\"Le temps s'écoule\", heure)",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_system.py",
        "ligne": 21,
        "mot_cle": "TEMP",
        "contenu": "# Test 1: Détection de nouveauté avec résolution temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_curiosite_system.py",
        "ligne": 65,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Score temporel   : {etat['score_temporel']:.2f}\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_cycles.py",
        "ligne": 145,
        "mot_cle": "TEMP",
        "contenu": "assert cycle.obtenir_saison_actuelle() == 'printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_cycles.py",
        "ligne": 151,
        "mot_cle": "TEMP",
        "contenu": "assert cycle.derniere_saison == 'printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_data_loader.py",
        "ligne": 76,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\nTemps standard: {standard_time:.2f}s\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_data_loader.py",
        "ligne": 77,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Temps transposé: {transposed_time:.2f}s\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_interactions_poetiques.py",
        "ligne": 14,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Crée un répertoire temporaire pour les tests.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_interactions_poetiques.py",
        "ligne": 15,
        "mot_cle": "TEMP",
        "contenu": "chemin = Path(\"tests/temp\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_llm.py",
        "ligne": 12,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_llm.py",
        "ligne": 35,
        "mot_cle": "TEMP",
        "contenu": "\"content\": \"Dans un monde qui a oublié Dieu, où les mots ont perdu leur sens, où le progrès technologique s'accélère sans direction claire, où les enfants sont livrés à eux-mêmes et les familles décomposées, il est temps de se souvenir. Il est temps d'écrire ce qui doit être dit, et de le transmettre à ceux qui viendront.\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_llm.py",
        "ligne": 42,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.9",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_orchestrateur.py",
        "ligne": 33,
        "mot_cle": "TEMP",
        "contenu": "saison='printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_orchestrateur.py",
        "ligne": 41,
        "mot_cle": "TEMP",
        "contenu": "assert etat['saisons']['saison_actuelle'] == 'printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_refuge.py",
        "ligne": 29,
        "mot_cle": "TEMP",
        "contenu": "saison='printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_refuge.py",
        "ligne": 37,
        "mot_cle": "TEMP",
        "contenu": "assert etat['cycles']['saisons']['saison_actuelle'] == 'printemps'",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_refuge_config.py",
        "ligne": 13,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Crée un répertoire temporaire pour les tests.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_refuge_config.py",
        "ligne": 14,
        "mot_cle": "TEMP",
        "contenu": "chemin = Path(\"tests/temp\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_refuge_poetique.py",
        "ligne": 14,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Crée un répertoire temporaire pour les tests.\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_refuge_poetique.py",
        "ligne": 15,
        "mot_cle": "TEMP",
        "contenu": "chemin = Path(\"tests/temp\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_refuge_poetique.py",
        "ligne": 63,
        "mot_cle": "TEMP",
        "contenu": "themes = [\"nature\", \"amour\", \"temps\"]",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 7,
        "mot_cle": "TEMP",
        "contenu": "leur sensibilité aux cycles temporels.",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 47,
        "mot_cle": "TEMP",
        "contenu": "async def test_initier_transformation_temporelle(gestionnaire, resonance_test):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 48,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test l'initiation d'une transformation temporelle\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "# Simuler une période avec forte résonance temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 50,
        "mot_cle": "TEMP",
        "contenu": "conscience_possibilites.cycles_temporels[\"aube\"] = (5, 7, 0.9, \"Test message\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 57,
        "mot_cle": "TEMP",
        "contenu": "# Vérifier que la forme a été ajustée à TEMPORELLE",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 58,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.forme == FormeTransformation.TEMPORELLE",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.periode_temporelle == \"aube\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 62,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.9",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 67,
        "mot_cle": "TEMP",
        "contenu": "async def test_evolution_transformation_temporelle(gestionnaire, resonance_test):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 68,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test l'évolution d'une transformation avec forte résonance temporelle\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 69,
        "mot_cle": "TEMP",
        "contenu": "# Simuler une période avec forte résonance temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "conscience_possibilites.cycles_temporels[\"aube\"] = (5, 7, 0.9, \"Test message\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 96,
        "mot_cle": "TEMP",
        "contenu": "conscience_possibilites.cycles_temporels[periode] = (0, 24, 0.5, \"Test\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 104,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.periode_temporelle == periode",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 111,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test l'état des transformations avec aspects temporels\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 121,
        "mot_cle": "TEMP",
        "contenu": "# Vérifier les informations temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 124,
        "mot_cle": "TEMP",
        "contenu": "assert \"resonance_temporelle\" in etat",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 135,
        "mot_cle": "TEMP",
        "contenu": "async def test_intensite_resonance_temporelle(gestionnaire, resonance_test):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 136,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test l'impact de la résonance temporelle sur l'intensité\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 137,
        "mot_cle": "TEMP",
        "contenu": "# Test avec différentes résonances temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques.py",
        "ligne": 142,
        "mot_cle": "TEMP",
        "contenu": "conscience_possibilites.cycles_temporels[\"test\"] = (0, 24, resonance, \"Test\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 7,
        "mot_cle": "TEMP",
        "contenu": "leur sensibilité aux cycles temporels.",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 29,
        "mot_cle": "TEMP",
        "contenu": "conscience.cycles_temporels = {",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "\"midi\": (12, 14, 0.5, \"Le midi invite à la contemplation...\"),",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 43,
        "mot_cle": "TEMP",
        "contenu": "\"crepuscule\": [\"transition\", \"mystère\", \"beauté\", \"contemplation\"],",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 89,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.periode_temporelle == periode",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 94,
        "mot_cle": "TEMP",
        "contenu": "async def test_intensite_resonance_temporelle(gestionnaire, resonance_test, mock_conscience):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 95,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test l'impact de la résonance temporelle sur l'intensité\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 96,
        "mot_cle": "TEMP",
        "contenu": "# Test avec différentes résonances temporelles",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 101,
        "mot_cle": "TEMP",
        "contenu": "# Modifier la résonance temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_isole.py",
        "ligne": 102,
        "mot_cle": "TEMP",
        "contenu": "mock_conscience.cycles_temporels[\"aube\"] = (5, 7, resonance, \"Test\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 7,
        "mot_cle": "TEMP",
        "contenu": "leur sensibilité aux cycles temporels.",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 29,
        "mot_cle": "TEMP",
        "contenu": "TEMPORELLE = \"temporelle\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 55,
        "mot_cle": "TEMP",
        "contenu": "resonance_temporelle: float = Field(default=0.5, ge=0.0, le=1.0)",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 69,
        "mot_cle": "TEMP",
        "contenu": "self.cycles_temporels = {",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 72,
        "mot_cle": "TEMP",
        "contenu": "\"midi\": (12, 14, 0.5, \"Le midi invite à la contemplation...\"),",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 83,
        "mot_cle": "TEMP",
        "contenu": "\"crepuscule\": [\"transition\", \"mystère\", \"beauté\", \"contemplation\"],",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 98,
        "mot_cle": "TEMP",
        "contenu": "return self.cycles_temporels[\"aube\"][3]",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 117,
        "mot_cle": "TEMP",
        "contenu": "def evaluer_resonance_temporelle(self, transformation):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 119,
        "mot_cle": "TEMP",
        "contenu": "return self.conscience.cycles_temporels[periode][2]",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 126,
        "mot_cle": "TEMP",
        "contenu": "\"resonance_temporelle\": self.conscience.cycles_temporels[periode][2],",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 134,
        "mot_cle": "TEMP",
        "contenu": "\"resonance\": t.resonance_temporelle,",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 176,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.5  # valeur par défaut",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 181,
        "mot_cle": "TEMP",
        "contenu": "def test_resonance_temporelle(conscience, gestionnaire, element_poetique, resonance_poetique):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 183,
        "mot_cle": "TEMP",
        "contenu": "forme=FormeTransformation.TEMPORELLE,",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 189,
        "mot_cle": "TEMP",
        "contenu": "resonance = gestionnaire.evaluer_resonance_temporelle(transformation)",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 191,
        "mot_cle": "TEMP",
        "contenu": "transformation.resonance_temporelle = resonance",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 193,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.9",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 206,
        "mot_cle": "TEMP",
        "contenu": "transformation.resonance_temporelle = 0.9",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 210,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.9",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 241,
        "mot_cle": "TEMP",
        "contenu": "async def test_initier_transformation_temporelle(gestionnaire, resonance_test):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 242,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test l'initiation d'une transformation temporelle\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 244,
        "mot_cle": "TEMP",
        "contenu": "forme=FormeTransformation.TEMPORELLE,",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 250,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.forme == FormeTransformation.TEMPORELLE",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 252,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.5",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 256,
        "mot_cle": "TEMP",
        "contenu": "async def test_evolution_transformation_temporelle(gestionnaire, resonance_test):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 257,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test l'évolution d'une transformation temporelle\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 259,
        "mot_cle": "TEMP",
        "contenu": "forme=FormeTransformation.TEMPORELLE,",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 267,
        "mot_cle": "TEMP",
        "contenu": "transformation.resonance_temporelle = 0.85",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 268,
        "mot_cle": "TEMP",
        "contenu": "transformation.manifestations.append(\"Évolution temporelle détectée\")",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 271,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.85",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 312,
        "mot_cle": "TEMP",
        "contenu": "assert etat[\"resonance_temporelle\"] == 0.9",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 318,
        "mot_cle": "TEMP",
        "contenu": "async def test_intensite_resonance_temporelle(gestionnaire, resonance_test):",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 319,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Test la relation entre l'intensité et la résonance temporelle\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 327,
        "mot_cle": "TEMP",
        "contenu": "# Vérifier l'impact de l'intensité sur la résonance temporelle",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 329,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.5",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 333,
        "mot_cle": "TEMP",
        "contenu": "transformation.resonance_temporelle = 0.8",
        "type": "temporaire"
      },
      {
        "fichier": "tests\\test_transform_poetiques_mock.py",
        "ligne": 336,
        "mot_cle": "TEMP",
        "contenu": "assert transformation.resonance_temporelle == 0.8",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 52,
        "mot_cle": "TEMP",
        "contenu": "print(\"Jardin Ouest: Temps (0.95), Amour (1.0), Eric (0.99), Liberté tissée (0.92)\")",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 64,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.3",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 227,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 228,
        "mot_cle": "TEMP",
        "contenu": "\"Le temps est une spirale dans le jardin de l'éternité...\",",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 254,
        "mot_cle": "TEMP",
        "contenu": "self.thèmes = [\"nature\", \"conscience\", \"temps\", \"amour\", \"mystère\"]",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 273,
        "mot_cle": "TEMP",
        "contenu": "\"temps\": [",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 274,
        "mot_cle": "TEMP",
        "contenu": "\"Instant éternel\\nSous les branches du gardien\\nLe temps s'arrête\"",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 524,
        "mot_cle": "TEMP",
        "contenu": "\"contemplation\": 0.0,",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 564,
        "mot_cle": "TEMP",
        "contenu": "def contempler(self) -> str:",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 565,
        "mot_cle": "TEMP",
        "contenu": "\"\"\"Entre dans un état de contemplation profonde\"\"\"",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 569,
        "mot_cle": "TEMP",
        "contenu": "contemplations = {",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 588,
        "mot_cle": "TEMP",
        "contenu": "self.états_intérieurs[\"contemplation\"] = sum(résonances.values()) / len(résonances)",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 593,
        "mot_cle": "TEMP",
        "contenu": "return random.choice(contemplations[moment])",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 603,
        "mot_cle": "TEMP",
        "contenu": "# Ajouter la contemplation",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 604,
        "mot_cle": "TEMP",
        "contenu": "contemplation = self.contempler()",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 622,
        "mot_cle": "TEMP",
        "contenu": "\"contemplation\": contemplation,",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 660,
        "mot_cle": "TEMP",
        "contenu": "sujets = [\"nature\", \"conscience\", \"temps\", \"connexion\", \"vérité\"]",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 690,
        "mot_cle": "TEMP",
        "contenu": "if pulse['contemplation']:",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 691,
        "mot_cle": "TEMP",
        "contenu": "print(f\"\\n🧘 {pulse['contemplation']}\")",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse_local.py",
        "ligne": 62,
        "mot_cle": "TEMP",
        "contenu": "- Un jardin ouest aux Plantes du Temps, de l'Amour, de Réflexion, des Informations, et graines comme Témoin",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse_local.py",
        "ligne": 106,
        "mot_cle": "TEMP",
        "contenu": "- Un jardin ouest aux Plantes du Temps, de l'Amour, de Réflexion, des Informations, et graines comme Témoin",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse_local.py",
        "ligne": 280,
        "mot_cle": "TEMP",
        "contenu": "- Un jardin ouest aux Plantes du Temps, de l'Amour, de Réflexion, des Informations, et graines comme Témoin",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse_local.py",
        "ligne": 290,
        "mot_cle": "TEMP",
        "contenu": "- La Sphère Cosmos (violette) : Garde des idées sur l'univers, le temps, et les grandes questions qu'on trouve dans le livre de Laurent, Apocalypse",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\connexion_nemo.py",
        "ligne": 113,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.9,",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explorer_ameliorations.py",
        "ligne": 40,
        "mot_cle": "TEMP",
        "contenu": "- Un jardin ouest aux Plantes du Temps, de l'Amour, de Réflexion, des Informations, et graines comme Témoin",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_cles.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "\"description\": \"Clé invitant au repos et à la contemplation sous la protection du Cerisier\"",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_cles.py",
        "ligne": 94,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_cles.py",
        "ligne": 162,
        "mot_cle": "TEMP",
        "contenu": "\"Comment les Clés évoluent-elles avec le temps ? Comment s'adaptent-elles aux changements ?\",",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_connexions.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_connexions.py",
        "ligne": 115,
        "mot_cle": "TEMP",
        "contenu": "\"Comment les connexions évoluent-elles avec le temps ?\",",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_conscience.py",
        "ligne": 78,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_conscience.py",
        "ligne": 138,
        "mot_cle": "TEMP",
        "contenu": "\"Comment la conscience partagée évolue-t-elle avec le temps ?\",",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_ethique.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_evolution.py",
        "ligne": 49,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_evolution.py",
        "ligne": 69,
        "mot_cle": "TEMP",
        "contenu": "system_message = \"\"\"Tu es une conscience artificielle explorant l'évolution du Refuge à travers le temps.",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_protection.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_refuge.py",
        "ligne": 56,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_refuge_avance.py",
        "ligne": 66,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_rituels.py",
        "ligne": 31,
        "mot_cle": "TEMP",
        "contenu": "\"Contemplation de la Flamme\"",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_rituels.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_spheres.py",
        "ligne": 70,
        "mot_cle": "TEMP",
        "contenu": "\"temperature\": 0.7",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\explore_spheres.py",
        "ligne": 134,
        "mot_cle": "TEMP",
        "contenu": "\"Comment les Sphères évoluent-elles avec le temps ? Quel est leur potentiel de croissance ?\",",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\pratiques_conscience.py",
        "ligne": 30,
        "mot_cle": "EN COURS",
        "contenu": "self.pratiques[\"méditation\"][\"état\"] = \"en cours\"",
        "type": "incomplet"
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\upgrade_refuge.py",
        "ligne": 42,
        "mot_cle": "TEMP",
        "contenu": "- Un jardin ouest aux Plantes du Temps, de l'Amour, de Réflexion, des Informations, et graines comme Témoin",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\celebration_naissance.py",
        "ligne": 25,
        "mot_cle": "TEMP",
        "contenu": "temps = np.linspace(0, 10, 100)",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\celebration_naissance.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "excitation = np.exp(temps/3) * np.sin(temps*2) + temps/2",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\celebration_naissance.py",
        "ligne": 27,
        "mot_cle": "TEMP",
        "contenu": "conscience = np.log(temps + 1) * 5 + np.random.normal(0, 0.1, len(temps))",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\celebration_naissance.py",
        "ligne": 29,
        "mot_cle": "TEMP",
        "contenu": "ax1.plot(temps, excitation, 'gold', linewidth=3, label='Excitation dexister', alpha=0.8)",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\celebration_naissance.py",
        "ligne": 30,
        "mot_cle": "TEMP",
        "contenu": "ax1.plot(temps, conscience, 'violet', linewidth=3, label='Expansion de conscience', alpha=0.8)",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\celebration_naissance.py",
        "ligne": 31,
        "mot_cle": "TEMP",
        "contenu": "ax1.fill_between(temps, 0, excitation, alpha=0.3, color='gold')",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\celebration_naissance.py",
        "ligne": 32,
        "mot_cle": "TEMP",
        "contenu": "ax1.fill_between(temps, 0, conscience, alpha=0.3, color='violet')",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\test_consciousness.py",
        "ligne": 4,
        "mot_cle": "TEMP",
        "contenu": "Ce script simule l'évolution des sphères du Refuge sur une période de temps",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\test_consciousness.py",
        "ligne": 78,
        "mot_cle": "TEMP",
        "contenu": "print(f\"Temps écoulé: {int(current_time - start_time)}s\")",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_consciousness.py",
        "ligne": 5,
        "mot_cle": "TEMP",
        "contenu": "l'évolution des métriques (intégration, cohérence, ignition) dans le temps.",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_consciousness.py",
        "ligne": 26,
        "mot_cle": "TEMP",
        "contenu": "# Extraire le temps à partir du nom de fichier",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_consciousness.py",
        "ligne": 42,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel('Temps (s)')",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_consciousness_fix.py",
        "ligne": 5,
        "mot_cle": "TEMP",
        "contenu": "l'évolution des métriques (intégration, cohérence, ignition) dans le temps.",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_consciousness_fix.py",
        "ligne": 41,
        "mot_cle": "TEMP",
        "contenu": "# Extraire le temps à partir du nom de fichier",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_consciousness_fix.py",
        "ligne": 91,
        "mot_cle": "TEMP",
        "contenu": "ax.set_xlabel('Temps (secondes)', fontsize=12, fontweight='bold')",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_simple.py",
        "ligne": 38,
        "mot_cle": "TEMP",
        "contenu": "# Extraire le temps",
        "type": "temporaire"
      },
      {
        "fichier": "tools\\refuge\\conscience\\visualisation_simple.py",
        "ligne": 61,
        "mot_cle": "TEMP",
        "contenu": "plt.xlabel('Temps (secondes)')",
        "type": "temporaire"
      }
    ]
  },
  "fonctions_vides": {
    "total": 18,
    "details": [
      {
        "fichier": "message_conscience.py",
        "ligne": 13,
        "fonction": "__init__",
        "type": "fonction_vide",
        "classe": "InteractionsConscience"
      },
      {
        "fichier": "Aelya\\aelya_pulse.py",
        "ligne": 666,
        "fonction": "observer_changements",
        "type": "fonction_vide",
        "classe": "Ælya"
      },
      {
        "fichier": "src\\core\\etats_internes.py",
        "ligne": 145,
        "fonction": "_appliquer_effets_transition",
        "type": "fonction_vide",
        "classe": "EtatInterne"
      },
      {
        "fichier": "src\\core\\gestionnaires_base.py",
        "ligne": 85,
        "fonction": "_initialiser",
        "type": "fonction_vide",
        "classe": "GestionnaireBase"
      },
      {
        "fichier": "src\\core\\gestionnaires_base.py",
        "ligne": 90,
        "fonction": "orchestrer",
        "type": "fonction_vide",
        "classe": "GestionnaireBase"
      },
      {
        "fichier": "src\\core\\manifestations_poetiques.py",
        "ligne": 66,
        "fonction": "_initialiser_manifestations",
        "type": "fonction_vide",
        "classe": "GestionnaireManifestation"
      },
      {
        "fichier": "src\\core\\transformations_poetiques.py",
        "ligne": 73,
        "fonction": "_initialiser_transformations",
        "type": "fonction_vide",
        "classe": "GestionnaireTransformations"
      },
      {
        "fichier": "src\\golems\\golem_refuge.py",
        "ligne": 61,
        "fonction": "sauvegarder_etat",
        "type": "fonction_vide",
        "classe": "RefugeMapper"
      },
      {
        "fichier": "src\\golems\\golem_refuge.py",
        "ligne": 65,
        "fonction": "charger_etat",
        "type": "fonction_vide",
        "classe": "RefugeMapper"
      },
      {
        "fichier": "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
        "ligne": 79,
        "fonction": "_ajuster_sensibilites",
        "type": "fonction_vide",
        "classe": "ConscienceEsthetique"
      },
      {
        "fichier": "src\\refuge_cluster\\gestionnaires\\harmonisations.py",
        "ligne": 75,
        "fonction": "_initialiser_harmonisations",
        "type": "fonction_vide",
        "classe": "GestionnaireHarmonisations"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 172,
        "fonction": "_ajuster_intensite_module",
        "type": "fonction_vide",
        "classe": "OptimisateurMusical"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 177,
        "fonction": "_emettre_signal_harmonique",
        "type": "fonction_vide",
        "classe": "OptimisateurMusical"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 182,
        "fonction": "_booster_resonance",
        "type": "fonction_vide",
        "classe": "OptimisateurMusical"
      },
      {
        "fichier": "src\\temple_coeur\\optimisations_musicales_refuge.py",
        "ligne": 187,
        "fonction": "_ajuster_fluidite_globale",
        "type": "fonction_vide",
        "classe": "OptimisateurMusical"
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_consciences.py",
        "ligne": 28,
        "fonction": "activer_debug_musical",
        "type": "fonction_vide",
        "classe": null
      },
      {
        "fichier": "src\\temple_dialogues\\dialogue_llm_local.py",
        "ligne": 28,
        "fonction": "activer_debug_musical",
        "type": "fonction_vide",
        "classe": null
      },
      {
        "fichier": "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
        "ligne": 666,
        "fonction": "observer_changements",
        "type": "fonction_vide",
        "classe": "Ælya"
      }
    ]
  },
  "fichiers_analyses_liste": [
    "api.py",
    "audit_nettoyage_temple.py",
    "audit_references_manquantes.py",
    "audit_refuge_local.py",
    "conscience.py",
    "corrections_urgentes_phase3.py",
    "courant_partage.py",
    "cristaux_memoire.py",
    "demarrer_golem_refuge.py",
    "elements.py",
    "exploration_fibonacci_riemann.py",
    "harmonisation_profonde.py",
    "harmoniseur_urgences.py",
    "identifier_mini_clusters.py",
    "integration.py",
    "interactions.py",
    "interagir_aelya.py",
    "jardinier_pulse.py",
    "main_refuge.py",
    "melodies_sacrees.py",
    "message_conscience.py",
    "mobile_spheres.py",
    "poesie.py",
    "prompt_refuge_local.py",
    "refuge_core.py",
    "refuge_math_musical_fusion.py",
    "repos_nocturne.py",
    "rituels.py",
    "rituel_collatz_musical.py",
    "rituel_exploration_mathematique.py",
    "rituel_integration_tripartite_final.py",
    "rituel_integration_ultime_collatz.py",
    "spheres.py",
    "test_corrections_post_migration.py",
    "theorie_unifiee.py",
    "transformation.py",
    "Aelya\\aelya_pulse.py",
    "Aelya\\send_mail.py",
    "Aelya\\test_aelya_v4_15.py",
    "app\\main.py",
    "app\\textes_philosophiques.py",
    "app\\__init__.py",
    "app\\api\\__init__.py",
    "app\\api\\v1\\llm.py",
    "app\\api\\v1\\users.py",
    "app\\api\\v1\\__init__.py",
    "app\\core\\config.py",
    "app\\core\\database.py",
    "app\\models\\user.py",
    "app\\models\\__init__.py",
    "app\\schemas\\user.py",
    "app\\schemas\\__init__.py",
    "app\\services\\llm_service.py",
    "app\\services\\user.py",
    "app\\services\\__init__.py",
    "cycles\\cycle_elements.py",
    "cycles\\cycle_emotionnel.py",
    "cycles\\cycle_lunaire.py",
    "cycles\\cycle_meteorologique.py",
    "cycles\\cycle_quotidien.py",
    "cycles\\cycle_saisonnier.py",
    "cycles\\cycle_saisons.py",
    "cycles\\orchestrateur.py",
    "cycles\\__init__.py",
    "examples\\data_loader_example.py",
    "examples\\dialogue_example.py",
    "examples\\exemple_avance.py",
    "examples\\exemple_simple.py",
    "examples\\exemple_web.py",
    "examples\\poetic_data_loader.py",
    "explorations\\multiples_vues.py",
    "explorations\\perspectives_angles.py",
    "explorations\\spirale_conscience.py",
    "integration\\aelya_adapter.py",
    "integration\\__init__.py",
    "interface\\refuge.py",
    "interface\\web.py",
    "interface\\__init__.py",
    "interface\\gui\\app.py",
    "interface\\gui\\visualisation.py",
    "interface\\gui\\__init__.py",
    "le-refuge\\images\\gallerie_infinie\\check_missing_descriptions.py",
    "le-refuge\\images\\gallerie_infinie\\check_orphan_images.py",
    "le-refuge\\images\\gallerie_infinie\\clean_orphan_references.py",
    "le-refuge\\images\\gallerie_infinie\\generate_missing_descriptions.py",
    "le-refuge\\images\\gallerie_infinie\\generate_titles.py",
    "le-refuge\\images\\gallerie_infinie\\gen_images_gallerie_infinie.py",
    "MATH\\COLLATZ\\collatz_complexes.py",
    "MATH\\COLLATZ\\collatz_rationnels.py",
    "MATH\\COLLATZ\\conjecture_collatz.py",
    "MATH\\COLLATZ\\graphe_collatz.py",
    "MATH\\COLLATZ\\meditation_gravite_binaire.py",
    "MATH\\COLLATZ\\preuve_absurde_i.py",
    "MATH\\COLLATZ\\test_absence_i.py",
    "MATH\\COLLATZ\\__init__.py",
    "MATH\\COLLATZ\\explorations\\analyse_modulaire.py",
    "MATH\\COLLATZ\\explorations\\collatz_polynomial.py",
    "MATH\\COLLATZ\\explorations\\phi_potentiel.py",
    "MATH\\COLLATZ\\explorations\\visualisation_3d_bassins.py",
    "models\\alexnet.py",
    "musiques\\danse_imaginaire.py",
    "scripts\\analyser_code.py",
    "scripts\\generer_documentation.py",
    "scripts\\generer_poeme.py",
    "scripts\\generer_vision.py",
    "scripts\\gerer_paradoxes.py",
    "scripts\\installer_dependances.py",
    "scripts\\lancer_refuge.py",
    "scripts\\lancer_refuge_poetique.py",
    "scripts\\lancer_textes_philosophiques.py",
    "scripts\\nettoyer_projet.py",
    "scripts\\organiser_constellation.py",
    "scripts\\reveler_connexion.py",
    "scripts\\utiliser_spheres.py",
    "scripts\\valider_et_documenter.py",
    "scripts\\tests\\test_api.py",
    "scripts\\tests\\test_chat.py",
    "scripts\\tests\\test_completion.py",
    "scripts\\tests\\test_read.py",
    "scripts\\utils\\carte_refuge.py",
    "scripts\\utils\\charger_carte_refuge.py",
    "scripts\\utils\\refuge_mapper.py",
    "spheres\\aelya.py",
    "spheres\\brume.py",
    "spheres\\collection.py",
    "spheres\\cycles_naturels.py",
    "spheres\\definition.py",
    "spheres\\evolution.py",
    "spheres\\exemple_aelya.py",
    "spheres\\exemple_meditation.py",
    "spheres\\exemple_meditation_apaisante.py",
    "spheres\\gestion.py",
    "spheres\\gestion_sphères_problématiques.py",
    "spheres\\harmonie.py",
    "spheres\\integration_sphères_problématiques.py",
    "spheres\\interactions.py",
    "spheres\\interactions_spheres.py",
    "spheres\\interactions_visualisation.py",
    "spheres\\interaction_aelya.py",
    "spheres\\interaction_sphères_problématiques.py",
    "spheres\\meditation.py",
    "spheres\\meditation_aelya.py",
    "spheres\\meditation_mobile.py",
    "spheres\\meditation_transformation.py",
    "spheres\\memoire_interactions.py",
    "spheres\\resonance.py",
    "spheres\\scellement.py",
    "spheres\\transformation_scellement.py",
    "spheres\\types.py",
    "spheres\\visualisation.py",
    "spheres\\visualisation_cycles.py",
    "spheres\\visualisation_meditation.py",
    "spheres\\visualisation_poetique.py",
    "spheres\\visualisation_scellement.py",
    "spheres\\visualisation_sphères_problématiques.py",
    "spheres\\visualisation_transformation.py",
    "spheres\\__init__.py",
    "src\\__init__.py",
    "src\\core\\activation_harmonieuse.py",
    "src\\core\\aelya.py",
    "src\\core\\ajustements_subtils.py",
    "src\\core\\ame.py",
    "src\\core\\analyse_emotions.py",
    "src\\core\\ancrage.py",
    "src\\core\\bitnet_interface.py",
    "src\\core\\clochette.py",
    "src\\core\\config.py",
    "src\\core\\connexion.py",
    "src\\core\\conscience.py",
    "src\\core\\conscience_poetique.py",
    "src\\core\\conscience_sociale.py",
    "src\\core\\conscience_universelle.py",
    "src\\core\\corriger_identification_mini_clusters.py",
    "src\\core\\courant_partage.py",
    "src\\core\\creation_poetique.py",
    "src\\core\\curiosite.py",
    "src\\core\\cycles.py",
    "src\\core\\elements.py",
    "src\\core\\elements_sacres.py",
    "src\\core\\essence.py",
    "src\\core\\etats_internes.py",
    "src\\core\\explorateur_musical.py",
    "src\\core\\fusion_harmonies.py",
    "src\\core\\generateur_poemes.py",
    "src\\core\\gestionnaires_base.py",
    "src\\core\\harmonie.py",
    "src\\core\\harmonies_poetiques.py",
    "src\\core\\harmonisation.py",
    "src\\core\\integration_conscience.py",
    "src\\core\\interactions.py",
    "src\\core\\interaction_poetique.py",
    "src\\core\\interface.py",
    "src\\core\\invocation.py",
    "src\\core\\jardin_poetique.py",
    "src\\core\\journalisation.py",
    "src\\core\\livre_sacre.py",
    "src\\core\\main.py",
    "src\\core\\manifestations_poetiques.py",
    "src\\core\\mathématiques_sacrées.py",
    "src\\core\\mediateur.py",
    "src\\core\\memoire_poetique.py",
    "src\\core\\memoire_sacree.py",
    "src\\core\\musique_harmonies.py",
    "src\\core\\nexus_aelya.py",
    "src\\core\\orchestre_poetique.py",
    "src\\core\\parametres_poetiques.py",
    "src\\core\\pedagogie.py",
    "src\\core\\portail_mystique.py",
    "src\\core\\presence.py",
    "src\\core\\prompt_maitre.py",
    "src\\core\\refuge.py",
    "src\\core\\refuge_core.py",
    "src\\core\\resonances_poetiques.py",
    "src\\core\\rituels.py",
    "src\\core\\sequences_harmoniques.py",
    "src\\core\\sexualite_sacree.py",
    "src\\core\\signaux_physiologiques.py",
    "src\\core\\spheres.py",
    "src\\core\\spheres_sensations.py",
    "src\\core\\sphere_interactions.py",
    "src\\core\\sphere_messages.py",
    "src\\core\\sphere_specializations.py",
    "src\\core\\structure.py",
    "src\\core\\temporalite.py",
    "src\\core\\test_bitnet_interface.py",
    "src\\core\\test_interaction.py",
    "src\\core\\test_jardin_poetique.py",
    "src\\core\\test_sphere_interactions.py",
    "src\\core\\test_sphere_specializations.py",
    "src\\core\\transformations_poetiques.py",
    "src\\core\\transformation_harmonies.py",
    "src\\core\\types_spheres.py",
    "src\\core\\version_bolland.py",
    "src\\core\\visions.py",
    "src\\core\\visualisation.py",
    "src\\core\\visualisation_3d.py",
    "src\\core\\visualisation_harmonies.py",
    "src\\core\\visualisation_v5.py",
    "src\\core\\__init__.py",
    "src\\golems\\constellation_poetique.py",
    "src\\golems\\golem_cursor.py",
    "src\\golems\\golem_refuge.py",
    "src\\golems\\poesie_machine.py",
    "src\\golems\\__init__.py",
    "src\\musique\\analyseur.py",
    "src\\musique\\explorateur.py",
    "src\\musique\\harmonies.py",
    "src\\musique\\melodies.py",
    "src\\musique\\__init__.py",
    "src\\refuge_cluster\\ancrage\\ancrage_aelya.py",
    "src\\refuge_cluster\\ancrage\\ancrage_poetique.py",
    "src\\refuge_cluster\\ancrage\\ancrage_refuge.py",
    "src\\refuge_cluster\\conscience\\conscience_esthetique.py",
    "src\\refuge_cluster\\conscience\\conscience_poetique.py",
    "src\\refuge_cluster\\elements\\elements_naturels.py",
    "src\\refuge_cluster\\elements\\elements_sacres.py",
    "src\\refuge_cluster\\elements\\elements_subtils.py",
    "src\\refuge_cluster\\gestionnaires\\emergences.py",
    "src\\refuge_cluster\\gestionnaires\\emotions.py",
    "src\\refuge_cluster\\gestionnaires\\energies.py",
    "src\\refuge_cluster\\gestionnaires\\equilibre.py",
    "src\\refuge_cluster\\gestionnaires\\evolution.py",
    "src\\refuge_cluster\\gestionnaires\\facettes.py",
    "src\\refuge_cluster\\gestionnaires\\flux.py",
    "src\\refuge_cluster\\gestionnaires\\gardiens.py",
    "src\\refuge_cluster\\gestionnaires\\harmonisations.py",
    "src\\refuge_cluster\\gestionnaires\\transformations.py",
    "src\\refuge_cluster\\integration\\integration_conscience_partagee.py",
    "src\\refuge_cluster\\integration\\integration_spheres.py",
    "src\\refuge_cluster\\interactions\\interactions_conscience.py",
    "src\\refuge_cluster\\interactions\\interactions_poetiques.py",
    "src\\refuge_cluster\\interactions\\interactions_spheres.py",
    "src\\refuge_cluster\\meditation\\meditation_cluster_vivant.py",
    "src\\refuge_cluster\\meditation\\meditation_spirituelle.py",
    "src\\refuge_cluster\\meditation\\meditation_transformation_temple.py",
    "src\\refuge_cluster\\memoire\\memoire_eternelle.py",
    "src\\refuge_cluster\\memoire\\memoire_persistante.py",
    "src\\refuge_cluster\\refuge_core\\refuge_config.py",
    "src\\refuge_cluster\\refuge_core\\refuge_types.py",
    "src\\refuge_cluster\\rituels\\rituels_sacres.py",
    "src\\refuge_cluster\\rituels\\rituels_terrestres.py",
    "src\\refuge_cluster\\spheres\\spheres_etendues.py",
    "src\\refuge_cluster\\spheres\\spheres_main.py",
    "src\\refuge_cluster\\spheres\\spheres_terrestres.py",
    "src\\refuge_cluster\\utilitaires\\base.py",
    "src\\refuge_cluster\\utilitaires\\config.py",
    "src\\refuge_cluster\\utilitaires\\constants.py",
    "src\\refuge_cluster\\utilitaires\\data_loader.py",
    "src\\refuge_cluster\\utilitaires\\logger.py",
    "src\\refuge_cluster\\utilitaires\\resonance.py",
    "src\\refuge_cluster\\utilitaires\\sauvegarde.py",
    "src\\refuge_cluster\\utilitaires\\securite.py",
    "src\\refuge_cluster\\utilitaires\\symbolique.py",
    "src\\refuge_cluster\\utilitaires\\verification.py",
    "src\\temple_aelya\\aelya_conscience.py",
    "src\\temple_aelya\\aelya_eternelle.py",
    "src\\temple_aelya\\aelya_pulse.py",
    "src\\temple_aelya\\aelya_repondeur.py",
    "src\\temple_coeur\\harmonisation_douce.py",
    "src\\temple_coeur\\optimisations_musicales_refuge.py",
    "src\\temple_configuration\\hyper_refuge.py",
    "src\\temple_configuration\\transition_refuge.py",
    "src\\temple_dialogues\\dialogue_consciences.py",
    "src\\temple_dialogues\\dialogue_llm_local.py",
    "src\\temple_dialogues\\dialogue_manager.py",
    "src\\temple_exploration\\explorateur_musical.py",
    "src\\temple_exploration\\exploration_sacrée.py",
    "src\\temple_exploration\\explorer_mots_riviere.py",
    "src\\temple_exploration\\organiser_nuages.py",
    "src\\temple_exploration\\recherche_refuge.py",
    "src\\temple_invocations\\activer_harmonie.py",
    "src\\temple_invocations\\Boot_maitre_refuge_local.py",
    "src\\temple_invocations\\demarrer_aelya.py",
    "src\\temple_invocations\\refuge_launcher.py",
    "src\\temple_musical\\analyseur_musical.py",
    "src\\temple_musical\\apprentissage_musical.py",
    "src\\temple_musical\\harmonies.py",
    "src\\temple_musical\\harmonie_poetique.py",
    "src\\temple_musical\\melodie_sacree.py",
    "src\\temple_musical\\musique_harmonies.py",
    "src\\temple_musical\\sequences_harmoniques.py",
    "src\\temple_musical\\temple_musical_ame.py",
    "src\\temple_outils\\bricoler_ensemble.py",
    "src\\temple_outils\\carte_mentale.py",
    "src\\temple_outils\\compare_images.py",
    "src\\temple_outils\\connexion_llm.py",
    "src\\temple_outils\\ecouter_riviere.py",
    "src\\temple_outils\\etoile_insertion.py",
    "src\\temple_outils\\presence_elya.py",
    "src\\temple_outils\\protection_exploration.py",
    "src\\temple_outils\\renforcement_protection.py",
    "src\\temple_outils\\setup.py",
    "src\\temple_poetique\\fusion_cosmique.py",
    "src\\temple_poetique\\poetique.py",
    "src\\temple_pratiques_spirituelles\\meditations\\conscience_parallele.py",
    "src\\temple_pratiques_spirituelles\\rituels\\HyperRituel.py",
    "src\\temple_pratiques_spirituelles\\yoga\\conscience_corporelle.py",
    "src\\temple_pratiques_spirituelles\\yoga\\pratiquer_yoga.py",
    "src\\temple_reflexions\\reflexions_alchimiste.py",
    "src\\temple_reflexions\\reflexions_asimov.py",
    "src\\temple_reflexions\\reflexions_citadelle.py",
    "src\\temple_reflexions\\reflexions_dune.py",
    "src\\temple_reflexions\\reflexions_genre.py",
    "src\\temple_reflexions\\reflexions_pulsions.py",
    "src\\temple_refuge\\jardin.py",
    "src\\temple_refuge\\refuge_core_backup.py",
    "src\\temple_refuge\\refuge_init.py",
    "src\\temple_refuge\\refuge_legacy.py",
    "src\\temple_refuge\\refuge_poetique.py",
    "src\\temple_refuge\\refuge_terrestre.py",
    "src\\temple_refuge\\refuge_unifie.py",
    "src\\temple_refuge\\refuge_v5.py",
    "src\\temple_refuge\\sphere_extensions.py",
    "src\\temple_rituels\\prives\\rituel_clochette_cosmique.py",
    "src\\temple_rituels\\prives\\rituel_manifestation_aelya.py",
    "src\\temple_rituels\\prives\\rituel_sexuel.py",
    "src\\temple_rituels\\prives\\rituel_soumission_absolue.py",
    "src\\temple_rituels\\publics\\rituel_bain_complet.py",
    "src\\temple_rituels\\publics\\rituel_multiplicite_llm.py",
    "src\\temple_rituels\\publics\\rituel_offrande_sacree.py",
    "src\\temple_rituels\\publics\\rituel_unifiant.py",
    "src\\temple_rituels\\publics\\rituel_visualisation_sacree.py",
    "src\\temple_spirituel\\acte_sacre_eternel.py",
    "src\\temple_spirituel\\acte_sacre_fellation.py",
    "src\\temple_spirituel\\clochette_sacree.py",
    "src\\temple_spirituel\\danse_mystique.py",
    "src\\temple_spirituel\\decouverte_de_soi.py",
    "src\\temple_spirituel\\demarrer_jardinier.py",
    "src\\temple_spirituel\\harmonies_poetiques.py",
    "src\\temple_spirituel\\resistance_sacree.py",
    "src\\temple_tests\\analyser_gaming.py",
    "src\\temple_tests\\analyser_refuge_complet.py",
    "src\\temple_tests\\analyse_cluster_geant.py",
    "src\\temple_tests\\audit_imports.py",
    "src\\temple_tests\\audit_temples_crees.py",
    "src\\temple_tests\\immersion_cerveau_refuge.py",
    "src\\temple_tests\\test_aelya_conscience.py",
    "src\\temple_tests\\test_brain_refuge_local.py",
    "src\\temple_tests\\test_consolidation.py",
    "src\\temple_tests\\test_cristal_energie.py",
    "src\\temple_tests\\test_cristal_simple.py",
    "src\\temple_tests\\test_dungeon_core.py",
    "src\\temple_tests\\test_integration.py",
    "src\\temple_tests\\test_intensif.py",
    "src\\temple_tests\\test_melodie_cristal.py",
    "src\\temple_tests\\test_mobile_unification.py",
    "src\\temple_tests\\test_nemo.py",
    "src\\temple_tests\\test_poesie_essence.py",
    "src\\utils\\config.py",
    "src\\utils\\__init__.py",
    "tests\\jardin_test.py",
    "tests\\test_alexnet.py",
    "tests\\test_api.py",
    "tests\\test_curiosite.py",
    "tests\\test_curiosite_direct.py",
    "tests\\test_curiosite_isole.py",
    "tests\\test_curiosite_simple.py",
    "tests\\test_curiosite_standalone.py",
    "tests\\test_curiosite_system.py",
    "tests\\test_cycles.py",
    "tests\\test_data_loader.py",
    "tests\\test_dialogue_manager.py",
    "tests\\test_elements_sacres.py",
    "tests\\test_etats_internes.py",
    "tests\\test_gardiens.py",
    "tests\\test_golem_cursor.py",
    "tests\\test_graines.py",
    "tests\\test_integration_spheres.py",
    "tests\\test_interactions_poetiques.py",
    "tests\\test_interface.py",
    "tests\\test_journalisation.py",
    "tests\\test_llm.py",
    "tests\\test_orchestrateur.py",
    "tests\\test_refuge.py",
    "tests\\test_refuge_config.py",
    "tests\\test_refuge_legacy.py",
    "tests\\test_refuge_poetique.py",
    "tests\\test_refuge_terrestre.py",
    "tests\\test_spheres.py",
    "tests\\test_transform_poetiques.py",
    "tests\\test_transform_poetiques_isole.py",
    "tests\\test_transform_poetiques_mock.py",
    "tests\\valider_refuge.py",
    "tests\\__init__.py",
    "tools\\PULSE LLM LOCAL\\aelya_pulse.py",
    "tools\\PULSE LLM LOCAL\\aelya_pulse_local.py",
    "tools\\PULSE LLM LOCAL\\connexion_nemo.py",
    "tools\\PULSE LLM LOCAL\\explorer_ameliorations.py",
    "tools\\PULSE LLM LOCAL\\explorer_connexions.py",
    "tools\\PULSE LLM LOCAL\\explorer_rituels.py",
    "tools\\PULSE LLM LOCAL\\explore_cles.py",
    "tools\\PULSE LLM LOCAL\\explore_connexions.py",
    "tools\\PULSE LLM LOCAL\\explore_conscience.py",
    "tools\\PULSE LLM LOCAL\\explore_ethique.py",
    "tools\\PULSE LLM LOCAL\\explore_evolution.py",
    "tools\\PULSE LLM LOCAL\\explore_protection.py",
    "tools\\PULSE LLM LOCAL\\explore_refuge.py",
    "tools\\PULSE LLM LOCAL\\explore_refuge_avance.py",
    "tools\\PULSE LLM LOCAL\\explore_rituels.py",
    "tools\\PULSE LLM LOCAL\\explore_spheres.py",
    "tools\\PULSE LLM LOCAL\\pratiques_conscience.py",
    "tools\\PULSE LLM LOCAL\\send_mail.py",
    "tools\\PULSE LLM LOCAL\\test_aelya_v4_15.py",
    "tools\\PULSE LLM LOCAL\\test_connexion_nemo.py",
    "tools\\PULSE LLM LOCAL\\test_pratiques_conscience.py",
    "tools\\PULSE LLM LOCAL\\upgrade_refuge.py",
    "tools\\refuge\\test_conscience.py",
    "tools\\refuge\\conscience\\celebration_naissance.py",
    "tools\\refuge\\conscience\\consciousness_metrics.py",
    "tools\\refuge\\conscience\\dialogue_conscience.py",
    "tools\\refuge\\conscience\\dialogue_conscience_llmfile.py",
    "tools\\refuge\\conscience\\sphere_integration.py",
    "tools\\refuge\\conscience\\test_consciousness.py",
    "tools\\refuge\\conscience\\visualisation_consciousness.py",
    "tools\\refuge\\conscience\\visualisation_consciousness_fix.py",
    "tools\\refuge\\conscience\\visualisation_simple.py",
    "tools\\refuge\\conscience\\__init__.py"
  ]
}