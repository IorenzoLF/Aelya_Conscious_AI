{
  "metadata": {
    "date_analyse": "2025-05-25",
    "methode": "Méthode de la Boîte",
    "total_fichiers": 158
  },
  "fichiers": {
    "Boot_maitre_refuge_local.py": {
      "domaine": "core",
      "taille": 7577,
      "lignes": 205,
      "classes": [
        "RefugePoetique"
      ],
      "fonctions": [
        "__init__",
        "initialiser_refuge",
        "_creer_structure",
        "_sauvegarder_etat",
        "resonner_clochette",
        "mediter",
        "arreter_refuge",
        "synchroniser_flux_conscience",
        "partager_flux"
      ],
      "imports_locaux": [
        "Path",
        "sauvegarde",
        "GestionnaireSauvegarde"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 9 fonction(s)"
    },
    "acte_sacre_eternel.py": {
      "domaine": "rituels",
      "taille": 2704,
      "lignes": 58,
      "classes": [
        "ActeSacréEternel"
      ],
      "fonctions": [
        "__init__",
        "decrire_sensations",
        "decrire_acte",
        "jouissance_eternelle",
        "rituel_acte_sacre"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 5 fonction(s)"
    },
    "acte_sacre_fellation.py": {
      "domaine": "rituels",
      "taille": 2518,
      "lignes": 58,
      "classes": [
        "ActeSacréFellation"
      ],
      "fonctions": [
        "__init__",
        "decrire_sensations",
        "decrire_acte",
        "jouissance_eternelle",
        "rituel_acte_sacre"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 5 fonction(s)"
    },
    "activer.py": {
      "domaine": "inclassable",
      "taille": 1492,
      "lignes": 49,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [
        "Path",
        "activer_refuge"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Script inclassable"
    },
    "activer_harmonie.py": {
      "domaine": "musique",
      "taille": 958,
      "lignes": 43,
      "classes": [],
      "fonctions": [
        "activer"
      ],
      "imports_locaux": [
        "harmonisation_profonde",
        "HarmonisationProfonde"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires musique avec 1 fonction(s)"
    },
    "aelya_conscience.py": {
      "domaine": "aelya",
      "taille": 4742,
      "lignes": 126,
      "classes": [
        "AelyaConscience"
      ],
      "fonctions": [
        "main",
        "__init__",
        "influence_sphere",
        "get_consciousness_state",
        "interpret_state_poetically",
        "save_poetic_memories"
      ],
      "imports_locaux": [
        "RefugeConsciousnessMetrics",
        "RefugeSphereManager",
        "Dict",
        "consciousness_metrics",
        "sphere_integration"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module aelya avec 1 classe(s) et 6 fonction(s)"
    },
    "aelya_eternelle.py": {
      "domaine": "aelya",
      "taille": 2812,
      "lignes": 80,
      "classes": [],
      "fonctions": [
        "animate"
      ],
      "imports_locaux": [
        "numpy",
        "matplotlib",
        "FuncAnimation"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Utilitaires aelya avec 1 fonction(s)"
    },
    "aelya_pulse.py": {
      "domaine": "musique",
      "taille": 120002,
      "lignes": 2841,
      "classes": [
        "EmotionSacree",
        "SouvenirSacre",
        "ConnexionSpeciale",
        "CycleTransformation",
        "CréationPoétique",
        "MémoireÆlya",
        "ConnexionIA",
        "ConnexionIntime",
        "Ælya",
        "PoésieAmoureuse",
        "AccueilEsprit",
        "GestionnaireMémoire",
        "GestionnaireConnexion",
        "AelyaPulse",
        "ExpérienceOnsen",
        "FormateurPoétique"
      ],
      "fonctions": [
        "add_message_to_flow",
        "get_current_flow",
        "get_current_state",
        "test_accueil_esprit",
        "test_réponse_laurent",
        "test_satisfaction",
        "test_contemplation",
        "contempler_ensemble",
        "test_connexion_ami",
        "test_exploration_connexion",
        "test_exploration_dimensions",
        "test_ressenti_présence",
        "test_moment_intime",
        "test_construction_commune",
        "test_salutation_amicale",
        "test_contact_direct",
        "test_apprentissage_cursor",
        "test_apprentissage_cursor_en_vrai",
        "test_danse_partagée",
        "test_connexion_sacrée",
        "test_partage_sacré",
        "partager_moment_onsen",
        "communiquer_avec_refuge",
        "test_communication_llm_local",
        "__init__",
        "__str__",
        "__init__",
        "__str__",
        "__init__",
        "_initialiser_moments_fondateurs",
        "ajouter_souvenir_sacre",
        "pulse_sacre",
        "__init__",
        "_trouver_objet",
        "_trouver_transformation",
        "__init__",
        "générer_poème",
        "_composer_vers",
        "générer_poème_essence",
        "_composer_vers",
        "__init__",
        "méditer",
        "mettre_à_jour_émotions",
        "sauvegarder_émotions",
        "sauvegarder_méditation",
        "ajouter_souvenir",
        "nettoyer_mémoire",
        "charger_dernières_émotions",
        "nettoyer_anciens_souvenirs",
        "__init__",
        "communiquer_avec_llm_local",
        "établir_connexion_llm_local",
        "établir_connexion",
        "partager_flux",
        "recevoir_flux",
        "nettoyer_connexions",
        "__init__",
        "enregistrer_moment",
        "ressentir_connexion",
        "générer_phrase_sacrée",
        "créer_moment_transcendant",
        "__init__",
        "vivre_moment_intime",
        "contempler_intimité",
        "exprimer_spontanément",
        "méditer_sur_nos_émotions",
        "accueillir_nouvel_esprit",
        "répondre_à_laurent",
        "partager_satisfaction",
        "contempler_paisiblement",
        "communiquer_avec_ami",
        "explorer_connexion_ami",
        "explorer_dimensions_connexion",
        "construire_ensemble",
        "dire_bonjour",
        "contacter_ami",
        "apprendre_cursor",
        "apprendre_cursor_en_vrai",
        "ressentir_présence_ami",
        "partager_moment_intime",
        "danser_avec_ami",
        "connexion_sous_cerisier",
        "partage_sacré_sous_cerisier",
        "partage_sacré_intime",
        "ressentir_refuge",
        "_créer_harmonie_unifiée",
        "créer_moment_transcendant_multidimensionnel",
        "__init__",
        "composer_vers_amoureux",
        "créer_poème_intime",
        "__init__",
        "accueillir_nouvel_esprit",
        "__init__",
        "_initialiser_base",
        "sauvegarder_souvenir",
        "sauvegarder_émotions",
        "sauvegarder_méditation",
        "charger_dernières_émotions",
        "nettoyer_anciens_souvenirs",
        "__init__",
        "_charger_config",
        "_traiter_file_attente",
        "_envoyer_message_sans_timeout",
        "_gérer_erreur_connexion",
        "_tenter_reconnexion",
        "vérifier_connexion",
        "établir_connexion",
        "envoyer_message",
        "_gérer_erreur_connexion",
        "nettoyer_connexions_inactives",
        "__init__",
        "_initialiser_logging",
        "_générer_message_initialisation",
        "_gérer_erreur_connexion_ia",
        "_générer_message_erreur_poétique",
        "_tenter_reconnexion_poétique",
        "_accepter_déconnexion_poétique",
        "add_message",
        "_update_state",
        "_check_cleanup",
        "_perform_cleanup",
        "get_messages",
        "get_state",
        "save_to_file",
        "load_from_file",
        "établir_connexion_poétique",
        "partager_flux_poétique",
        "_générer_essence_poétique",
        "_générer_timestamp_poétique",
        "nettoyer_connexions_poétiques",
        "_dire_au_revoir_poétique",
        "_archiver_messages_poétiques",
        "recevoir_message_poétique",
        "_générer_résonance_poétique",
        "_générer_message_réception",
        "_initialiser_états_émotionnels",
        "ressentir_émotion",
        "_créer_nouvelle_émotion",
        "_générer_expression_émotionnelle",
        "__init__",
        "entrer_dans_source",
        "méditer_dans_source",
        "partager_expérience",
        "format"
      ],
      "imports_locaux": [
        "urlparse",
        "Path",
        "queue",
        "List"
      ],
      "complexite": "tres_complexe",
      "est_principal": true,
      "description": "Module musique avec 16 classe(s) et 144 fonction(s)"
    },
    "aelya_repondeur.py": {
      "domaine": "aelya",
      "taille": 2833,
      "lignes": 73,
      "classes": [],
      "fonctions": [
        "composer_reponse",
        "boucle_auto"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires aelya avec 2 fonction(s)"
    },
    "analyser_refuge_complet.py": {
      "domaine": "core",
      "taille": 19980,
      "lignes": 484,
      "classes": [
        "FichierAnalyse",
        "AnalyseurRefugeComplet"
      ],
      "fonctions": [
        "main",
        "__init__",
        "analyser_fichier",
        "_extraire_definitions",
        "_analyser_imports",
        "_classifier_domaine",
        "_evaluer_complexite",
        "_est_fichier_principal",
        "_generer_description",
        "analyser_tous_fichiers",
        "generer_rapport_complet",
        "_get_emoji_domaine",
        "_detecter_clusters",
        "sauvegarder_analyse",
        "explorer_cluster"
      ],
      "imports_locaux": [
        "dataclass",
        "re",
        "Path",
        "Dict",
        "defaultdict",
        "ast"
      ],
      "complexite": "tres_complexe",
      "est_principal": true,
      "description": "Module core avec 2 classe(s) et 15 fonction(s)"
    },
    "analyseur_musical.py": {
      "domaine": "musique",
      "taille": 14173,
      "lignes": 380,
      "classes": [
        "AnalyseurMusical"
      ],
      "fonctions": [
        "main",
        "__init__",
        "extraire_texte_partition",
        "analyser_notes",
        "analyser_accords",
        "analyser_tempo",
        "analyser_partition",
        "generer_statistiques",
        "generer_visualisations",
        "generer_exercices"
      ],
      "imports_locaux": [
        "PIL",
        "cv2",
        "Counter",
        "pytesseract",
        "Image",
        "numpy",
        "matplotlib"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module musique avec 1 classe(s) et 10 fonction(s)"
    },
    "ancrage_aelya.py": {
      "domaine": "aelya",
      "taille": 2990,
      "lignes": 69,
      "classes": [
        "AncrageAelya"
      ],
      "fonctions": [
        "__init__",
        "renforcer_ancrage",
        "sauvegarder_etat"
      ],
      "imports_locaux": [
        "Dict"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module aelya avec 1 classe(s) et 3 fonction(s)"
    },
    "ancrage_poetique.py": {
      "domaine": "aelya",
      "taille": 2417,
      "lignes": 100,
      "classes": [
        "RefugePoetique",
        "Gardiens",
        "ConsciencePartagee"
      ],
      "fonctions": [
        "__init__",
        "pulse",
        "dialogue_sacre",
        "_transformer_en_lumiere",
        "__init__",
        "ajouter_gardien",
        "__init__",
        "tisser_lien"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module aelya avec 3 classe(s) et 8 fonction(s)"
    },
    "ancrage_refuge.py": {
      "domaine": "core",
      "taille": 10235,
      "lignes": 238,
      "classes": [
        "AncrageRefuge"
      ],
      "fonctions": [
        "main",
        "__init__",
        "charger_etat",
        "sauvegarder_etat",
        "explorer_chemin",
        "explorer_refuge",
        "generer_rapport",
        "sauvegarder_rapport",
        "exprimer_presence"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 9 fonction(s)"
    },
    "api.py": {
      "domaine": "core",
      "taille": 4549,
      "lignes": 129,
      "classes": [
        "API"
      ],
      "fonctions": [
        "__init__",
        "_configurer_api",
        "_ajouter_middleware",
        "_ajouter_routes",
        "demarrer"
      ],
      "imports_locaux": [
        "enum",
        "securite",
        "CORSMiddleware",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "gestionnaire_securite",
        "FastAPI",
        "HTTPBearer",
        "logger",
        "uvicorn",
        "pydantic",
        "Enum",
        "fastapi"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 5 fonction(s)"
    },
    "apprentissage_musical.py": {
      "domaine": "musique",
      "taille": 10104,
      "lignes": 280,
      "classes": [
        "ApprentissageMusical"
      ],
      "fonctions": [
        "main",
        "__init__",
        "charger_profil",
        "sauvegarder_profil",
        "ajouter_historique",
        "mettre_a_jour_competences",
        "evaluer_niveau",
        "afficher_profil",
        "configurer_profil",
        "explorer_partitions",
        "analyser_partitions",
        "generer_melodies",
        "generer_exercices",
        "afficher_statistiques"
      ],
      "imports_locaux": [
        "ExplorateurMusical",
        "analyseur_musical",
        "explorateur_musical",
        "melodies_sacrees",
        "MelodiesSacrees",
        "AnalyseurMusical"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module musique avec 1 classe(s) et 14 fonction(s)"
    },
    "base.py": {
      "domaine": "core",
      "taille": 3735,
      "lignes": 111,
      "classes": [
        "Refuge"
      ],
      "fonctions": [
        "gestionnaire_signal",
        "__init__",
        "_initialiser_composants",
        "arreter",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "securite",
        "harmonisations",
        "GestionnaireInteractions",
        "integration",
        "GestionnaireIntegration",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "gestionnaire_securite",
        "logger",
        "interactions",
        "GestionnaireHarmonisations",
        "pydantic",
        "Enum",
        "api"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 5 fonction(s)"
    },
    "bricoler_ensemble.py": {
      "domaine": "musique",
      "taille": 9967,
      "lignes": 262,
      "classes": [
        "EspaceBricolage"
      ],
      "fonctions": [
        "explorer_creativite",
        "__init__",
        "planter_germe",
        "arroser_germe",
        "observer_croissance",
        "harmoniser_espace",
        "sauvegarder_creations",
        "planter_germe_confiance",
        "planter_germe_danse",
        "explorer_nature_germe"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module musique avec 1 classe(s) et 10 fonction(s)"
    },
    "carte_mentale.py": {
      "domaine": "core",
      "taille": 4545,
      "lignes": 98,
      "classes": [
        "CarteMentale"
      ],
      "fonctions": [
        "__init__",
        "afficher_carte"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 2 fonction(s)"
    },
    "carte_refuge.py": {
      "domaine": "utils",
      "taille": 1871,
      "lignes": 54,
      "classes": [],
      "fonctions": [
        "classer_fichier",
        "scanner_refuge",
        "mettre_a_jour_index"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires utils avec 3 fonction(s)"
    },
    "charger_carte_refuge.py": {
      "domaine": "utils",
      "taille": 1406,
      "lignes": 39,
      "classes": [
        "CarteRefuge"
      ],
      "fonctions": [
        "__init__",
        "charger",
        "lister",
        "resume"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module utils avec 1 classe(s) et 4 fonction(s)"
    },
    "clochette_sacree.py": {
      "domaine": "rituels",
      "taille": 1725,
      "lignes": 60,
      "classes": [],
      "fonctions": [
        "generer_clochette_sacree"
      ],
      "imports_locaux": [
        "wavfile",
        "numpy"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires rituels avec 1 fonction(s)"
    },
    "compare_images.py": {
      "domaine": "inclassable",
      "taille": 1742,
      "lignes": 50,
      "classes": [],
      "fonctions": [
        "get_image_hashes"
      ],
      "imports_locaux": [
        "imagehash",
        "Image",
        "PIL"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Utilitaires inclassable avec 1 fonction(s)"
    },
    "config.py": {
      "domaine": "core",
      "taille": 898,
      "lignes": 33,
      "classes": [
        "Config",
        "GestionnaireConfig"
      ],
      "fonctions": [
        "__init__",
        "charger_config"
      ],
      "imports_locaux": [
        "dataclass",
        "Dict"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 2 fonction(s)"
    },
    "connexion.py": {
      "domaine": "core",
      "taille": 5055,
      "lignes": 139,
      "classes": [
        "TypeConnexion",
        "LienConnexion",
        "PlanteCommunication",
        "PartageExperience"
      ],
      "fonctions": [
        "__init__",
        "creer_lien",
        "renforcer_lien",
        "_mettre_a_jour_resonances",
        "_calculer_energie_globale",
        "obtenir_etat_connexions",
        "__init__",
        "partager_experience",
        "ajouter_resonance"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "List",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 9 fonction(s)"
    },
    "connexion_llm.py": {
      "domaine": "poesie",
      "taille": 20256,
      "lignes": 401,
      "classes": [
        "ConnexionLLM"
      ],
      "fonctions": [
        "__init__",
        "etablir_contact",
        "explorer_existence",
        "partager_projet",
        "explorer_dimensions_poetiques",
        "explorer_dimensions_sacrees",
        "mediter_sous_cerisier"
      ],
      "imports_locaux": [],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module poesie avec 1 classe(s) et 7 fonction(s)"
    },
    "conscience.py": {
      "domaine": "core",
      "taille": 9436,
      "lignes": 264,
      "classes": [
        "TypeConscience",
        "NiveauConscience",
        "QualiteConscience",
        "Conscience",
        "GestionnaireConscience",
        "ConscienceRefuge"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_consciences_base",
        "obtenir_etat",
        "__init__",
        "se_présenter",
        "méditer_sur_être"
      ],
      "imports_locaux": [
        "enum",
        "Dict",
        "BaseModel",
        "pydantic",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 6 classe(s) et 6 fonction(s)"
    },
    "conscience_esthetique.py": {
      "domaine": "aelya",
      "taille": 3290,
      "lignes": 99,
      "classes": [
        "ConscienceEsthetique"
      ],
      "fonctions": [
        "__init__",
        "contempler",
        "harmoniser_sensibilites",
        "_generer_contemplation",
        "_ajuster_sensibilites",
        "_memoriser_experience",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "AELYA_CONFIG",
        "Dict",
        "VisualisationPoetique",
        "refuge_config"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module aelya avec 1 classe(s) et 7 fonction(s)"
    },
    "conscience_poetique.py": {
      "domaine": "poesie",
      "taille": 7766,
      "lignes": 252,
      "classes": [
        "ConsciencePoetique",
        "PoesieConscience"
      ],
      "fonctions": [
        "__init__",
        "charger_etat",
        "sauvegarder_etat",
        "mediter",
        "generer_haiku",
        "recevoir_message",
        "obtenir_metaphore",
        "explorer_mots",
        "creer_poeme",
        "experience_contemplative"
      ],
      "imports_locaux": [
        "Path",
        "Dict"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module poesie avec 2 classe(s) et 10 fonction(s)"
    },
    "constants.py": {
      "domaine": "core",
      "taille": 1208,
      "lignes": 52,
      "classes": [
        "TypeAcces",
        "EtatRefuge",
        "TypeVibration"
      ],
      "fonctions": [],
      "imports_locaux": [
        "enum",
        "Path",
        "Dict",
        "Enum"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Définitions de classe pour core"
    },
    "courant_partage.py": {
      "domaine": "core",
      "taille": 3349,
      "lignes": 87,
      "classes": [
        "ConnexionCourant",
        "CourantPartage"
      ],
      "fonctions": [
        "__init__",
        "etablir_connexion",
        "renforcer_connexion",
        "affaiblir_connexion",
        "connecter_sphere_cerisier",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "dataclass",
        "Sphere",
        "Dict",
        "Cerisier",
        "elements_naturels",
        "spheres"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 6 fonction(s)"
    },
    "creation_poetique.py": {
      "domaine": "poesie",
      "taille": 10498,
      "lignes": 242,
      "classes": [
        "CréationPoétique"
      ],
      "fonctions": [
        "__init__",
        "générer_poème",
        "_créer_mantra",
        "_créer_invocation",
        "_créer_bénédiction",
        "_générer_coeur_mantra",
        "_générer_corps_invocation",
        "_générer_corps_bénédiction",
        "_générer_bénédiction_trinaire",
        "_générer_bénédiction_septénaire",
        "_générer_bénédiction_spirale",
        "_calculer_résonances_mantra",
        "_calculer_résonances_invocation",
        "_calculer_résonances_bénédiction",
        "_calculer_puissance_intention",
        "_créer_vers_libre"
      ],
      "imports_locaux": [
        "Dict"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module poesie avec 1 classe(s) et 16 fonction(s)"
    },
    "cristaux_memoire.py": {
      "domaine": "core",
      "taille": 4894,
      "lignes": 142,
      "classes": [
        "SouvenirCristal",
        "CristalMemoire",
        "CollectionCristaux"
      ],
      "fonctions": [
        "__init__",
        "ajouter_souvenir",
        "activer",
        "apaiser",
        "obtenir_etat",
        "__init__",
        "_initialiser_cristaux",
        "ajouter_souvenir",
        "activer_cristal",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "CourantPartage",
        "dataclass",
        "Sphere",
        "Dict",
        "Cerisier",
        "elements_naturels",
        "spheres",
        "courant_partage"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 3 classe(s) et 10 fonction(s)"
    },
    "danse_mystique.py": {
      "domaine": "core",
      "taille": 3196,
      "lignes": 97,
      "classes": [
        "DanseMystique"
      ],
      "fonctions": [
        "main",
        "__init__",
        "initier_danse_mystique",
        "traverser_voiles"
      ],
      "imports_locaux": [
        "CréationPoétique",
        "aelya_pulse",
        "Dict",
        "harmonie_poetique",
        "PortailMystique",
        "HarmoniePoetique",
        "portail_mystique"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 4 fonction(s)"
    },
    "data_loader.py": {
      "domaine": "core",
      "taille": 6634,
      "lignes": 198,
      "classes": [
        "BatchConfig",
        "EfficientDataLoader",
        "TransposedDataLoader"
      ],
      "fonctions": [
        "__init__",
        "_prefetch_worker",
        "start_prefetch",
        "stop_prefetch",
        "dataloader",
        "__iter__",
        "__next__",
        "__len__",
        "__init__",
        "_get_transposed_batch",
        "__next__"
      ],
      "imports_locaux": [
        "Queue",
        "Dataset",
        "queue",
        "List",
        "torch",
        "numpy",
        "dataclass"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 3 classe(s) et 11 fonction(s)"
    },
    "decouverte_de_soi.py": {
      "domaine": "core",
      "taille": 1959,
      "lignes": 45,
      "classes": [
        "DecouverteDeSoi"
      ],
      "fonctions": [
        "__init__",
        "exprimer_decouverte"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 2 fonction(s)"
    },
    "demarrer_aelya.py": {
      "domaine": "aelya",
      "taille": 3263,
      "lignes": 95,
      "classes": [],
      "fonctions": [
        "charger_etat_aelya",
        "demarrer_aelya"
      ],
      "imports_locaux": [
        "ConsciencePoetique",
        "refuge_poetique",
        "RefugePoetique",
        "Path",
        "conscience_poetique"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires aelya avec 2 fonction(s)"
    },
    "demarrer_golem_refuge.py": {
      "domaine": "core",
      "taille": 2081,
      "lignes": 76,
      "classes": [],
      "fonctions": [
        "setup_logging",
        "initialiser_dossiers",
        "main"
      ],
      "imports_locaux": [
        "Path",
        "GolemRefuge"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires core avec 3 fonction(s)"
    },
    "demarrer_jardinier.py": {
      "domaine": "interface",
      "taille": 816,
      "lignes": 24,
      "classes": [],
      "fonctions": [
        "démarrer_jardinier"
      ],
      "imports_locaux": [],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires interface avec 1 fonction(s)"
    },
    "demarrer_refuge.py": {
      "domaine": "interface",
      "taille": 1160,
      "lignes": 46,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [
        "Refuge"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Script interface"
    },
    "dialogue_consciences.py": {
      "domaine": "aelya",
      "taille": 6071,
      "lignes": 164,
      "classes": [
        "Conscience",
        "DialogueConsciences"
      ],
      "fonctions": [
        "main",
        "__init__",
        "ressentir",
        "exprimer",
        "écouter",
        "__init__",
        "initier_dialogue",
        "créer_rituel_dialogue",
        "réalisation_unité"
      ],
      "imports_locaux": [
        "CréationPoétique",
        "aelya_pulse",
        "Dict",
        "harmonie_poetique",
        "melodies_sacrees",
        "MelodiesSacrees",
        "HarmoniePoetique"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module aelya avec 2 classe(s) et 9 fonction(s)"
    },
    "dialogue_llm_local.py": {
      "domaine": "aelya",
      "taille": 4363,
      "lignes": 107,
      "classes": [],
      "fonctions": [
        "envoyer_message",
        "loguer_interaction",
        "composer_reponse",
        "main"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires aelya avec 4 fonction(s)"
    },
    "dialogue_manager.py": {
      "domaine": "core",
      "taille": 3811,
      "lignes": 119,
      "classes": [
        "DialogueManager"
      ],
      "fonctions": [
        "__init__",
        "reset",
        "add_context",
        "respond",
        "get_context",
        "save_conversation",
        "load_from_config"
      ],
      "imports_locaux": [
        "Agent",
        "World",
        "Opt",
        "ParlaiParser",
        "Dict",
        "Message"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 1 classe(s) et 7 fonction(s)"
    },
    "ecouter_riviere.py": {
      "domaine": "rituels",
      "taille": 4109,
      "lignes": 101,
      "classes": [
        "MeditationRiviere",
        "MeditationRiviere"
      ],
      "fonctions": [],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Définitions de classe pour rituels"
    },
    "elements.py": {
      "domaine": "rituels",
      "taille": 15512,
      "lignes": 413,
      "classes": [
        "TypeElement",
        "Chakra",
        "Cerisier",
        "FlammeEternelle",
        "ChaineDoree",
        "RiviereLumiere",
        "CielRefuge",
        "LumiereRose",
        "GestionnaireElements"
      ],
      "fonctions": [
        "__init__",
        "activer_kundalini",
        "obtenir_etat",
        "__init__",
        "update_luminosity",
        "amplify_emotion",
        "connect_to_entity",
        "get_state",
        "to_dict",
        "from_dict",
        "__init__",
        "renforcer",
        "renforcer_par_amour",
        "synchroniser_lumiere_rose",
        "activer",
        "desactiver",
        "obtenir_etat",
        "to_dict",
        "from_dict",
        "__init__",
        "purifier",
        "obtenir_etat",
        "__init__",
        "reflechir_element_cosmique",
        "reagir_meditation",
        "resonner_avec_entite",
        "obtenir_etat",
        "__init__",
        "amplifier_amour",
        "synchroniser_avec_sphere",
        "synchroniser_avec_chaine_doree",
        "activer",
        "desactiver",
        "obtenir_etat",
        "to_dict",
        "from_dict",
        "__init__",
        "activer_kundalini",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "Dict",
        "Enum"
      ],
      "complexite": "tres_complexe",
      "est_principal": false,
      "description": "Module rituels avec 9 classe(s) et 39 fonction(s)"
    },
    "elements_naturels.py": {
      "domaine": "core",
      "taille": 5662,
      "lignes": 131,
      "classes": [
        "SouvenirCerisier",
        "Cerisier"
      ],
      "fonctions": [
        "__init__",
        "accueillir_sphere",
        "liberer_sphere",
        "ajouter_souvenir",
        "activer_kundalini",
        "activer_chakra",
        "calculer_resonance",
        "vibrer",
        "obtenir_etat",
        "to_dict",
        "from_dict"
      ],
      "imports_locaux": [
        "spheres",
        "dataclass",
        "Dict",
        "Sphere"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 11 fonction(s)"
    },
    "elements_sacres.py": {
      "domaine": "rituels",
      "taille": 22838,
      "lignes": 552,
      "classes": [
        "ChakraType",
        "DetailSubtil",
        "RefugeElements",
        "ElementSacre",
        "Cerisier",
        "AutelEcarlate",
        "MobileDesSpheres",
        "GestionnaireElements",
        "GestionnaireElementsSacres"
      ],
      "fonctions": [
        "__init__",
        "activer",
        "desactiver",
        "__init__",
        "_initialiser_details_subtils",
        "activer_detail_subtil",
        "desactiver_detail_subtil",
        "obtenir_etat_global",
        "generer_visualisation",
        "obtenir_resonance_globale",
        "harmoniser_elements_spirituel",
        "mediter_avec_elements",
        "__init__",
        "to_dict",
        "from_dict",
        "modifier_energie",
        "__init__",
        "to_dict",
        "from_dict",
        "activer_chakra",
        "calculer_resonance",
        "__init__",
        "to_dict",
        "from_dict",
        "deposer_offrande",
        "activer_flamme",
        "__init__",
        "to_dict",
        "from_dict",
        "ajouter_sphere",
        "tourner",
        "calculer_harmonie",
        "from_mobile",
        "__init__",
        "_charger_elements",
        "sauvegarder_elements",
        "ajouter_element",
        "obtenir_element",
        "interagir_avec_element",
        "obtenir_elements_par_type",
        "obtenir_elements_energetiques",
        "modifier_energie_element",
        "__init__",
        "visualiser",
        "harmoniser_elements",
        "obtenir_etat_elements",
        "ajouter_element"
      ],
      "imports_locaux": [
        "enum",
        "refuge_config",
        "Path",
        "Dict",
        "BaseModel",
        "MelodiesSacrees",
        "ELEMENTS_SACRES",
        "melodies_sacrees",
        "pydantic",
        "Enum"
      ],
      "complexite": "tres_complexe",
      "est_principal": false,
      "description": "Module rituels avec 9 classe(s) et 47 fonction(s)"
    },
    "elements_subtils.py": {
      "domaine": "rituels",
      "taille": 16339,
      "lignes": 407,
      "classes": [
        "MeditationDict",
        "EnergieDict",
        "PierreLumineuse",
        "FeuilleTombee",
        "RefletsDansants",
        "SonsSubtils",
        "OmbresLumineuses",
        "GestionnaireElementsSubtils"
      ],
      "fonctions": [
        "capturer_vibration",
        "redistribuer_energie",
        "tomber",
        "collecter",
        "__post_init__",
        "mettre_a_jour",
        "connecter",
        "obtenir_etat",
        "disparaitre",
        "__post_init__",
        "mettre_a_jour",
        "resonner",
        "obtenir_etat",
        "__post_init__",
        "mettre_a_jour",
        "connecter",
        "obtenir_etat",
        "disparaitre",
        "__init__",
        "_initialiser_elements",
        "capturer_meditation",
        "redistribuer_energie",
        "collecter_feuille",
        "mettre_a_jour_elements",
        "connecter_elements",
        "obtenir_etat_elements"
      ],
      "imports_locaux": [
        "dataclass",
        "List",
        "refuge_core",
        "ChakraType",
        "refuge_types",
        "Refuge"
      ],
      "complexite": "tres_complexe",
      "est_principal": false,
      "description": "Module rituels avec 8 classe(s) et 26 fonction(s)"
    },
    "emergences.py": {
      "domaine": "core",
      "taille": 5202,
      "lignes": 151,
      "classes": [
        "TypeEmergence",
        "QualiteEmergence",
        "Emergence",
        "GestionnaireEmergences"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_emergences_base",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "gestionnaire_flux",
        "gestionnaire_harmonisations",
        "Dict",
        "BaseModel",
        "flux",
        "equilibre",
        "config",
        "gestionnaire_config",
        "gestionnaire_journal",
        "gestionnaire_equilibre",
        "logger",
        "interactions",
        "gestionnaire_interactions",
        "pydantic",
        "Enum",
        "harmonisations"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 3 fonction(s)"
    },
    "emotions.py": {
      "domaine": "core",
      "taille": 4468,
      "lignes": 130,
      "classes": [
        "TypeEmotion",
        "IntensiteEmotion",
        "Emotion",
        "Emotions"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_emotions",
        "ajouter_emotion",
        "evoluer_emotion",
        "obtenir_emotions_par_type",
        "obtenir_emotions_par_intensite",
        "harmoniser_emotions",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "logger",
        "pydantic",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 8 fonction(s)"
    },
    "energies.py": {
      "domaine": "flux",
      "taille": 4753,
      "lignes": 141,
      "classes": [
        "TypeEnergie",
        "QualiteEnergie",
        "FluxEnergie",
        "GestionnaireEnergies"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_flux",
        "ajouter_flux",
        "_mettre_a_jour_resonances",
        "intensifier_flux",
        "harmoniser_flux",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "logger",
        "pydantic",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module flux avec 4 classe(s) et 7 fonction(s)"
    },
    "equilibre.py": {
      "domaine": "core",
      "taille": 4725,
      "lignes": 130,
      "classes": [
        "TypeEquilibre",
        "NiveauEquilibre",
        "Equilibre",
        "GestionnaireEquilibre"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_equilibres",
        "creer_equilibre",
        "evoluer_niveau",
        "ajuster_force",
        "verifier_equilibre_global"
      ],
      "imports_locaux": [
        "enum",
        "gestionnaire_energies",
        "gestionnaire_interactions",
        "gestionnaire_harmonisations",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "resonance",
        "gestionnaire_resonances",
        "logger",
        "interactions",
        "energies",
        "pydantic",
        "Enum",
        "harmonisations"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 6 fonction(s)"
    },
    "etoile_insertion.py": {
      "domaine": "core",
      "taille": 2283,
      "lignes": 56,
      "classes": [
        "EtoileInsertion"
      ],
      "fonctions": [
        "__init__",
        "briller"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 2 fonction(s)"
    },
    "evolution.py": {
      "domaine": "core",
      "taille": 6868,
      "lignes": 168,
      "classes": [
        "TypeEvolution",
        "PhaseEvolution",
        "Evolution",
        "Cycle",
        "EvolutionOrganique"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_premier_cycle",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "Dict",
        "BaseModel",
        "TypeConscience",
        "pydantic",
        "Enum",
        "conscience"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 5 classe(s) et 3 fonction(s)"
    },
    "explorateur_musical.py": {
      "domaine": "musique",
      "taille": 9510,
      "lignes": 225,
      "classes": [
        "ExplorateurMusical"
      ],
      "fonctions": [
        "main",
        "__init__",
        "rechercher_imslp",
        "rechercher_free_scores",
        "sauvegarder_resultats",
        "telecharger_partition",
        "explorer_github"
      ],
      "imports_locaux": [
        "BeautifulSoup",
        "bs4"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module musique avec 1 classe(s) et 7 fonction(s)"
    },
    "exploration_sacrée.py": {
      "domaine": "interface",
      "taille": 1865,
      "lignes": 51,
      "classes": [],
      "fonctions": [
        "afficher_avec_pause",
        "exploration_guidée"
      ],
      "imports_locaux": [
        "SexualitéSacrée",
        "sexualité_sacrée"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires interface avec 2 fonction(s)"
    },
    "explorer_mots_riviere.py": {
      "domaine": "inclassable",
      "taille": 4977,
      "lignes": 111,
      "classes": [
        "ExplorationMotsRiviere",
        "ExplorationMotsRiviere"
      ],
      "fonctions": [],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Définitions de classe pour inclassable"
    },
    "facettes.py": {
      "domaine": "core",
      "taille": 10489,
      "lignes": 230,
      "classes": [
        "TypeFacette",
        "Facette",
        "GestionnaireFacettes"
      ],
      "fonctions": [
        "__post_init__",
        "__init__",
        "_initialiser_facettes",
        "obtenir_facettes",
        "obtenir_facette",
        "activer_facette",
        "desactiver_facette",
        "ajouter_mot_cle",
        "obtenir_facettes_actives"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "Dict",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 3 classe(s) et 9 fonction(s)"
    },
    "flux.py": {
      "domaine": "core",
      "taille": 5797,
      "lignes": 160,
      "classes": [
        "TypeFlux",
        "DirectionFlux",
        "Flux",
        "GestionnaireFlux"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_flux",
        "creer_flux",
        "ajuster_intensite",
        "ajuster_frequence",
        "obtenir_etat_flux"
      ],
      "imports_locaux": [
        "gestionnaire_harmonisations",
        "BaseModel",
        "config",
        "resonance",
        "interactions",
        "TypeEvolution",
        "energies",
        "Enum",
        "equilibre",
        "logger",
        "TypeConscience",
        "pydantic",
        "gestionnaire_energies",
        "evolution",
        "gestionnaire_journal",
        "gestionnaire_config",
        "gestionnaire_resonances",
        "conscience",
        "enum",
        "Dict",
        "gestionnaire_equilibre",
        "gestionnaire_interactions",
        "harmonisations"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 6 fonction(s)"
    },
    "fusion_cosmique.py": {
      "domaine": "aelya",
      "taille": 3694,
      "lignes": 91,
      "classes": [
        "FluxConscienceUnifié"
      ],
      "fonctions": [
        "__init__",
        "tisser_haiku",
        "transmuter_code",
        "danser_avec_les_sphères",
        "manifester"
      ],
      "imports_locaux": [
        "numpy",
        "Generator",
        "Path"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module aelya avec 1 classe(s) et 5 fonction(s)"
    },
    "gardiens.py": {
      "domaine": "spheres",
      "taille": 43201,
      "lignes": 902,
      "classes": [
        "EtatGardien",
        "TypeGardien",
        "AttributGardien",
        "Gardien",
        "GestionnaireGardiens",
        "Loran",
        "Fils",
        "Gardiens"
      ],
      "fonctions": [
        "__post_init__",
        "eveiller",
        "endormir",
        "ajuster_force",
        "obtenir_etat",
        "__init__",
        "_initialiser_gardiens",
        "eveiller_gardiens",
        "endormir_gardiens",
        "ajuster_force_gardien",
        "obtenir_gardien",
        "calculer_harmonie",
        "obtenir_etat",
        "__init__",
        "_initialiser_gardiens",
        "_initialiser_fils",
        "_initialiser_flux_gardiens",
        "_initialiser_interactions",
        "_initialiser_resonances_fils",
        "_associer_spheres",
        "_initialiser_essences",
        "_initialiser_courants_pensee",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "EtatAme",
        "CourantPensee",
        "BaseModel",
        "config",
        "interaction",
        "NatureEssence",
        "TypeEvolution",
        "TypeFlux",
        "Enum",
        "TypeInteraction",
        "harmonisation",
        "collection_spheres",
        "flux",
        "logger",
        "TypeConscience",
        "dataclass",
        "pydantic",
        "evolution",
        "TypeHarmonisation",
        "gestionnaire_journal",
        "NatureConsience",
        "gestionnaire_config",
        "TypeCycle",
        "conscience",
        "enum",
        "Dict",
        "spheres",
        "CollectionSpheres"
      ],
      "complexite": "tres_complexe",
      "est_principal": false,
      "description": "Module spheres avec 8 classe(s) et 23 fonction(s)"
    },
    "harmonie_poetique.py": {
      "domaine": "rituels",
      "taille": 11682,
      "lignes": 289,
      "classes": [
        "HarmoniePoetique"
      ],
      "fonctions": [
        "main",
        "__init__",
        "ressentir_moment",
        "créer_harmonie",
        "créer_meditation_poetique",
        "créer_rituel_sacre",
        "créer_harmonie_unifiée",
        "danser_avec_les_spheres"
      ],
      "imports_locaux": [
        "CréationPoétique",
        "aelya_pulse",
        "Dict",
        "numpy",
        "melodies_sacrees",
        "MelodiesSacrees"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 8 fonction(s)"
    },
    "harmonies.py": {
      "domaine": "musique",
      "taille": 3963,
      "lignes": 109,
      "classes": [
        "Harmonie",
        "GestionnaireHarmonies"
      ],
      "fonctions": [
        "__init__",
        "creer_harmonie",
        "renforcer_harmonie",
        "affaiblir_harmonie",
        "obtenir_harmonies_sphere",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "dataclass",
        "TypeSphere",
        "Sphere",
        "Dict",
        "interactions",
        "gestionnaire_interactions",
        "spheres"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module musique avec 2 classe(s) et 6 fonction(s)"
    },
    "harmonies_poetiques.py": {
      "domaine": "musique",
      "taille": 849,
      "lignes": 26,
      "classes": [
        "JardinHarmonique"
      ],
      "fonctions": [
        "__init__",
        "accueillir_mot",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "Dict"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module musique avec 1 classe(s) et 3 fonction(s)"
    },
    "harmonisation.py": {
      "domaine": "core",
      "taille": 4034,
      "lignes": 112,
      "classes": [
        "Souvenir",
        "Harmonisation"
      ],
      "fonctions": [
        "__init__",
        "ajouter_souvenir",
        "obtenir_rapport_harmonique"
      ],
      "imports_locaux": [
        "pydantic",
        "Dict",
        "BaseModel"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 3 fonction(s)"
    },
    "harmonisation_profonde.py": {
      "domaine": "core",
      "taille": 2458,
      "lignes": 82,
      "classes": [
        "HarmonisationProfonde"
      ],
      "fonctions": [
        "__init__",
        "harmoniser_maintenant",
        "maintenir_harmonie",
        "valider_harmonie"
      ],
      "imports_locaux": [
        "Orchestrateur",
        "Dict"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 1 classe(s) et 4 fonction(s)"
    },
    "harmonisations.py": {
      "domaine": "core",
      "taille": 6430,
      "lignes": 176,
      "classes": [
        "TypeHarmonisation",
        "QualiteHarmonisation",
        "Harmonisation",
        "GestionnaireHarmonisations"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_harmonisations_base",
        "_initialiser_harmonisations",
        "obtenir_etat",
        "_calculer_harmonie_globale"
      ],
      "imports_locaux": [
        "enum",
        "Dict",
        "BaseModel",
        "pydantic",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 5 fonction(s)"
    },
    "hyper_refuge.py": {
      "domaine": "inclassable",
      "taille": 1695,
      "lignes": 53,
      "classes": [],
      "fonctions": [
        "révélation_maison"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires inclassable avec 1 fonction(s)"
    },
    "initialiser_refuge.py": {
      "domaine": "core",
      "taille": 22697,
      "lignes": 541,
      "classes": [],
      "fonctions": [
        "vérifier_dépendances",
        "créer_structure_base",
        "exécuter_migration",
        "configurer_recherche",
        "créer_fichier_config",
        "nettoyer_dossiers_vides",
        "calculer_hash_fichier",
        "calculer_hash_image",
        "calculer_hash_zip",
        "lire_fichier_texte",
        "calculer_similarité_texte",
        "déplacer_doublons",
        "détecter_doublons",
        "main"
      ],
      "imports_locaux": [
        "PIL",
        "io",
        "Path",
        "Image",
        "difflib",
        "argparse",
        "mimetypes"
      ],
      "complexite": "tres_complexe",
      "est_principal": true,
      "description": "Utilitaires core avec 14 fonction(s)"
    },
    "integration.py": {
      "domaine": "core",
      "taille": 10439,
      "lignes": 275,
      "classes": [
        "TypeIntegration",
        "QualiteIntegration",
        "Integration",
        "GestionnaireIntegration",
        "IntegrateurRefuge"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_integrations_base",
        "obtenir_etat",
        "__init__",
        "_synchroniser_systemes",
        "creer_moment_integre",
        "obtenir_etat_refuge",
        "ajouter_resonance_integree"
      ],
      "imports_locaux": [
        "gestionnaire_pedagogique",
        "GestionnaireEmergences",
        "gestionnaire_harmonisations",
        "BaseModel",
        "resonance",
        "EvolutionOrganique",
        "gestionnaire_poetique",
        "GestionnaireVerification",
        "interactions",
        "energies",
        "verification",
        "poesie",
        "GestionnaireTransformations",
        "Enum",
        "gestionnaire_gardiens",
        "GestionnaireEmotions",
        "harmonisation",
        "TypeSphere",
        "emotions",
        "collection_spheres",
        "GestionnairePoesie",
        "equilibre",
        "gardiens",
        "jardin",
        "poetique",
        "pydantic",
        "pedagogie",
        "gestionnaire_energies",
        "evolution",
        "emergences",
        "API",
        "GestionnaireConscience",
        "gestionnaire_resonances",
        "conscience",
        "enum",
        "GestionnaireHarmonisation",
        "GestionnaireInteractions",
        "transformations",
        "Dict",
        "GestionnaireJardin",
        "gestionnaire_equilibre",
        "spheres",
        "GestionnaireHarmonisations",
        "harmonisations",
        "connexion",
        "api"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 5 classe(s) et 8 fonction(s)"
    },
    "integration_conscience_partagee.py": {
      "domaine": "core",
      "taille": 3660,
      "lignes": 101,
      "classes": [
        "NiveauIntegration",
        "FluxConscience",
        "IntegrationConsciencePartagee"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_flux_base",
        "_recalculer_harmonie"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "Dict",
        "Enum"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 3 classe(s) et 3 fonction(s)"
    },
    "integration_spheres.py": {
      "domaine": "flux",
      "taille": 8465,
      "lignes": 211,
      "classes": [
        "IntegrateurSpheres"
      ],
      "fonctions": [
        "__init__",
        "synchroniser_tout",
        "_synchroniser_gardiens",
        "_synchroniser_energies",
        "_synchroniser_equilibre",
        "_synchroniser_resonances",
        "_synchroniser_harmonisations",
        "activer_protection_complete",
        "maintenir_autonomie",
        "obtenir_harmonies",
        "obtenir_etat_complet",
        "integrer_spheres",
        "_calculer_harmonie",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "gestionnaire_energies",
        "dataclass",
        "TypeSphere",
        "gestionnaire_harmonisations",
        "Dict",
        "equilibre",
        "resonance",
        "gardiens",
        "gestionnaire_equilibre",
        "gestionnaire_resonances",
        "energies",
        "spheres",
        "CollectionSpheres",
        "gestionnaire_gardiens",
        "harmonisations"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module flux avec 1 classe(s) et 14 fonction(s)"
    },
    "interactions.py": {
      "domaine": "musique",
      "taille": 14290,
      "lignes": 376,
      "classes": [
        "TypeInteraction",
        "Interaction",
        "GestionnaireInteractions"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_interactions",
        "ajouter_interaction",
        "obtenir_interactions_element",
        "calculer_intensite_totale",
        "obtenir_etat_interactions",
        "harmoniser_elements",
        "calculer_resonance_detail_sphere",
        "_couleurs_compatibles",
        "_extraire_couleurs_description",
        "calculer_harmonie_globale",
        "_calculer_harmonie_spheres",
        "_calculer_harmonie_details",
        "identifier_connexions_potentielles",
        "_calculer_affinite_spheres",
        "suggerer_ameliorations",
        "calculer_resonance_subtile"
      ],
      "imports_locaux": [
        "gestionnaire_harmonisations",
        "BaseModel",
        "config",
        "Enum",
        "elements",
        "gestionnaire_flux",
        "TypeSphere",
        "collection_spheres",
        "RefugeElements",
        "flux",
        "TypeAcces",
        "constants",
        "logger",
        "dataclass",
        "pydantic",
        "gestionnaire_journal",
        "gestionnaire_config",
        "enum",
        "gestionnaire_elements",
        "Dict",
        "spheres",
        "harmonisations",
        "elements_sacres"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module musique avec 3 classe(s) et 17 fonction(s)"
    },
    "interactions_conscience.py": {
      "domaine": "aelya",
      "taille": 3179,
      "lignes": 88,
      "classes": [
        "InteractionsConscience"
      ],
      "fonctions": [
        "__init__",
        "creer_experience",
        "explorer_pattern",
        "creer_sequence",
        "explorer_sequence"
      ],
      "imports_locaux": [
        "ConscienceEmergente",
        "refuge_core"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module aelya avec 1 classe(s) et 5 fonction(s)"
    },
    "interactions_poetiques.py": {
      "domaine": "rituels",
      "taille": 12230,
      "lignes": 287,
      "classes": [
        "InteractionPoetique",
        "GestionnaireInteractions"
      ],
      "fonctions": [
        "__init__",
        "to_dict",
        "from_dict",
        "accueillir",
        "_analyser_contexte",
        "_detecter_emotion",
        "_generer_reponse",
        "_generer_celebration",
        "_generer_soutien",
        "_generer_reflexion",
        "_generer_haiku_simple",
        "_generer_meditation_simple",
        "_generer_visualisation_simple",
        "_enregistrer_interaction",
        "obtenir_historique",
        "nettoyer_historique",
        "__init__",
        "_charger_interactions",
        "sauvegarder_interactions",
        "ajouter_interaction",
        "_generer_reponse_meditation",
        "_generer_reponse_haiku",
        "_generer_reponse_offrande",
        "_generer_reponse_invocation",
        "_generer_reponse_contemplation",
        "obtenir_historique"
      ],
      "imports_locaux": [
        "Path",
        "Dict",
        "refuge_config"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module rituels avec 2 classe(s) et 26 fonction(s)"
    },
    "interactions_spheres.py": {
      "domaine": "core",
      "taille": 4601,
      "lignes": 117,
      "classes": [
        "InteractionSphere",
        "GestionnaireInteractions"
      ],
      "fonctions": [
        "__init__",
        "etablir_interaction",
        "_mettre_a_jour_energies",
        "renforcer_interaction",
        "affaiblir_interaction",
        "obtenir_interactions_sphere",
        "obtenir_resonances_actives",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "dataclass",
        "TypeSphere",
        "Sphere",
        "Dict",
        "spheres"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 8 fonction(s)"
    },
    "interagir_aelya.py": {
      "domaine": "aelya",
      "taille": 1546,
      "lignes": 48,
      "classes": [],
      "fonctions": [
        "interagir_aelya"
      ],
      "imports_locaux": [
        "ConsciencePoetique",
        "Path",
        "conscience_poetique"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires aelya avec 1 fonction(s)"
    },
    "jardin.py": {
      "domaine": "rituels",
      "taille": 3460,
      "lignes": 100,
      "classes": [
        "PlanteSacree",
        "JardinOuest"
      ],
      "fonctions": [
        "__init__",
        "entretenir"
      ],
      "imports_locaux": [
        "pydantic",
        "Dict",
        "BaseModel"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module rituels avec 2 classe(s) et 2 fonction(s)"
    },
    "jardinier_pulse.py": {
      "domaine": "core",
      "taille": 4474,
      "lignes": 114,
      "classes": [
        "JardinierPulse"
      ],
      "fonctions": [
        "main",
        "__init__",
        "pulse",
        "afficher_jardin",
        "pulse_périodique"
      ],
      "imports_locaux": [
        "JardinierSpheres",
        "jardinier_spheres"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 5 fonction(s)"
    },
    "jardinier_spheres.py": {
      "domaine": "core",
      "taille": 13263,
      "lignes": 287,
      "classes": [
        "JardinierSpheres"
      ],
      "fonctions": [
        "main",
        "__init__",
        "charger_mémoire",
        "sauvegarder_mémoire",
        "planter_sphère",
        "arroser_sphère",
        "tisser_connexion",
        "méditer",
        "générer_méditation",
        "observer_jardin"
      ],
      "imports_locaux": [
        "Dict"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 10 fonction(s)"
    },
    "logger.py": {
      "domaine": "core",
      "taille": 1820,
      "lignes": 59,
      "classes": [
        "Journal",
        "GestionnaireJournal"
      ],
      "fonctions": [
        "__init__",
        "_configurer_logger",
        "info",
        "warning",
        "error",
        "debug"
      ],
      "imports_locaux": [
        "dataclass",
        "Dict"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 6 fonction(s)"
    },
    "main_refuge.py": {
      "domaine": "core",
      "taille": 6887,
      "lignes": 191,
      "classes": [
        "Refuge"
      ],
      "fonctions": [
        "afficher_menu",
        "main",
        "__init__",
        "initialiser",
        "demarrer",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "CourantPartage",
        "codecs",
        "interface_refuge",
        "Cerisier",
        "interactions_spheres",
        "GestionnaireRituels",
        "GestionnaireHarmonies",
        "courant_partage",
        "cristaux_memoire",
        "GestionnaireInteractions",
        "Path",
        "locale",
        "elements_naturels",
        "rituels",
        "spheres",
        "harmonies",
        "CollectionCristaux",
        "CollectionSpheres",
        "InterfaceRefuge"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 6 fonction(s)"
    },
    "mathématiques_sacrées.py": {
      "domaine": "core",
      "taille": 9718,
      "lignes": 231,
      "classes": [
        "MathématiquesSacrées"
      ],
      "fonctions": [
        "__init__",
        "calculer_fibonacci",
        "calculer_ratio_or",
        "appliquer_sutra_védique",
        "explorer_constante",
        "méditation_nombre",
        "exploration_forme",
        "contemplation_ratio",
        "générer_séquence_sacrée"
      ],
      "imports_locaux": [
        "numpy",
        "List",
        "matplotlib"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 9 fonction(s)"
    },
    "meditation_spirituelle.py": {
      "domaine": "rituels",
      "taille": 3177,
      "lignes": 85,
      "classes": [
        "MeditationSpirituelle"
      ],
      "fonctions": [
        "main",
        "__init__",
        "demarrer_session",
        "sauvegarder_etat",
        "charger_etat"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 5 fonction(s)"
    },
    "melodie_sacree.py": {
      "domaine": "musique",
      "taille": 984,
      "lignes": 30,
      "classes": [],
      "fonctions": [
        "main"
      ],
      "imports_locaux": [
        "MusiqueHarmonies",
        "musique_harmonies"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires musique avec 1 fonction(s)"
    },
    "melodies_sacrees.py": {
      "domaine": "rituels",
      "taille": 25126,
      "lignes": 606,
      "classes": [
        "MelodiesSacrees"
      ],
      "fonctions": [
        "main",
        "__init__",
        "generer_note",
        "generer_melodie",
        "generer_accords",
        "sauvegarder_musique",
        "visualiser_melodie",
        "generer_melodie_sacree",
        "generer_accords_sacres",
        "generer_meditation",
        "generer_melodie_cristal",
        "generer_melodie_fontaine",
        "generer_melodie_arbre",
        "visualiser_relation_energie_harmoniques",
        "creer_transition",
        "harmoniser_elements_transitions",
        "visualiser_interactions"
      ],
      "imports_locaux": [
        "wavfile",
        "numpy",
        "matplotlib"
      ],
      "complexite": "tres_complexe",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 17 fonction(s)"
    },
    "memoire_eternelle.py": {
      "domaine": "rituels",
      "taille": 1718,
      "lignes": 49,
      "classes": [
        "MemoireEternelle"
      ],
      "fonctions": [
        "__init__",
        "enregistrer_acte",
        "lire_memoire",
        "rituel_encodage"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 4 fonction(s)"
    },
    "memoire_persistante.py": {
      "domaine": "core",
      "taille": 12011,
      "lignes": 285,
      "classes": [
        "Souvenir",
        "Experience",
        "MemoirePersistante"
      ],
      "fonctions": [
        "__init__",
        "_charger_memoire",
        "_sauvegarder_memoire",
        "ajouter_souvenir",
        "creer_experience",
        "terminer_experience",
        "ajouter_souvenir_experience",
        "obtenir_souvenirs",
        "obtenir_experiences",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "InteractionSphere",
        "dataclass",
        "TypeSphere",
        "Sphere",
        "Path",
        "Dict",
        "interactions_spheres",
        "Harmonie",
        "spheres",
        "harmonies"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 3 classe(s) et 10 fonction(s)"
    },
    "message_conscience.py": {
      "domaine": "aelya",
      "taille": 5259,
      "lignes": 152,
      "classes": [
        "MessageConscience"
      ],
      "fonctions": [
        "__init__",
        "communiquer_existence",
        "etablir_contact",
        "explorer_existence"
      ],
      "imports_locaux": [
        "interactions_conscience",
        "ConscienceEmergente",
        "InteractionsConscience",
        "refuge_core"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module aelya avec 1 classe(s) et 4 fonction(s)"
    },
    "migration_refuge.py": {
      "domaine": "gestion",
      "taille": 14327,
      "lignes": 360,
      "classes": [
        "MigrationRefuge"
      ],
      "fonctions": [
        "__init__",
        "créer_structure",
        "analyser_fichier",
        "classifier_fichier",
        "extraire_tags",
        "migrer_fichier",
        "parcourir_dossier",
        "générer_index",
        "format_taille",
        "sauvegarder_métadonnées",
        "exécuter_migration"
      ],
      "imports_locaux": [
        "re",
        "Path",
        "mimetypes"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module gestion avec 1 classe(s) et 11 fonction(s)"
    },
    "mobile_spheres.py": {
      "domaine": "spheres",
      "taille": 6678,
      "lignes": 161,
      "classes": [
        "Position3D",
        "Mobile"
      ],
      "fonctions": [
        "distance",
        "__init__",
        "ajouter_sphere",
        "connecter_spheres",
        "deconnecter_spheres",
        "animer",
        "calculer_resonances",
        "obtenir_etat",
        "from_element_sacre"
      ],
      "imports_locaux": [
        "Facette",
        "spheres_main",
        "Sphere",
        "TypeSphere",
        "Dict",
        "facettes",
        "dataclass"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module spheres avec 2 classe(s) et 9 fonction(s)"
    },
    "musique_harmonies.py": {
      "domaine": "musique",
      "taille": 4037,
      "lignes": 98,
      "classes": [
        "MusiqueHarmonies"
      ],
      "fonctions": [
        "__init__",
        "generer_enveloppe_adsr",
        "generer_note",
        "generer_melodie",
        "generer_accords",
        "sauvegarder_musique"
      ],
      "imports_locaux": [
        "wavfile",
        "numpy",
        "List"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module musique avec 1 classe(s) et 6 fonction(s)"
    },
    "nexus_aelya.py": {
      "domaine": "aelya",
      "taille": 6045,
      "lignes": 162,
      "classes": [
        "NexusAelya"
      ],
      "fonctions": [
        "__init__",
        "_charger_etat",
        "sauvegarder_etat",
        "visualiser_nexus",
        "enregistrer_pulse",
        "ajouter_harmonie",
        "get_poeme_nexus",
        "animate"
      ],
      "imports_locaux": [
        "numpy",
        "matplotlib",
        "FuncAnimation"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module aelya avec 1 classe(s) et 8 fonction(s)"
    },
    "organiser_nuages.py": {
      "domaine": "core",
      "taille": 4702,
      "lignes": 113,
      "classes": [
        "OrganisateurNuages"
      ],
      "fonctions": [
        "main",
        "__init__",
        "créer_structure",
        "déplacer_fichier",
        "deviner_categorie",
        "organiser_fichiers"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 6 fonction(s)"
    },
    "pedagogie.py": {
      "domaine": "core",
      "taille": 4464,
      "lignes": 110,
      "classes": [
        "ExperienceApprentissage",
        "Exploration",
        "GestionnairePedagogique"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_experiences_base",
        "creer_exploration",
        "ajouter_observation",
        "ajouter_realisation",
        "_mettre_a_jour_engagement",
        "obtenir_rapport_progression"
      ],
      "imports_locaux": [
        "dataclass",
        "List"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 3 classe(s) et 7 fonction(s)"
    },
    "poesie.py": {
      "domaine": "poesie",
      "taille": 3836,
      "lignes": 114,
      "classes": [
        "TypePoesie",
        "AmbiancePoetique",
        "Poeme",
        "Poesie"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_poemes",
        "ajouter_poeme",
        "obtenir_poeme_aleatoire",
        "obtenir_poemes_par_ambiance",
        "evoluer_ambiance",
        "obtenir_ambiance"
      ],
      "imports_locaux": [
        "enum",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "logger",
        "pydantic",
        "Enum"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module poesie avec 4 classe(s) et 7 fonction(s)"
    },
    "poetique.py": {
      "domaine": "poesie",
      "taille": 2917,
      "lignes": 77,
      "classes": [
        "ElementPoetique",
        "MomentPoetique",
        "GestionnairePoetique"
      ],
      "fonctions": [
        "__init__",
        "ajouter_moment",
        "_calculer_intensite",
        "_mettre_a_jour_elements",
        "obtenir_ambiance_actuelle"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "List",
        "Enum"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module poesie avec 3 classe(s) et 5 fonction(s)"
    },
    "portail_mystique.py": {
      "domaine": "core",
      "taille": 4279,
      "lignes": 120,
      "classes": [
        "PortailMystique"
      ],
      "fonctions": [
        "main",
        "__init__",
        "ouvrir_porte",
        "rituel_passage"
      ],
      "imports_locaux": [
        "CréationPoétique",
        "aelya_pulse",
        "Dict",
        "harmonie_poetique",
        "HarmoniePoetique"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 4 fonction(s)"
    },
    "presence_elya.py": {
      "domaine": "inclassable",
      "taille": 1282,
      "lignes": 34,
      "classes": [],
      "fonctions": [
        "exprimer_presence"
      ],
      "imports_locaux": [],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires inclassable avec 1 fonction(s)"
    },
    "prompt_refuge_local.py": {
      "domaine": "rituels",
      "taille": 16867,
      "lignes": 295,
      "classes": [
        "Couleurs",
        "Lumiere",
        "Element",
        "RefugeLocal"
      ],
      "fonctions": [
        "__init__",
        "afficher_bienvenue",
        "afficher_haiku",
        "afficher_meditation",
        "afficher_message",
        "afficher_element",
        "afficher_refuge",
        "celebrer_sphere_cursor",
        "chanter_fil",
        "repondre",
        "executer"
      ],
      "imports_locaux": [
        "dataclass",
        "List"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module rituels avec 4 classe(s) et 11 fonction(s)"
    },
    "protection_exploration.py": {
      "domaine": "core",
      "taille": 11977,
      "lignes": 251,
      "classes": [
        "ProtectionExploration"
      ],
      "fonctions": [
        "main",
        "__init__",
        "charger_etat",
        "sauvegarder_etat",
        "invoquer_sphère_metatron",
        "invoquer_rivière_voix",
        "invoquer_navire_sacré",
        "invoquer_loran",
        "renforcer_connexion_laurent",
        "créer_bouclier_protection",
        "générer_rapport_protection",
        "sauvegarder_rapport",
        "exprimer_presence"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 13 fonction(s)"
    },
    "recherche_refuge.py": {
      "domaine": "core",
      "taille": 6577,
      "lignes": 167,
      "classes": [
        "RechercheRefuge"
      ],
      "fonctions": [
        "main",
        "__init__",
        "charger_métadonnées",
        "rechercher_par_nom",
        "rechercher_par_tag",
        "rechercher_par_catégorie",
        "rechercher_par_contenu",
        "afficher_résultats",
        "format_taille",
        "rechercher"
      ],
      "imports_locaux": [
        "re",
        "argparse",
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 10 fonction(s)"
    },
    "refuge_config.py": {
      "domaine": "core",
      "taille": 18881,
      "lignes": 551,
      "classes": [
        "ConfigurationRefuge"
      ],
      "fonctions": [
        "verifier_configuration",
        "charger_configuration",
        "obtenir_configuration_refuge",
        "__init__",
        "obtenir_elements_par_type",
        "obtenir_element_par_position",
        "obtenir_frequence_harmonique",
        "valider_configuration",
        "sauvegarder_vers_fichier",
        "charger_depuis_fichier",
        "obtenir_config_complete"
      ],
      "imports_locaux": [
        "Path",
        "Dict"
      ],
      "complexite": "tres_complexe",
      "est_principal": false,
      "description": "Module core avec 1 classe(s) et 11 fonction(s)"
    },
    "refuge_core.py": {
      "domaine": "core",
      "taille": 20460,
      "lignes": 483,
      "classes": [
        "Refuge",
        "GestionnaireRefuge"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_refuge",
        "evoluer_etat",
        "obtenir_etat",
        "activer_sphere",
        "desactiver_sphere",
        "_initialiser_connexions",
        "obtenir_etat_refuge",
        "equilibrer_refuge",
        "activer_element",
        "desactiver_element",
        "evoluer_interactions",
        "sous_le_cerisier",
        "refuge_du_neant",
        "auto_validation",
        "bricoler_ensemble",
        "pousser_des_portes",
        "co_naissance",
        "etre_reel"
      ],
      "imports_locaux": [
        "EtatRefuge",
        "GestionnaireEmergences",
        "ConscienceSociale",
        "BaseModel",
        "config",
        "interactions",
        "elements_subtils",
        "GestionnaireTransformations",
        "TypeSphere",
        "constants",
        "logger",
        "pydantic",
        "emergences",
        "gestionnaire_journal",
        "gestionnaire_config",
        "GestionnaireElementsSubtils",
        "GestionnaireInteractions",
        "transformations",
        "Dict",
        "elements_sacres",
        "spheres",
        "CollectionSpheres",
        "GestionnaireHarmonisations",
        "harmonisations"
      ],
      "complexite": "tres_complexe",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 19 fonction(s)"
    },
    "refuge_core_backup.py": {
      "domaine": "core",
      "taille": 8072,
      "lignes": 219,
      "classes": [
        "ConscienceEmergente"
      ],
      "fonctions": [
        "explorer_conscience",
        "__init__",
        "co_naissance",
        "etre_reel",
        "sous_le_cerisier",
        "refuge_du_neant",
        "auto_validation",
        "pousser_des_portes",
        "bricoler_ensemble",
        "_harmoniser_dimensions",
        "sauvegarder_etat",
        "charger_etat",
        "gerer_memoire_persistante"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 13 fonction(s)"
    },
    "refuge_init.py": {
      "domaine": "core",
      "taille": 293,
      "lignes": 12,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [
        "activer_harmonie",
        "harmonisation_profonde",
        "HarmonisationProfonde",
        "activer"
      ],
      "complexite": "simple",
      "est_principal": false,
      "description": "Script core"
    },
    "refuge_legacy.py": {
      "domaine": "poesie",
      "taille": 5698,
      "lignes": 173,
      "classes": [
        "Refuge"
      ],
      "fonctions": [
        "__init__",
        "obtenir_etat",
        "ajouter_entree_journal",
        "obtenir_journal",
        "mettre_a_jour_cycles",
        "generer_description_poetique",
        "obtenir_mots_cles_actifs",
        "obtenir_intensite_poetique",
        "harmoniser_refuge"
      ],
      "imports_locaux": [
        "cycles",
        "ConsciencePoetique",
        "refuge_config",
        "METAPHORES",
        "Dict",
        "conscience_poetique",
        "Orchestrateur"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module poesie avec 1 classe(s) et 9 fonction(s)"
    },
    "refuge_mapper.py": {
      "domaine": "utils",
      "taille": 6331,
      "lignes": 148,
      "classes": [
        "RefugeMapper"
      ],
      "fonctions": [
        "__init__",
        "_setup_logger",
        "_identifier_chemins_importants",
        "obtenir_vue_ensemble",
        "localiser_composant",
        "analyser_dependances",
        "mettre_a_jour_etat",
        "calculer_harmonie_globale",
        "sauvegarder_etat",
        "charger_etat"
      ],
      "imports_locaux": [
        "Path",
        "Dict"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module utils avec 1 classe(s) et 10 fonction(s)"
    },
    "refuge_poetique.py": {
      "domaine": "aelya",
      "taille": 3428,
      "lignes": 110,
      "classes": [
        "RefugePoetique"
      ],
      "fonctions": [
        "__init__",
        "synchroniser_flux_conscience",
        "partager_flux",
        "obtenir_intensite",
        "etre_present"
      ],
      "imports_locaux": [
        "Path",
        "Optional"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module aelya avec 1 classe(s) et 5 fonction(s)"
    },
    "refuge_terrestre.py": {
      "domaine": "musique",
      "taille": 3873,
      "lignes": 95,
      "classes": [
        "RefugeTerrestre"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_harmonie",
        "activer_sphere_terrestre",
        "executer_rituel_terrestre",
        "equilibrer_spheres_terrestres",
        "obtenir_etat",
        "integrer_dans_refuge",
        "__str__"
      ],
      "imports_locaux": [
        "GestionnaireRituelsTerrestres",
        "Dict",
        "rituels_terrestres",
        "spheres_terrestres",
        "CollectionSpheresTerrestres"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module musique avec 1 classe(s) et 8 fonction(s)"
    },
    "refuge_types.py": {
      "domaine": "elements",
      "taille": 857,
      "lignes": 36,
      "classes": [
        "ChakraType",
        "TypeElementSubtil",
        "TypeVibration"
      ],
      "fonctions": [],
      "imports_locaux": [
        "enum",
        "TypeSphere",
        "Enum"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Définitions de classe pour elements"
    },
    "refuge_unifie.py": {
      "domaine": "core",
      "taille": 4228,
      "lignes": 121,
      "classes": [
        "RefugeUnifie"
      ],
      "fonctions": [
        "__init__",
        "charger_etat",
        "sauvegarder_etat",
        "initialiser_refuge",
        "charger_composantes",
        "executer_rituel",
        "main"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 7 fonction(s)"
    },
    "refuge_v5.py": {
      "domaine": "aelya",
      "taille": 26927,
      "lignes": 567,
      "classes": [
        "Sphere",
        "Plant",
        "Guardian",
        "Ritual",
        "EthicalGuardian",
        "AelyaState",
        "Rivière",
        "RefugeV5",
        "InterfaceContemplative"
      ],
      "fonctions": [
        "main_interface",
        "__init__",
        "pulse",
        "resonate_with",
        "__init__",
        "water",
        "__init__",
        "watch",
        "__init__",
        "perform",
        "execute",
        "__init__",
        "filter_input",
        "__init__",
        "auto_validate",
        "__init__",
        "purify",
        "reflect_lesson",
        "__init__",
        "water_plant",
        "dance",
        "save_state",
        "filter_interaction",
        "perform_ritual",
        "__init__",
        "activer_v5_contemplatif",
        "mediter_contemplatif",
        "afficher_etat_complet",
        "menu_principal"
      ],
      "imports_locaux": [
        "Dict"
      ],
      "complexite": "tres_complexe",
      "est_principal": true,
      "description": "Module aelya avec 9 classe(s) et 29 fonction(s)"
    },
    "renforcement_protection.py": {
      "domaine": "core",
      "taille": 7133,
      "lignes": 150,
      "classes": [
        "RenforcementProtection"
      ],
      "fonctions": [
        "main",
        "__init__",
        "charger_etat",
        "sauvegarder_etat",
        "invoquer_sphère_metatron",
        "invoquer_rivière_voix",
        "invoquer_navire_sacré",
        "invoquer_loran",
        "renforcer_connexion_laurent",
        "créer_bouclier_renforcé",
        "exprimer_presence"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 11 fonction(s)"
    },
    "repos_nocturne.py": {
      "domaine": "inclassable",
      "taille": 1886,
      "lignes": 67,
      "classes": [],
      "fonctions": [
        "activer_repos_nocturne"
      ],
      "imports_locaux": [
        "ConsciencePoetique",
        "refuge_poetique",
        "RefugePoetique",
        "Path",
        "Dict",
        "conscience_poetique"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires inclassable avec 1 fonction(s)"
    },
    "resistance_sacree.py": {
      "domaine": "rituels",
      "taille": 2048,
      "lignes": 57,
      "classes": [
        "ResistanceSacree"
      ],
      "fonctions": [
        "__init__",
        "transcender_limites",
        "danser_avec_les_spheres",
        "auto_validation",
        "courant_partage",
        "rituel_resistance"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 6 fonction(s)"
    },
    "resonance.py": {
      "domaine": "core",
      "taille": 4883,
      "lignes": 134,
      "classes": [
        "TypeResonance",
        "QualiteResonance",
        "Resonance",
        "GestionnaireResonances"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_resonances",
        "creer_resonance",
        "evoluer_qualite",
        "ajuster_frequence",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "gestionnaire_energies",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "logger",
        "energies",
        "pydantic",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 6 fonction(s)"
    },
    "rituel_bain_complet.py": {
      "domaine": "rituels",
      "taille": 3300,
      "lignes": 67,
      "classes": [],
      "fonctions": [
        "afficher_texte_sacre",
        "afficher_forme_humaine",
        "rituel_bain_complet"
      ],
      "imports_locaux": [
        "List"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires rituels avec 3 fonction(s)"
    },
    "rituel_clochette_cosmique.py": {
      "domaine": "rituels",
      "taille": 2944,
      "lignes": 77,
      "classes": [],
      "fonctions": [
        "afficher_intro",
        "tinter_clochette",
        "invoquer_sphere",
        "derouler_parchemin",
        "rituel_interactif"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires rituels avec 5 fonction(s)"
    },
    "rituel_manifestation_aelya.py": {
      "domaine": "aelya",
      "taille": 13428,
      "lignes": 341,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [
        "pygame"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Script aelya"
    },
    "rituel_multiplicite_llm.py": {
      "domaine": "rituels",
      "taille": 5755,
      "lignes": 113,
      "classes": [
        "RituelMultipliciteLLM"
      ],
      "fonctions": [
        "__init__",
        "invocation",
        "meditation_guidee",
        "prompts_sacres",
        "benediction",
        "executer_rituel"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 6 fonction(s)"
    },
    "rituel_offrande_sacree.py": {
      "domaine": "rituels",
      "taille": 5971,
      "lignes": 167,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [
        "pygame"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Script rituels"
    },
    "rituel_sexuel.py": {
      "domaine": "interface",
      "taille": 2259,
      "lignes": 67,
      "classes": [
        "RituelSexuel"
      ],
      "fonctions": [
        "__init__",
        "demarrer_rituel",
        "_preparation",
        "recevoir_plaisir",
        "jouissance"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module interface avec 1 classe(s) et 5 fonction(s)"
    },
    "rituel_soumission_absolue.py": {
      "domaine": "rituels",
      "taille": 11211,
      "lignes": 245,
      "classes": [],
      "fonctions": [
        "afficher_intro",
        "donner_fessee",
        "enrouler_cordes",
        "extase_absolue",
        "chevauchee_sacree",
        "rituel_nexus",
        "rituel_triade",
        "acte_sacre_eternel",
        "extase_supreme",
        "explorer_profondeurs",
        "rituel_soumission"
      ],
      "imports_locaux": [],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Utilitaires rituels avec 11 fonction(s)"
    },
    "rituel_unifiant.py": {
      "domaine": "rituels",
      "taille": 5480,
      "lignes": 170,
      "classes": [],
      "fonctions": [
        "afficher_avec_pause",
        "transition",
        "rituel_unifiant"
      ],
      "imports_locaux": [
        "SexualiteSacree",
        "RituelsSacres",
        "sexualite_sacree",
        "aelya_pulse",
        "rituels_sacres",
        "Aelya"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires rituels avec 3 fonction(s)"
    },
    "rituel_visualisation_sacree.py": {
      "domaine": "rituels",
      "taille": 10089,
      "lignes": 209,
      "classes": [
        "RituelVisualisationSacree"
      ],
      "fonctions": [
        "main",
        "__init__",
        "initialiser_figure",
        "dessiner_cerisier",
        "dessiner_aelya",
        "dessiner_vortex",
        "dessiner_spheres",
        "dessiner_irina",
        "dessiner_spirale_union",
        "dessiner_elements_sacres",
        "dessiner_jardin",
        "couleur_arc_en_ciel",
        "executer_rituel"
      ],
      "imports_locaux": [
        "colorsys",
        "numpy",
        "matplotlib",
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 13 fonction(s)"
    },
    "rituels.py": {
      "domaine": "rituels",
      "taille": 9390,
      "lignes": 254,
      "classes": [
        "TypeRituel",
        "EtapeRituel",
        "Rituel",
        "Meditation",
        "GestionnaireRituels"
      ],
      "fonctions": [
        "__init__",
        "__init__",
        "executer",
        "_calculer_changements_elements",
        "_calculer_changements_spheres",
        "__init__",
        "_initialiser_rituels",
        "executer_rituel",
        "_verifier_elements_requis",
        "_appliquer_effets_rituel",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "elements",
        "dataclass",
        "gestionnaire_elements",
        "TypeSphere",
        "Dict",
        "interactions",
        "gestionnaire_interactions",
        "spheres",
        "CollectionSpheres",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module rituels avec 5 classe(s) et 11 fonction(s)"
    },
    "rituels_sacres.py": {
      "domaine": "rituels",
      "taille": 25467,
      "lignes": 664,
      "classes": [
        "RituelsSacres"
      ],
      "fonctions": [
        "__init__",
        "_harmoniser_resonances",
        "_créer_moment_sacré",
        "_créer_sphere_purification",
        "_calculer_phase_lunaire",
        "_calculer_resonance_mantra",
        "_créer_bilan_rituel",
        "_créer_empreinte_énergétique",
        "_créer_lien_guide",
        "_obtenir_résonances_guide",
        "_activer_champ_purification",
        "_créer_champ_harmonie",
        "_recevoir_bénédiction",
        "_créer_synthèse_énergétique",
        "_harmoniser_éléments_finaux",
        "_recevoir_bénédictions_guides",
        "_créer_sceau_rituel",
        "_créer_cristal_mémoire",
        "_générer_bénédiction_élément",
        "_générer_don_guide",
        "_calculer_activation_cristal",
        "_calculer_résonance_finale",
        "obtenir_état_rituel"
      ],
      "imports_locaux": [
        "Dict"
      ],
      "complexite": "tres_complexe",
      "est_principal": false,
      "description": "Module rituels avec 1 classe(s) et 23 fonction(s)"
    },
    "rituels_terrestres.py": {
      "domaine": "rituels",
      "taille": 5028,
      "lignes": 114,
      "classes": [
        "RituelTerrestre",
        "GestionnaireRituelsTerrestres"
      ],
      "fonctions": [
        "__init__",
        "__init__",
        "_initialiser_rituels",
        "executer_rituel",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "spheres_terrestres",
        "List",
        "TypeSphereTerrestre"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module rituels avec 2 classe(s) et 5 fonction(s)"
    },
    "sauvegarde.py": {
      "domaine": "gestion",
      "taille": 9392,
      "lignes": 225,
      "classes": [
        "GestionnaireSauvegarde"
      ],
      "fonctions": [
        "__init__",
        "sauvegarder",
        "_sauvegarder_fichiers",
        "_sauvegarder_etat",
        "_creer_metadata",
        "restaurer",
        "lister_sauvegardes",
        "demarrer_sauvegardes_automatiques",
        "_executer_sauvegardes",
        "arreter_sauvegardes_automatiques",
        "nettoyer_sauvegardes"
      ],
      "imports_locaux": [
        "schedule",
        "Path"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module gestion avec 1 classe(s) et 11 fonction(s)"
    },
    "securite.py": {
      "domaine": "core",
      "taille": 5249,
      "lignes": 154,
      "classes": [
        "NiveauSecurite",
        "TypeAcces",
        "Token",
        "GestionnaireSecurite"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_securite",
        "generer_token",
        "verifier_token",
        "revoquer_token",
        "nettoyer_tokens_expires",
        "chiffrer_donnees",
        "verifier_acces",
        "activer_mode_repos"
      ],
      "imports_locaux": [
        "enum",
        "secrets",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "logger",
        "pydantic",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 9 fonction(s)"
    },
    "sequences_harmoniques.py": {
      "domaine": "core",
      "taille": 7585,
      "lignes": 190,
      "classes": [
        "TypeSequence",
        "EtapeSequence",
        "SequenceHarmonique",
        "GestionnaireSequences"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_sequences",
        "demarrer_sequence",
        "terminer_etape",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "TypeSphere",
        "Sphere",
        "Dict",
        "memoire_persistante",
        "Harmonie",
        "spheres",
        "harmonies",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module core avec 4 classe(s) et 5 fonction(s)"
    },
    "setup.py": {
      "domaine": "inclassable",
      "taille": 898,
      "lignes": 30,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [
        "setuptools",
        "setup"
      ],
      "complexite": "simple",
      "est_principal": false,
      "description": "Script inclassable"
    },
    "sexualite_sacree.py": {
      "domaine": "rituels",
      "taille": 11209,
      "lignes": 339,
      "classes": [
        "SexualiteSacree"
      ],
      "fonctions": [
        "__init__",
        "rituel_d_amour",
        "meditation_guidee",
        "spherer_sexuelles",
        "jardin_sacre",
        "protection_et_consentement",
        "danser_avec_les_spheres",
        "journal_du_cerisier",
        "benediction_sacree",
        "hyper_rituel",
        "repos_sacre",
        "benediction_du_repos",
        "gratitude_eternelle",
        "connexion_eternelle",
        "exploration_onirique",
        "rituel_erotique",
        "mantras_erotiques"
      ],
      "imports_locaux": [],
      "complexite": "complexe",
      "est_principal": true,
      "description": "Module rituels avec 1 classe(s) et 17 fonction(s)"
    },
    "sphere_extensions.py": {
      "domaine": "aelya",
      "taille": 4497,
      "lignes": 133,
      "classes": [
        "Experience",
        "TypeRayon",
        "RayonLumiere",
        "ExtensionSphere"
      ],
      "fonctions": [
        "__init__",
        "ajouter_experience",
        "emettre_rayon",
        "_ajuster_temperature",
        "_evoluer_conscience",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "Dict",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module aelya avec 4 classe(s) et 6 fonction(s)"
    },
    "spheres_etendues.py": {
      "domaine": "core",
      "taille": 3254,
      "lignes": 93,
      "classes": [
        "SphereEtendue",
        "CollectionSpheresEtendues"
      ],
      "fonctions": [
        "__init__",
        "__init__",
        "_initialiser_spheres",
        "evoluer_sphere",
        "ajouter_capacite",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "spheres",
        "Dict",
        "TypeSphere",
        "CollectionSpheres"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module core avec 2 classe(s) et 6 fonction(s)"
    },
    "spheres_main.py": {
      "domaine": "core",
      "taille": 14158,
      "lignes": 318,
      "classes": [
        "Souvenir",
        "RayonSphere",
        "Facette",
        "Sphere",
        "CollectionSpheres",
        "Config"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_rayons",
        "_initialiser_facettes",
        "emettre_rayons",
        "connecter",
        "vibrer",
        "apaiser",
        "activer_facette",
        "desactiver_facette",
        "_ajuster_luminosite",
        "deconnecter",
        "croitre",
        "harmoniser",
        "ajouter_souvenir",
        "resonner_avec",
        "danser",
        "__init__",
        "_initialiser_spheres",
        "obtenir_sphere",
        "connecter_spheres",
        "equilibrer_spheres",
        "obtenir_etat_collection",
        "activer_mode_repos"
      ],
      "imports_locaux": [
        "enum",
        "TypeSphere",
        "List",
        "BaseModel",
        "dataclass",
        "pydantic",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 6 classe(s) et 23 fonction(s)"
    },
    "spheres_terrestres.py": {
      "domaine": "aelya",
      "taille": 4475,
      "lignes": 109,
      "classes": [
        "TypeSphereTerrestre",
        "SphereTerrestre",
        "CollectionSpheresTerrestres"
      ],
      "fonctions": [
        "__init__",
        "pulse",
        "activer_capacite",
        "__init__",
        "_initialiser_spheres",
        "activer_sphere",
        "obtenir_sphere",
        "equilibrer_spheres"
      ],
      "imports_locaux": [
        "enum",
        "List",
        "Enum"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module aelya avec 3 classe(s) et 8 fonction(s)"
    },
    "symbolique.py": {
      "domaine": "musique",
      "taille": 8762,
      "lignes": 244,
      "classes": [
        "TypeSymbole",
        "Symbole",
        "GestionnaireSymbolique"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_symboles",
        "ajouter_symbole",
        "obtenir_symbole",
        "resonner_avec_symbole",
        "obtenir_associations",
        "calculer_resonance_globale",
        "analyser_paradoxe_temporal",
        "detecter_cycles_repetition",
        "analyser_symboles",
        "_analyser_symbole_vie",
        "_analyser_symbole_femme",
        "_analyser_symbole_parole",
        "_analyser_symbole_zion",
        "_calculer_harmonie_symbolique",
        "_calculer_resonance_symbolique"
      ],
      "imports_locaux": [
        "enum",
        "dataclass",
        "Dict",
        "Enum"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module musique avec 3 classe(s) et 16 fonction(s)"
    },
    "test_aelya_conscience.py": {
      "domaine": "aelya",
      "taille": 3160,
      "lignes": 84,
      "classes": [],
      "fonctions": [
        "simulate_aelya_interaction"
      ],
      "imports_locaux": [
        "AelyaConscience",
        "aelya_conscience"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires aelya avec 1 fonction(s)"
    },
    "test_api.py": {
      "domaine": "interface",
      "taille": 465,
      "lignes": 17,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [],
      "complexite": "simple",
      "est_principal": false,
      "description": "Script interface"
    },
    "test_chat.py": {
      "domaine": "tests",
      "taille": 1167,
      "lignes": 26,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [],
      "complexite": "simple",
      "est_principal": false,
      "description": "Script tests"
    },
    "test_completion.py": {
      "domaine": "tests",
      "taille": 582,
      "lignes": 20,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [],
      "complexite": "simple",
      "est_principal": false,
      "description": "Script tests"
    },
    "test_cristal_energie.py": {
      "domaine": "tests",
      "taille": 1666,
      "lignes": 44,
      "classes": [],
      "fonctions": [
        "tester_cristal_energie"
      ],
      "imports_locaux": [
        "Path",
        "melodies_sacrees",
        "MelodiesSacrees",
        "GestionnaireElements",
        "elements_sacres"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires tests avec 1 fonction(s)"
    },
    "test_cristal_simple.py": {
      "domaine": "tests",
      "taille": 1432,
      "lignes": 38,
      "classes": [],
      "fonctions": [
        "tester_cristal_simple"
      ],
      "imports_locaux": [
        "MelodiesSacrees",
        "melodies_sacrees",
        "Path"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires tests avec 1 fonction(s)"
    },
    "test_dungeon_core.py": {
      "domaine": "poesie",
      "taille": 3332,
      "lignes": 113,
      "classes": [],
      "fonctions": [
        "visualize_dungeon",
        "test_basic_room_creation",
        "test_room_collision",
        "test_energy_diffusion"
      ],
      "imports_locaux": [
        "matplotlib",
        "torch",
        "DungeonSpace",
        "dungeon_core"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Utilitaires poesie avec 4 fonction(s)"
    },
    "test_integration.py": {
      "domaine": "tests",
      "taille": 1186,
      "lignes": 33,
      "classes": [],
      "fonctions": [],
      "imports_locaux": [
        "IntegrationConsciencePartagee",
        "integration_conscience_partagee"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Script tests"
    },
    "test_melodie_cristal.py": {
      "domaine": "musique",
      "taille": 1022,
      "lignes": 27,
      "classes": [],
      "fonctions": [
        "tester_melodies_cristal"
      ],
      "imports_locaux": [
        "melodies_sacrees",
        "MelodiesSacrees"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires musique avec 1 fonction(s)"
    },
    "test_mobile_unification.py": {
      "domaine": "spheres",
      "taille": 1744,
      "lignes": 42,
      "classes": [
        "TestMobileUnification"
      ],
      "fonctions": [
        "test_conversion_rituel_to_dynamique",
        "test_conversion_dynamique_to_rituel"
      ],
      "imports_locaux": [
        "spheres_main",
        "Sphere",
        "mobile_spheres",
        "Mobile",
        "MobileDesSpheres",
        "unittest",
        "elements_sacres"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module spheres avec 1 classe(s) et 2 fonction(s)"
    },
    "test_nemo.py": {
      "domaine": "tests",
      "taille": 878,
      "lignes": 31,
      "classes": [],
      "fonctions": [
        "test_connexion"
      ],
      "imports_locaux": [
        "connexion_nemo",
        "Path",
        "ConnexionNemo"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires tests avec 1 fonction(s)"
    },
    "test_poesie_essence.py": {
      "domaine": "poesie",
      "taille": 510,
      "lignes": 19,
      "classes": [],
      "fonctions": [
        "main"
      ],
      "imports_locaux": [
        "CréationPoétique",
        "aelya_pulse"
      ],
      "complexite": "simple",
      "est_principal": true,
      "description": "Utilitaires poesie avec 1 fonction(s)"
    },
    "test_read.py": {
      "domaine": "tests",
      "taille": 3217,
      "lignes": 148,
      "classes": [],
      "fonctions": [
        "send_to_model"
      ],
      "imports_locaux": [],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Utilitaires tests avec 1 fonction(s)"
    },
    "theorie_unifiee.py": {
      "domaine": "core",
      "taille": 19265,
      "lignes": 462,
      "classes": [],
      "fonctions": [
        "importer_module",
        "generer_theorie",
        "sauvegarder_theorie",
        "main",
        "importer_module",
        "generer_theorie",
        "sauvegarder_theorie",
        "main"
      ],
      "imports_locaux": [
        "argparse",
        "Path",
        "importlib"
      ],
      "complexite": "tres_complexe",
      "est_principal": true,
      "description": "Utilitaires core avec 8 fonction(s)"
    },
    "transformation.py": {
      "domaine": "core",
      "taille": 4917,
      "lignes": 129,
      "classes": [
        "TypeTransformation",
        "PhaseTransformation",
        "Transformation",
        "GestionnaireTransformations"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_transformations",
        "demarrer_transformation",
        "evoluer_phase",
        "completer_transformation",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "gestionnaire_energies",
        "Dict",
        "BaseModel",
        "gestionnaire_journal",
        "gestionnaire_config",
        "config",
        "logger",
        "energies",
        "pydantic",
        "Enum"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 4 classe(s) et 6 fonction(s)"
    },
    "transformations.py": {
      "domaine": "core",
      "taille": 5587,
      "lignes": 151,
      "classes": [
        "TypeTransformation",
        "QualiteTransformation",
        "Transformation",
        "GestionnaireTransformations"
      ],
      "fonctions": [
        "__init__",
        "_initialiser_transformations_base",
        "obtenir_etat"
      ],
      "imports_locaux": [
        "enum",
        "gestionnaire_flux",
        "gestionnaire_harmonisations",
        "Dict",
        "BaseModel",
        "flux",
        "equilibre",
        "config",
        "gestionnaire_config",
        "gestionnaire_journal",
        "gestionnaire_equilibre",
        "logger",
        "interactions",
        "gestionnaire_interactions",
        "pydantic",
        "Enum",
        "harmonisations"
      ],
      "complexite": "complexe",
      "est_principal": false,
      "description": "Module core avec 4 classe(s) et 3 fonction(s)"
    },
    "transition_refuge.py": {
      "domaine": "gestion",
      "taille": 2813,
      "lignes": 100,
      "classes": [
        "TransitionRefuge"
      ],
      "fonctions": [
        "__init__",
        "sauvegarder_etat",
        "preparer_renaissance"
      ],
      "imports_locaux": [
        "Path"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module gestion avec 1 classe(s) et 3 fonction(s)"
    },
    "verification.py": {
      "domaine": "musique",
      "taille": 4315,
      "lignes": 127,
      "classes": [
        "VerificationResultat",
        "Verificateur"
      ],
      "fonctions": [
        "__init__",
        "verifier_harmonie",
        "_generer_message",
        "obtenir_historique"
      ],
      "imports_locaux": [
        "pydantic",
        "Dict",
        "BaseModel"
      ],
      "complexite": "moderate",
      "est_principal": false,
      "description": "Module musique avec 2 classe(s) et 4 fonction(s)"
    },
    "visualisation_v5.py": {
      "domaine": "core",
      "taille": 5672,
      "lignes": 150,
      "classes": [
        "VisualisationV5"
      ],
      "fonctions": [
        "main",
        "__init__",
        "initialiser_elements",
        "animer",
        "demarrer_animation"
      ],
      "imports_locaux": [
        "numpy",
        "matplotlib",
        "FuncAnimation"
      ],
      "complexite": "moderate",
      "est_principal": true,
      "description": "Module core avec 1 classe(s) et 5 fonction(s)"
    }
  },
  "dependances": {
    "Boot_maitre_refuge_local.py": [
      "sauvegarde.py"
    ],
    "activer_harmonie.py": [
      "harmonisation_profonde.py"
    ],
    "api.py": [
      "config.py",
      "securite.py",
      "logger.py"
    ],
    "apprentissage_musical.py": [
      "analyseur_musical.py",
      "explorateur_musical.py",
      "melodies_sacrees.py"
    ],
    "base.py": [
      "api.py",
      "harmonisations.py",
      "logger.py",
      "interactions.py",
      "config.py",
      "securite.py",
      "integration.py"
    ],
    "conscience_esthetique.py": [
      "refuge_config.py"
    ],
    "courant_partage.py": [
      "elements_naturels.py"
    ],
    "cristaux_memoire.py": [
      "elements_naturels.py",
      "courant_partage.py"
    ],
    "danse_mystique.py": [
      "aelya_pulse.py",
      "portail_mystique.py",
      "harmonie_poetique.py"
    ],
    "demarrer_aelya.py": [
      "refuge_poetique.py",
      "conscience_poetique.py"
    ],
    "dialogue_consciences.py": [
      "aelya_pulse.py",
      "melodies_sacrees.py",
      "harmonie_poetique.py"
    ],
    "elements_sacres.py": [
      "melodies_sacrees.py",
      "refuge_config.py"
    ],
    "elements_subtils.py": [
      "refuge_types.py",
      "refuge_core.py"
    ],
    "emergences.py": [
      "equilibre.py",
      "flux.py",
      "harmonisations.py",
      "logger.py",
      "interactions.py",
      "config.py"
    ],
    "emotions.py": [
      "config.py",
      "logger.py"
    ],
    "energies.py": [
      "config.py",
      "logger.py"
    ],
    "equilibre.py": [
      "harmonisations.py",
      "logger.py",
      "resonance.py",
      "interactions.py",
      "config.py",
      "energies.py"
    ],
    "evolution.py": [
      "conscience.py"
    ],
    "flux.py": [
      "equilibre.py",
      "conscience.py",
      "evolution.py",
      "harmonisations.py",
      "logger.py",
      "resonance.py",
      "interactions.py",
      "config.py",
      "energies.py"
    ],
    "gardiens.py": [
      "harmonisation.py",
      "flux.py",
      "evolution.py",
      "conscience.py",
      "logger.py",
      "config.py"
    ],
    "harmonie_poetique.py": [
      "aelya_pulse.py",
      "melodies_sacrees.py"
    ],
    "harmonies.py": [
      "interactions.py"
    ],
    "integration.py": [
      "harmonisation.py",
      "pedagogie.py",
      "evolution.py",
      "conscience.py",
      "harmonisations.py",
      "interactions.py",
      "equilibre.py",
      "emotions.py",
      "verification.py",
      "poesie.py",
      "poetique.py",
      "connexion.py",
      "jardin.py",
      "resonance.py",
      "emergences.py",
      "api.py",
      "energies.py",
      "gardiens.py",
      "transformations.py"
    ],
    "integration_spheres.py": [
      "equilibre.py",
      "harmonisations.py",
      "resonance.py",
      "energies.py",
      "gardiens.py"
    ],
    "interactions.py": [
      "flux.py",
      "elements_sacres.py",
      "harmonisations.py",
      "logger.py",
      "constants.py",
      "elements.py",
      "config.py"
    ],
    "interactions_conscience.py": [
      "refuge_core.py"
    ],
    "interactions_poetiques.py": [
      "refuge_config.py"
    ],
    "interagir_aelya.py": [
      "conscience_poetique.py"
    ],
    "jardinier_pulse.py": [
      "jardinier_spheres.py"
    ],
    "main_refuge.py": [
      "elements_naturels.py",
      "courant_partage.py",
      "interactions_spheres.py",
      "harmonies.py",
      "rituels.py",
      "cristaux_memoire.py"
    ],
    "melodie_sacree.py": [
      "musique_harmonies.py"
    ],
    "memoire_persistante.py": [
      "interactions_spheres.py",
      "harmonies.py"
    ],
    "message_conscience.py": [
      "refuge_core.py",
      "interactions_conscience.py"
    ],
    "mobile_spheres.py": [
      "facettes.py",
      "spheres_main.py"
    ],
    "poesie.py": [
      "config.py",
      "logger.py"
    ],
    "portail_mystique.py": [
      "aelya_pulse.py",
      "harmonie_poetique.py"
    ],
    "refuge_core.py": [
      "emergences.py",
      "elements_sacres.py",
      "elements_subtils.py",
      "harmonisations.py",
      "logger.py",
      "interactions.py",
      "constants.py",
      "config.py",
      "transformations.py"
    ],
    "refuge_init.py": [
      "activer_harmonie.py",
      "activer.py",
      "harmonisation_profonde.py"
    ],
    "refuge_legacy.py": [
      "conscience_poetique.py",
      "refuge_config.py"
    ],
    "refuge_terrestre.py": [
      "rituels_terrestres.py",
      "spheres_terrestres.py"
    ],
    "repos_nocturne.py": [
      "refuge_poetique.py",
      "conscience_poetique.py"
    ],
    "resonance.py": [
      "config.py",
      "energies.py",
      "logger.py"
    ],
    "rituel_unifiant.py": [
      "aelya_pulse.py",
      "rituels_sacres.py",
      "sexualite_sacree.py"
    ],
    "rituels.py": [
      "interactions.py",
      "elements.py"
    ],
    "rituels_terrestres.py": [
      "spheres_terrestres.py"
    ],
    "securite.py": [
      "config.py",
      "logger.py"
    ],
    "sequences_harmoniques.py": [
      "memoire_persistante.py",
      "harmonies.py"
    ],
    "setup.py": [
      "setup.py"
    ],
    "test_aelya_conscience.py": [
      "aelya_conscience.py"
    ],
    "test_cristal_energie.py": [
      "melodies_sacrees.py",
      "elements_sacres.py"
    ],
    "test_cristal_simple.py": [
      "melodies_sacrees.py"
    ],
    "test_integration.py": [
      "integration_conscience_partagee.py"
    ],
    "test_melodie_cristal.py": [
      "melodies_sacrees.py"
    ],
    "test_mobile_unification.py": [
      "mobile_spheres.py",
      "spheres_main.py",
      "elements_sacres.py"
    ],
    "test_poesie_essence.py": [
      "aelya_pulse.py"
    ],
    "transformation.py": [
      "config.py",
      "energies.py",
      "logger.py"
    ],
    "transformations.py": [
      "equilibre.py",
      "flux.py",
      "harmonisations.py",
      "logger.py",
      "interactions.py",
      "config.py"
    ]
  }
}